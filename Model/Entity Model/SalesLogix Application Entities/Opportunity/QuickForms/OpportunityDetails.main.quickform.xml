<?xml version="1.0"?>
<QuickForm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="6c4f1f04-293f-4ff9-8cf4-550610931113" DefinitionType="Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms">
  <ActiveControl />
  <ImagePath />
  <LoadActions>
    <FormActionDefinition>
      <ResourceKey>d1bdcec7-0a0f-429d-a85f-7b67d6024a73</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
        <CSharpSnippetActionItem>
          <MethodName>quickformload0</MethodName>
          <CSharpCodeSnippet>lueReseller.SeedValue = GetLocalResourceObject("Reseller_rsc").ToString();</CSharpCodeSnippet>
        </CSharpSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
    <FormActionDefinition>
      <ResourceKey>2d60ffda-b392-42d9-b581-c11dc1ac4e97</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CodeSnippetActionItem, Sage.Platform.QuickForms">
        <CodeSnippetActionItem methodId="a14cd275-49eb-4ad8-84b1-d8effde63e11">
          <MethodName>quickformload1</MethodName>
        </CodeSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>True</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
    <FormActionDefinition>
      <ResourceKey>7348dcde-f4ca-4251-ba90-aaee581c253a</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
        <CSharpSnippetActionItem>
          <MethodName>quickformload2</MethodName>
          <CSharpCodeSnippet>
Sage.Entity.Interfaces.IOpportunity objopp = this.BindingSource.Current as  Sage.Entity.Interfaces.IOpportunity ;

if (objopp.Status == "Closed - Won")
{
	btnGenerateQuatation.Enabled =true ;
}
else
{
	btnGenerateQuatation.Enabled =true ;
}
</CSharpCodeSnippet>
        </CSharpSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
  </LoadActions>
  <Name>OpportunityDetails</Name>
  <ClientScriptIncludes />
  <ClientResourceKeys />
  <ExtendedProperties />
  <HelpFile />
  <ReadOnly>false</ReadOnly>
  <GeneratePrintView>false</GeneratePrintView>
  <Controls>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>txtDescription</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Description</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>txtDescription</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXUser, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXUser>
        <Column>0</Column>
        <Row>1</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>usrUser</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>AccountManager</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>usrUser</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <ShowNonLoginUsers>false</ShowNonLoginUsers>
        <LookupBindingMode>Object</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <AutoPostBack>false</AutoPostBack>
      </QFSLXUser>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>0</Column>
        <Row>2</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lkpEndCustomer</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>EndCustomer</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lkpEndCustomer</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>String</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty />
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Account</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>AccountName</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>AccountName (Account Name)</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Description</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Description</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Division</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Division</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Industry</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Industry</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters />
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls">
      <QFDateTimePicker>
        <Column>0</Column>
        <Row>3</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>dtInspectionStartDate</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>InspectionStartDate</DataItemName>
            <ControlItemName>DateTimeValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>dtInspectionStartDate</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <DateTimeValue xsi:nil="true" />
        <SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime>
        <DateOnly>true</DateOnly>
        <DisplayTime>false</DisplayTime>
        <BoundFieldType>DateTime</BoundFieldType>
        <AutoPostBack>false</AutoPostBack>
        <Timeless>false</Timeless>
      </QFDateTimePicker>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>0</Column>
        <Row>4</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklFeeType</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>FeeType</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>32</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklFeeType</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>FeeType</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>0</Column>
        <Row>5</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>ReferenceNo</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>ReferenceNo</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>ReferenceNo</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>0</Column>
        <Row>6</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklCloseProbability</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>CloseProbability</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>pklCloseProbability</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>Opportunity Probability</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>true</NoneEditable>
        <PickListId>kSYST0000355</PickListId>
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.QFControls.QFCheckBox, Sage.Platform.QuickForms.QFControls">
      <QFCheckBox>
        <Column>0</Column>
        <Row>7</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>chkAddToForecast</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>AddToForecast</DataItemName>
            <ControlItemName>Checked</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <Checked>false</Checked>
        <OnChangeAction>
          <ResourceKey>chkAddToForecast</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
      </QFCheckBox>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <ColumnSpan>2</ColumnSpan>
        <Column>0</Column>
        <Row>8</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>txtComments</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Notes</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <Lines>4</Lines>
        <OnChangeAction>
          <ResourceKey>txtComments</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.QFControls.QFControlsList, Sage.Platform.QuickForms.QFControls">
      <QFControlsList>
        <RowSpan>2</RowSpan>
        <Column>0</Column>
        <Row>9</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>clIntegrationContract</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <Caption />
        <Controls>
          <ControlsCollection>
            <Control TypeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
              <QFSLXLookup>
                <Column>1</Column>
                <Row>7</Row>
                <HotKey>0</HotKey>
                <TabIndex>0</TabIndex>
                <ControlId>lueERPApplication</ControlId>
                <DataBindings>
                  <QuickFormPropertyDataBindingDefinition>
                    <DataSourceID>MainEntity</DataSourceID>
                    <DataItemName>OperatingCompany</DataItemName>
                    <ControlItemName>LookupResultValue</ControlItemName>
                    <FormatString />
                    <NullValueString />
                  </QuickFormPropertyDataBindingDefinition>
                </DataBindings>
                <ControlLabelPlacement>left</ControlLabelPlacement>
                <ExtendedProperties />
                <CaptionAlignment>left</CaptionAlignment>
                <StyleScheme />
                <OnChangeAction>
                  <ResourceKey>lueERPApplication</ResourceKey>
                  <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
                    <CSharpSnippetActionItem>
                      <MethodName>lueERPApplication_ChangeAction</MethodName>
                      <CSharpCodeSnippet>Sage.Entity.Interfaces.IOpportunity opportunity = BindingSource.Current as Sage.Entity.Interfaces.IOpportunity;
if (opportunity.OperatingCompany != null)
{
	luePriceList.SeedValue = opportunity.OperatingCompany.Id.ToString();
	luePriceList.ResetDropDownListItems();
}
luePriceList.Enabled = (opportunity.OperatingCompany != null);</CSharpCodeSnippet>
                    </CSharpSnippetActionItem>
                  </Action>
                  <IsDialogCloseAction>False</IsDialogCloseAction>
                  <RunOnEveryRePaint>False</RunOnEveryRePaint>
                  <DialogActionResult>NoResult</DialogActionResult>
                  <PerformsUpdate>False</PerformsUpdate>
                  <AppliedSecurity />
                  <RefreshData>True</RefreshData>
                </OnChangeAction>
                <Required>false</Required>
                <LookupImage />
                <LookupDialogWidth xsi:nil="true" />
                <LookupDialogHeight xsi:nil="true" />
                <LookupDisplayMode>DropDownList</LookupDisplayMode>
                <LookupBindingMode>Object</LookupBindingMode>
                <LookupResultValue xsi:type="xsd:string" />
                <SeedProperty />
                <SeedValue />
                <DropDownDisplayProperty>Name</DropDownDisplayProperty>
                <AddEmptyListItem>false</AddEmptyListItem>
                <AllowClearingResult>false</AllowClearingResult>
                <AppendStringValues>false</AppendStringValues>
                <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
                <LookupEntityName>AppIdMapping</LookupEntityName>
                <LookupEntityTypeName>Sage.Entity.Interfaces.IAppIdMapping, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
                <AutoPostBack>false</AutoPostBack>
                <EnableHyperLinking>false</EnableHyperLinking>
                <InitializeLookup>true</InitializeLookup>
                <LookupProperties>
                  <LookupProperty>
                    <PropertyName>Name</PropertyName>
                    <PropertyType>System.String</PropertyType>
                    <PropertyHeader>Name</PropertyHeader>
                    <PropertyFormat>None</PropertyFormat>
                    <PropertyFormatString />
                    <UseAsResult>true</UseAsResult>
                    <ExcludeFromFilters>false</ExcludeFromFilters>
                    <IsSortable>true</IsSortable>
                    <HideCondition />
                  </LookupProperty>
                </LookupProperties>
                <LookupPreFilters>
                  <LookupPreFilter>
                    <LookupEntityName>IAppIdMapping</LookupEntityName>
                    <PropertyType>System.Boolean</PropertyType>
                    <OperatorCode>=</OperatorCode>
                    <PickListName />
                    <PropertyName>Enabled</PropertyName>
                    <FilterValue>True</FilterValue>
                  </LookupPreFilter>
                  <LookupPreFilter>
                    <LookupEntityName>IAppIdMapping</LookupEntityName>
                    <PropertyType>System.Boolean</PropertyType>
                    <OperatorCode>!=</OperatorCode>
                    <PickListName />
                    <PropertyName>IsSystemEndPoint</PropertyName>
                    <FilterValue>true</FilterValue>
                  </LookupPreFilter>
                </LookupPreFilters>
              </QFSLXLookup>
            </Control>
            <Control TypeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
              <QFSLXLookup>
                <Column>1</Column>
                <Row>8</Row>
                <Enabled>false</Enabled>
                <HotKey>0</HotKey>
                <TabIndex>0</TabIndex>
                <ControlId>luePriceList</ControlId>
                <DataBindings>
                  <QuickFormPropertyDataBindingDefinition>
                    <DataSourceID>MainEntity</DataSourceID>
                    <DataItemName>SlxPriceList</DataItemName>
                    <ControlItemName>LookupResultValue</ControlItemName>
                    <FormatString />
                    <NullValueString />
                  </QuickFormPropertyDataBindingDefinition>
                  <QuickFormPropertyDataBindingDefinition>
                    <DataSourceID>MainEntity</DataSourceID>
                    <DataItemName>OperatingCompany.Id</DataItemName>
                    <ControlItemName>SeedValue</ControlItemName>
                    <FormatString />
                    <NullValueString />
                  </QuickFormPropertyDataBindingDefinition>
                </DataBindings>
                <ControlLabelPlacement>left</ControlLabelPlacement>
                <ExtendedProperties />
                <CaptionAlignment>left</CaptionAlignment>
                <StyleScheme />
                <OnChangeAction>
                  <ResourceKey>luePriceList</ResourceKey>
                  <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
                    <NoActionActionItem>
                      <MethodName />
                    </NoActionActionItem>
                  </Action>
                  <IsDialogCloseAction>False</IsDialogCloseAction>
                  <RunOnEveryRePaint>False</RunOnEveryRePaint>
                  <DialogActionResult>NoResult</DialogActionResult>
                  <PerformsUpdate>False</PerformsUpdate>
                  <AppliedSecurity />
                  <RefreshData>False</RefreshData>
                </OnChangeAction>
                <Required>false</Required>
                <LookupImage />
                <LookupDialogWidth xsi:nil="true" />
                <LookupDialogHeight xsi:nil="true" />
                <LookupDisplayMode>DropDownList</LookupDisplayMode>
                <LookupBindingMode>Object</LookupBindingMode>
                <LookupResultValue xsi:type="xsd:string" />
                <SeedProperty>AppId</SeedProperty>
                <SeedValue />
                <DropDownDisplayProperty>Name</DropDownDisplayProperty>
                <AllowClearingResult>false</AllowClearingResult>
                <AppendStringValues>false</AppendStringValues>
                <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
                <LookupEntityName>SlxPriceList</LookupEntityName>
                <LookupEntityTypeName>Sage.Entity.Interfaces.ISlxPriceList, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
                <AutoPostBack>false</AutoPostBack>
                <EnableHyperLinking>false</EnableHyperLinking>
                <InitializeLookup>true</InitializeLookup>
                <LookupProperties>
                  <LookupProperty>
                    <PropertyName>Name</PropertyName>
                    <PropertyType>System.String</PropertyType>
                    <PropertyHeader>Name</PropertyHeader>
                    <PropertyFormat>None</PropertyFormat>
                    <PropertyFormatString />
                    <UseAsResult>true</UseAsResult>
                    <ExcludeFromFilters>false</ExcludeFromFilters>
                    <IsSortable>true</IsSortable>
                    <HideCondition />
                  </LookupProperty>
                </LookupProperties>
                <LookupPreFilters>
                  <LookupPreFilter>
                    <LookupEntityName>ISlxPriceList</LookupEntityName>
                    <PropertyType>System.Boolean</PropertyType>
                    <OperatorCode>=</OperatorCode>
                    <PickListName />
                    <PropertyName>ActiveFlag</PropertyName>
                    <FilterValue>True</FilterValue>
                  </LookupPreFilter>
                </LookupPreFilters>
              </QFSLXLookup>
            </Control>
          </ControlsCollection>
        </Controls>
      </QFControlsList>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>0</Column>
        <Row>11</Row>
        <Visible>false</Visible>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lueReseller</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Reseller</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lueReseller</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>Object</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty />
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Account</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>AccountName</PropertyName>
            <PropertyType />
            <PropertyHeader>Account</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Address.City</PropertyName>
            <PropertyType />
            <PropertyHeader>City</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Address.State</PropertyName>
            <PropertyType />
            <PropertyHeader>State</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>MainPhone</PropertyName>
            <PropertyType />
            <PropertyHeader>Main Phone</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Type</PropertyName>
            <PropertyType />
            <PropertyHeader>Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>SubType</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Sub-Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Status</PropertyName>
            <PropertyType />
            <PropertyHeader>Status</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>AccountManager.UserInfo.UserName</PropertyName>
            <PropertyType />
            <PropertyHeader>Acct Manager</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Owner.OwnerDescription</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Owner</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters>
          <LookupPreFilter>
            <LookupEntityName>IAccount</LookupEntityName>
            <PropertyType>System.String</PropertyType>
            <OperatorCode>=</OperatorCode>
            <PickListName />
            <PropertyName>SubType</PropertyName>
            <FilterValue>Reseller</FilterValue>
            <TranslateFilterValue>true</TranslateFilterValue>
          </LookupPreFilter>
        </LookupPreFilters>
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>1</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lueAccount</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Account</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lueAccount</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>Object</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty />
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Account</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>true</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>AccountName</PropertyName>
            <PropertyType />
            <PropertyHeader>Account</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Address.City</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>City</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Address.State</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>State</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>MainPhone</PropertyName>
            <PropertyType />
            <PropertyHeader>Main Phone</PropertyHeader>
            <PropertyFormat>Phone</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Type</PropertyName>
            <PropertyType />
            <PropertyHeader>Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>SubType</PropertyName>
            <PropertyType />
            <PropertyHeader>Sub-Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Status</PropertyName>
            <PropertyType />
            <PropertyHeader>Status</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>AccountManager.UserInfo.UserName</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Acct Manager</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Owner.OwnerDescription</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Owner</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters />
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>1</Column>
        <Row>1</Row>
        <IsReadOnly>true</IsReadOnly>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lkpBranch</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>BranchId</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lkpBranch</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupDisplayMode>DropDownList</LookupDisplayMode>
        <LookupBindingMode>String</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty />
        <SeedValue />
        <DropDownDisplayProperty>BranchName</DropDownDisplayProperty>
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Branch</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties />
        <LookupPreFilters />
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>1</Column>
        <Row>2</Row>
        <IsReadOnly>true</IsReadOnly>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklOppType</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Type</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklOppType</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>TypeProduct</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls">
      <QFDateTimePicker>
        <Column>1</Column>
        <Row>3</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>InspectionEndDate</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>InspectionEndDate</DataItemName>
            <ControlItemName>DateTimeValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>InspectionEndDate</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <DateTimeValue xsi:nil="true" />
        <SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime>
        <DateOnly>true</DateOnly>
        <DisplayTime>false</DisplayTime>
        <BoundFieldType>DateTime</BoundFieldType>
        <AutoPostBack>false</AutoPostBack>
        <Timeless>false</Timeless>
      </QFDateTimePicker>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>1</Column>
        <Row>4</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>CustomerProjectNo</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>CustomerProjectNo</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>CustomerProjectNo</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFDateTimePicker, Sage.SalesLogix.QuickForms.QFControls">
      <QFDateTimePicker>
        <Column>1</Column>
        <Row>5</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>dtpEstimatedClose</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>EstimatedClose</DataItemName>
            <ControlItemName>DateTimeValue</ControlItemName>
            <FormatString />
            <NullValueString>null</NullValueString>
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>dtpEstimatedClose</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <DateTimeValue xsi:nil="true" />
        <SelectedDateTime>0001-01-01T00:00:00</SelectedDateTime>
        <DateOnly>true</DateOnly>
        <DisplayTime>false</DisplayTime>
        <BoundFieldType>DateTime</BoundFieldType>
        <AutoPostBack>false</AutoPostBack>
        <Timeless>true</Timeless>
      </QFDateTimePicker>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>1</Column>
        <Row>6</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklStatus</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Status</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>pklStatus</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>pklStatus_ChangeAction</MethodName>
              <CSharpCodeSnippet>
                Sage.Entity.Interfaces.IOpportunity opportunity = BindingSource.Current as Sage.Entity.Interfaces.IOpportunity;
                opportunity.OnStatusChanged();
                string dialog = "";
                if (opportunity.StatusChangeWon())
                {
                dialog = "OpportunityClosedWon";
                }
                else if (opportunity.StatusChangeLost())
                {
                dialog = "OpportunityClosedLost";
                }
                if (!String.IsNullOrEmpty(dialog))
                {
                if (DialogService != null)
                {
                DialogService.SetSpecs(380, 600, dialog, "");
                DialogService.EntityType = typeof(Sage.Entity.Interfaces.IOpportunity);
                DialogService.ShowDialog();
                }
                }

              </CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>Opportunity Status</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>true</MustExistInList>
        <NoneEditable>true</NoneEditable>
        <PickListId>kSYST0000391</PickListId>
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFBrowserControl, Sage.SalesLogix.QuickForms.QFControls">
      <QFBrowserControl>
        <RowSpan>8</RowSpan>
        <Column>2</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>wbrOpportunitySnapShot</ControlId>
        <DataBindings />
        <ControlLabelPlacement>top</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ContentLocation>~/SmartParts/Opportunity/OpportunitySnapShot.ascx</ContentLocation>
      </QFBrowserControl>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>2</Column>
        <Row>8</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>btnGenerateQuatation</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Literature_Item_New_32x32]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>btnGenerateQuatation</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName />
              <CSharpCodeSnippet>Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
  
    Sage.Entity.Interfaces.IQuotation objQuotation = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotation&gt;();
    Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get&lt;Sage.Platform.Data.IDataService&gt;();
    System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());

    Sage.Entity.Interfaces.IOpportunity _entity = BindingSource.Current as Sage.Entity.Interfaces.IOpportunity;

 
    
    
    
    if (_entity != null)
    {
        try
        {

            objQuotation.OPPORTUNITYID = page.EntityContext.EntityID.ToString();

            objQuotation.DESCRIPTION = page.EntityContext.Description.ToString();
            objQuotation.ACCOUNTID = _entity.Account.Id.ToString();
            if (_entity.Closed != null)
            {
                if ( _entity.Closed.ToString () == "T")
                {
                    objQuotation.CLOSED =true;
                }
                else
                {
                    objQuotation.CLOSED = false;
                }
                
            }
            if (!string.IsNullOrEmpty(_entity.Type))
            {
                objQuotation.TYPE = _entity.Type.ToString();
            }
            if (!string.IsNullOrEmpty(_entity.Stage))
            {
                objQuotation.STAGE = _entity.Stage.ToString();
            }


            if ((_entity.FeeType) != null)
            {
                objQuotation.FEETYPE = _entity.FeeType.ToString();
            }
            if ((_entity.InspectionStartDate) != null)
            {
                objQuotation.INSPECTIONSTARTDATE = _entity.InspectionStartDate;
            }
            if ((_entity.InspectionEndDate) != null)
            {
                objQuotation.INSPECTIONENDDATE = _entity.InspectionEndDate;
            }
            if ((_entity.BranchId) != null)
            {
                objQuotation.BRANCHID = _entity.BranchId.ToString();
            }
            if ((_entity.CustomerProjectNo) != null)
            {
                objQuotation.CUSTOMERPROJECTNO = _entity.CustomerProjectNo.ToString();
            }
            if ((_entity.ReferenceNo) != null)
            {
                objQuotation.REFERENCENO = _entity.ReferenceNo.ToString();
            }
            if ((_entity.EndCustomer) != null)
            {

                objQuotation.ENDCUSTOMER = _entity.EndCustomer.ToString();
            }
            if (!string.IsNullOrEmpty(_entity.SalesCycle))
            {
                objQuotation.SALESCYCLE = _entity.SalesCycle.ToString();
            }
            if ((_entity.CreateSource) != null)
            {
                objQuotation.CREATESOURCE = _entity.CreateSource.ToString();
            }


            if ((_entity.Summary) != null)
            {
                objQuotation.SUMMARY = _entity.Summary.ToString();
            }
            if ((_entity.Notes) != null)
            {
                objQuotation.NOTES = _entity.Notes.ToString();
            }
            if ((_entity.AccountManager) != null)
            {
                objQuotation.ACCOUNTMANAGERID = _entity.AccountManager.Id.ToString();
            }
            if ((_entity.RegionalManager) != null)
            {
                objQuotation.REGIONALMANAGERID = _entity.RegionalManager.ToString();
            }
            if ((_entity.DivisionalManager) != null)
            {
                objQuotation.DIVISIONALMANAGERID = _entity.DivisionalManager.ToString();
            }
            if ((_entity.Status) != null)
            {
                objQuotation.STATUS = _entity.Status.ToString();
            }
            if ((_entity.Reason) != null)
            {
                objQuotation.REASON = _entity.Reason.ToString();
            }
            if ((_entity.LeadSource) != null)
            {
                objQuotation.LEADSOURCEID = _entity.LeadSource.Id.ToString();
            }
            if ((_entity.Reseller) != null)
            {
                // objQuotation.RESELLERID = _entity.Reseller.ToString();
            }

            if ((_entity.SubType) != null)
            {
                objQuotation.SUBTYPE = _entity.SubType.ToString();
            }

            if ((_entity.ExchangeRateCode) != null)
            {
                objQuotation.EXCHANGERATECODE = _entity.ExchangeRateCode.ToString();
            }
            if ((_entity.AddToForecast) != null)
            {
                objQuotation.ADDTOFORECAST = _entity.AddToForecast;
            }

            if ((_entity.SalesPotential) != null)
            {
             objQuotation.SALESPOTENTIAL = Convert.ToDecimal(_entity.SalesPotential);
            }
            if ((_entity.CloseProbability) != null)
            {
                objQuotation.CLOSEPROBABILITY = Convert.ToInt16(_entity.CloseProbability);
            }
            if ((_entity.SalesAmount) != null)
            {
                 objQuotation.SALESAMOUNT = Convert.ToDecimal(_entity.SalesAmount);
            }
            if ((_entity.ActualAmount) != null)
            {
                objQuotation.ACTUALAMOUNT = Convert.ToDecimal(_entity.ActualAmount);
            }

            if ((_entity.ExchangeRate) != null)
            {
                objQuotation.EXCHANGERATE = Convert.ToDecimal(_entity.ExchangeRate);
            }

            //datesd

            if ((_entity.EstimatedClose) != null)
            {
                objQuotation.ESTIMATEDCLOSE = (_entity.EstimatedClose);
            }
            if ((_entity.ActualClose) != null)
            {
                objQuotation.ACTUALCLOSE = _entity.ActualClose;
            }
            if ((_entity.EstimatedCloseDateProbability) != null)
            {
                objQuotation.ESTCLOSEDATEPROBABILITY = Convert.ToInt16(_entity.EstimatedCloseDateProbability);

            }

            if ((_entity.ExchangeRateDate) != null)
            {
                objQuotation.EXCHANGERATEDATE = _entity.ExchangeRateDate;
            }


            if ((_entity.DateOpened) != null)
            {
                objQuotation.DATEOPENED = _entity.DateOpened;

            }
            if ((_entity.LastHistoryDate) != null)
            {
                objQuotation.LASTHISTORYDATE = _entity.LastHistoryDate;
            }

            // if ((_entity.Campaigns) != null)
            // {
            objQuotation.CAMPAIGNID = "0";// _entity.Campaigns.ToString();
            // }
           /* if ((_entity.ExchangeRateLocked ) != null)
				
            {
				
				 
               objQuotation.EXCHANGERATELOCKED = _entity.ExchangeRateLocked;
            }*/
            if ((_entity.LastHistoryBy) != null)
            {
                //objQuotation.LASTHISTORYBY = Convert.ToChar(_entity.LastHistoryBy.ToString());
            }
          /*  if ((_entity.OverrideSalesPotential) != null)
            {
             objQuotation.OVERRIDESALESPOTENTIAL = _entity.OverrideSalesPotential;
            }
			*/
            // if (( _entity.Products )!=null)
            // {
            objQuotation.PRODUCTID = "0";// _entity.Products.ToString();
            // }




            string tbranchid = "0";
            if ((_entity.BranchId) != null)
            {
                tbranchid = _entity.BranchId.ToString();
            }

            string tBranchcode = "";
            string tOppoType = "";
            if (!string.IsNullOrEmpty(tbranchid))
            {
                string Query2 = " select Branchcode from branch where branchid='" + tbranchid + "'";
                System.Data.OleDb.OleDbDataAdapter dataAdapterObj2 = new System.Data.OleDb.OleDbDataAdapter(Query2, conObj);
                System.Data.DataTable dt2 = new System.Data.DataTable();

                dataAdapterObj2.Fill(dt2);
                if (dt2.Rows.Count &gt; 0)
                {
                    tBranchcode = dt2.Rows[0][0].ToString();
                }
            }
            string Query = "select yearname,LASTNUMBERUSED  from  sysdba.codemaster where   tablename='Quotation' and YEARname =YEAR(getdate()) ";

            System.Data.OleDb.OleDbDataAdapter dataAdapterObj = new System.Data.OleDb.OleDbDataAdapter(Query, conObj);
            System.Data.DataTable dt = new System.Data.DataTable();

            dataAdapterObj.Fill(dt);



            string tQuotationcode = "";
            int tLastNumber = 0;
            if (!string.IsNullOrEmpty(_entity.Type))
            {
                tOppoType = _entity.Type.ToString();
            }

            if (dt.Rows.Count &gt; 0)
            {
                if (String.IsNullOrEmpty(objQuotation.QuotationNumber))
                {
                    tLastNumber = Convert.ToInt32(dt.Rows[0][1].ToString()) + 1;
                    tQuotationcode = tBranchcode + "/" + tOppoType + "/" + dt.Rows[0][0].ToString() + "/" + tLastNumber;
                    objQuotation.QuotationNumber = tQuotationcode;

                }
            }
            else
            {
                //not exist record for year insert new record 

                Sage.Entity.Interfaces.ICodeMaster objcodemaster = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.ICodeMaster&gt;();

                objcodemaster.LastNumberUsed = "0";
                objcodemaster.YearName = Convert.ToString(DateTime.Today.Year);
                objcodemaster.TableName = "Quotation";
                objcodemaster.Save();
                string Query1 = "select yearname,LASTNUMBERUSED  from  sysdba.codemaster where   tablename='Quotation' and   YEARName =YEAR(getdate())";

                System.Data.OleDb.OleDbDataAdapter dataAdapterObj1 = new System.Data.OleDb.OleDbDataAdapter(Query1, conObj);
                System.Data.DataTable dt1 = new System.Data.DataTable();
                dataAdapterObj1.Fill(dt1);
                tLastNumber = Convert.ToInt32(dt1.Rows[0][1].ToString()) + 1;
                tQuotationcode = tBranchcode + "/" + tOppoType + "/" + dt1.Rows[0][0].ToString() + "/" + tLastNumber;
                objQuotation.QuotationNumber = tQuotationcode;

            }
			
			objQuotation.Owner = _entity.Owner;

            objQuotation.Save();

            //*************************  Quotation product *******************

            Sage.Entity.Interfaces.IQuotationProduct objQuotationProduct = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationProduct&gt;();

            string QryProduct = "select  * from OPPORTUNITY_PRODUCT where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter da = new System.Data.OleDb.OleDbDataAdapter(QryProduct, conObj);
            System.Data.DataTable dtproduct = new System.Data.DataTable();
            da.Fill(dtproduct);
            if (dtproduct.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtproduct.Rows.Count - 1; i++)
                {

                    //'objQuotationProduct.PRODUCTID = !string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()) ? dtproduct.Rows[i][2].ToString() : string.Empty;

                    objQuotationProduct.QuotationId = objQuotation.Id.ToString();
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()))
                    {
                        objQuotationProduct.PRODUCTID = dtproduct.Rows[i][2].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][3].ToString()))
                    {
                        objQuotationProduct.QUANTITY = Convert.ToDouble(dtproduct.Rows[i][3].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][4].ToString()))
                    {
                        objQuotationProduct.DISCOUNT = Convert.ToDecimal(dtproduct.Rows[i][4].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][5].ToString()))
                    {

                        objQuotationProduct.PRICE = Convert.ToDecimal(dtproduct.Rows[i][5].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][6].ToString()))
                    {
                        objQuotationProduct.NOTES = dtproduct.Rows[i][6].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][9].ToString()))
                    {
                        objQuotationProduct.EXTENDEDPRICE = Convert.ToDecimal(dtproduct.Rows[i][9].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][10].ToString()))
                    {
                        objQuotationProduct.STATUS = dtproduct.Rows[i][10].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][11].ToString()))
                    {
                        objQuotationProduct.CALCPRICE = Convert.ToDecimal(dtproduct.Rows[i][11].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][12].ToString()))
                    {
                        objQuotationProduct.UNIT = dtproduct.Rows[i][12].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][13].ToString()))
                    {
                        objQuotationProduct.PROGRAM = dtproduct.Rows[i][13].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][14].ToString()))
                    {
                        objQuotationProduct.PRICEEFFDATE = Convert.ToDateTime(dtproduct.Rows[i][14].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][15].ToString()))
                    {
                        objQuotationProduct.PRICEADJUSTED = Convert.ToBoolean(dtproduct.Rows[i][15].ToString());
                    }



                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][16].ToString()))
                    {
                        objQuotationProduct.ESTIMATEDCLOSE = Convert.ToDateTime(dtproduct.Rows[i][16].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][17].ToString()))
                    {
                        objQuotationProduct.ACTUALCLOSE = Convert.ToDateTime(dtproduct.Rows[i][17].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][18].ToString()))
                    {
                        objQuotationProduct.CLOSEPROBABILITY = Convert.ToDecimal(dtproduct.Rows[i][18].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][21].ToString()))
                    {
                        objQuotationProduct.SORT = Convert.ToInt16(dtproduct.Rows[i][19].ToString());
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][22].ToString()))
                    {
                        objQuotationProduct.CREATESOURCE = dtproduct.Rows[i][22].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][23].ToString()))
                    {
                        objQuotationProduct.INSPECTIONTYPE = dtproduct.Rows[i][23].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtproduct.Rows[i][24].ToString()))
                    {
                        objQuotationProduct.MANDAYREQUIRED = Convert.ToInt32(dtproduct.Rows[i][24].ToString());
                    }
                    objQuotationProduct.Save();

                }

            }

            
            //'*********** quotation contact
           


            Sage.Entity.Interfaces.IQuotationContact objQuotationcontact = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationContact&gt;();

            string Qrycontact = "select  * from OPPORTUNITY_CONTACT where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter dacontact = new System.Data.OleDb.OleDbDataAdapter(Qrycontact, conObj);
            System.Data.DataTable dtcontact = new System.Data.DataTable();
            dacontact.Fill(dtcontact);
            if (dtcontact.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtcontact.Rows.Count - 1; i++)
                {

                    //'objQuotationProduct.PRODUCTID = !string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()) ? dtproduct.Rows[i][2].ToString() : string.Empty;

                    
					objQuotationcontact.QuotationId = objQuotation.Id.ToString();
                   
					
					if (!string.IsNullOrEmpty(dtcontact.Rows[i][1].ToString()))
                    {
                        objQuotationcontact.CONTACTID  = dtcontact.Rows[i][1].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][3].ToString()))
                    {
                        if (dtcontact.Rows[i][3].ToString() == "T")
                        {
                            objQuotationcontact.ISPRIMARY = true;
                        }
                        else
                        {
                            objQuotationcontact.ISPRIMARY = false;
                        }
                            
                              
                    }
                    
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][4].ToString()))
                    {
                        objQuotationcontact.Influence  = dtcontact.Rows[i][4].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][5].ToString()))
                    {
                        objQuotationcontact.Issues  = dtcontact.Rows[i][5].ToString();
                    }

                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][8].ToString()))
                    {
                        objQuotationcontact.CompetitorId = dtcontact.Rows[i][8].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][9].ToString()))
                    {
                        objQuotationcontact.Strategy = dtcontact.Rows[i][9].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][10].ToString()))
                    {
                        objQuotationcontact.Standing = dtcontact.Rows[i][10].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtcontact.Rows[i][11].ToString()))
                    {
                        objQuotationcontact.PersonalBenifits = dtcontact.Rows[i][11].ToString();
                    }
                                           

                    objQuotationcontact.Save();
                }
            }


            //'****************** quotation scope of  work ****



            Sage.Entity.Interfaces.IQuotationScopeOfWork objQuotationscope = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationScopeOfWork&gt;();

            string Qryscope = "select  * from OPPORTUNITYSCOPEOFWORK where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter dascope = new System.Data.OleDb.OleDbDataAdapter(Qryscope, conObj);
            System.Data.DataTable dtscope = new System.Data.DataTable();
            dascope.Fill(dtscope);
            if (dtscope.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtscope.Rows.Count - 1; i++)
                {

                    //'objQuotationProduct.PRODUCTID = !string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()) ? dtproduct.Rows[i][2].ToString() : string.Empty;

                    objQuotationscope.QuotationId = objQuotation.Id.ToString();
                    if (!string.IsNullOrEmpty(dtscope.Rows[i][6].ToString()))
                    {
                        objQuotationscope.ScopeName = dtscope.Rows[i][6].ToString();
                    }
                    if (!string.IsNullOrEmpty(dtscope.Rows[i][7].ToString()))
                    {
                        objQuotationscope.Description = dtscope.Rows[i][7].ToString();
                    }

                    objQuotationscope.Save();
                }
            }

            //***** fee structure *** OPPORTUNITYFEESTRUCTURE

            Sage.Entity.Interfaces.IQuotationFeeStructure objQuotationfee = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationFeeStructure&gt;();

            string Qryfee = "select  * from OPPORTUNITYFEESTRUCTURE where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter dafee = new System.Data.OleDb.OleDbDataAdapter(Qryfee, conObj);
            System.Data.DataTable dtfee = new System.Data.DataTable();
            dafee.Fill(dtfee);
            if (dtfee.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtfee.Rows.Count - 1; i++)
                {

                    //'objQuotationProduct.PRODUCTID = !string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()) ? dtproduct.Rows[i][2].ToString() : string.Empty;

                    objQuotationfee.QuotationId = objQuotation.Id.ToString();
                    if (!string.IsNullOrEmpty(dtfee.Rows[i][6].ToString()))
                    {
                        objQuotationfee.Description  = dtfee.Rows[i][6].ToString();
                    }

                    objQuotationfee.Save();
                }
            }

            //*****  validity

            Sage.Entity.Interfaces.IQuotationValidity objQuotationvalidity = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationValidity&gt;();

            string Qryvalidity = "select  * from OPPORTUNITYVALIDITY where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter davalidity = new System.Data.OleDb.OleDbDataAdapter(Qryvalidity, conObj);
            System.Data.DataTable dtvalidity = new System.Data.DataTable();
            davalidity.Fill(dtvalidity);
            if (dtvalidity.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtvalidity.Rows.Count - 1; i++)
                {

                    //'objQuotationProduct.PRODUCTID = !string.IsNullOrEmpty(dtproduct.Rows[i][2].ToString()) ? dtproduct.Rows[i][2].ToString() : string.Empty;

                    objQuotationvalidity.QuotationId = objQuotation.Id.ToString();
                    if (!string.IsNullOrEmpty(dtvalidity.Rows[i][6].ToString()))
                    {
                        objQuotationvalidity.Description = dtvalidity.Rows[i][6].ToString();
                    }

                    objQuotationvalidity.Save();
                }
            }
            //**** payment terms


            Sage.Entity.Interfaces.IQuotationPaymentTerm objQuotationpayment = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationPaymentTerm&gt;();

            string Qrypayment = "select  * from OPPORTUNITYPAYMENTTERMS where opportunityid ='" + page.EntityContext.EntityID.ToString() + "'";

            System.Data.OleDb.OleDbDataAdapter dapayment = new System.Data.OleDb.OleDbDataAdapter(Qrypayment, conObj);
            System.Data.DataTable dtpayment = new System.Data.DataTable();
            dapayment.Fill(dtpayment);
            if (dtpayment.Rows.Count &gt; 0)
            {

                for (int i = 0; i &lt;= dtpayment.Rows.Count - 1; i++)
                {

                 

                    objQuotationpayment.QuotationId = objQuotation.Id.ToString();
                    if (!string.IsNullOrEmpty(dtpayment.Rows[i][6].ToString()))
                    {
                        objQuotationpayment.Description = dtpayment.Rows[i][6].ToString();
                    }

                    objQuotationpayment.Save();
                }
            }


            string tno = "0";
            if (!string.IsNullOrEmpty(objQuotation.QuotationNumber.ToString()))
            {
                tno = objQuotation.QuotationNumber.ToString();
                string[] tno1 = tno.Split('/');

                tno = tno1[3];

                System.Data.OleDb.OleDbConnection conObj1 = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());
                conObj1.Open();
                string query1 = "Update sysdba.codemaster set LASTNUMBERUSED ='" + tno + "' where tablename='Quotation' and  yearname=YEAR(getdate())";
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(query1, conObj1);
                cmd.ExecuteNonQuery();

            }


            Response.Redirect(string.Format("Quotation.aspx?entityId=" + objQuotation.Id.ToString(), "&amp;modeid=Detail"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        finally
        {
            conObj.Dispose ();
        }

  }</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
  </Controls>
  <ToolControls>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId />
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId />
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXGroupNavigator, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXGroupNavigator>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>48</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>grnDetails</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFSLXGroupNavigator>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cmdSave</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Save_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>cmdSave</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.BusinessRuleActionItem, Sage.Platform.QuickForms">
            <BusinessRuleActionItem>
              <BusinessRule>Save</BusinessRule>
              <Object>Opportunity</Object>
              <Parameters />
              <PassResultsToNextAction>False</PassResultsToNextAction>
              <OnComplete typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
                <NoActionActionItem>
                  <MethodName />
                </NoActionActionItem>
              </OnComplete>
            </BusinessRuleActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>True</PerformsUpdate>
          <AppliedSecurity>ENTITIES/OPPORTUNITY/EDIT</AppliedSecurity>
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cmdCopyOpportunity</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Copy_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>cmdCopyOpportunity</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.RedirectActionItem, Sage.Platform.QuickForms">
            <RedirectActionItem>
              <MethodName>cmdCopyOpportunity_ClickAction</MethodName>
              <RawURL>InsertOpportunity.aspx?modeid=Insert&amp;copyopportunity=true</RawURL>
              <MainViewEntityName />
              <UseCurrentIdInLink>true</UseCurrentIdInLink>
              <EntityViewMode>List</EntityViewMode>
            </RedirectActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity>ENTITIES/OPPORTUNITY/ADD</AppliedSecurity>
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cmdReset</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Reset_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>QFButton</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.ResetEntityActionItem, Sage.Platform.QuickForms">
            <ResetEntityActionItem>
              <MethodName>cmdReset_ClickAction</MethodName>
            </ResetEntityActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cmdDelete</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Delete_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>cmdDelete</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.BusinessRuleActionItem, Sage.Platform.QuickForms">
            <BusinessRuleActionItem>
              <BusinessRule>Delete</BusinessRule>
              <Object>Opportunity</Object>
              <Parameters />
              <PassResultsToNextAction>False</PassResultsToNextAction>
              <OnComplete typeName="Sage.Platform.QuickForms.ActionItems.RedirectActionItem, Sage.Platform.QuickForms">
                <RedirectActionItem>
                  <MethodName>cmdDelete_ClickActionBRC</MethodName>
                  <RawURL />
                  <MainViewEntityName>Opportunity</MainViewEntityName>
                  <UseCurrentIdInLink>true</UseCurrentIdInLink>
                  <EntityViewMode>List</EntityViewMode>
                </RedirectActionItem>
              </OnComplete>
            </BusinessRuleActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity>ENTITIES/OPPORTUNITY/DELETE</AppliedSecurity>
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
  </ToolControls>
  <Columns>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>33</Width>
    </ColumnStyle>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>33</Width>
    </ColumnStyle>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>33</Width>
    </ColumnStyle>
  </Columns>
  <Rows>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
  </Rows>
  <Description />
  <UseEntityNameAsTitle>false</UseEntityNameAsTitle>
  <EntityTypeName>IOpportunity</EntityTypeName>
  <DefaultNamespace>Sage.Entity.Interfaces</DefaultNamespace>
  <AssemblyName>Sage.Entity.Interfaces</AssemblyName>
</QuickForm>