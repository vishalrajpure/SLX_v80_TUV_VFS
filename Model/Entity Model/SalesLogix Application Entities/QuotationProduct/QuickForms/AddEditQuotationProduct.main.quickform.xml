<?xml version="1.0"?>
<QuickForm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="8f11e89a-9883-4584-8ea7-eb05a5d8c5d4" DefinitionType="Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms">
  <ActiveControl />
  <ImagePath />
  <LoadActions>
    <FormActionDefinition>
      <ResourceKey>6da17386-a8d1-42bb-894b-1d3886ea5437</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
        <CSharpSnippetActionItem>
          <MethodName>quickformload0</MethodName>
          <CSharpCodeSnippet>Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
    if (!page.IsInsertMode)
    {
        pklCriticality.ReadOnly = true;
        pklType.ReadOnly = true;
       // lkpProduct.ReadOnly = true;
        Price.ReadOnly = true;
        pklFamily.ReadOnly = true;
        
    }</CSharpCodeSnippet>
        </CSharpSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
  </LoadActions>
  <Name>AddEditQuotationProduct</Name>
  <ClientScriptIncludes />
  <ClientResourceKeys />
  <ExtendedProperties />
  <HelpFile />
  <ReadOnly>false</ReadOnly>
  <GeneratePrintView>false</GeneratePrintView>
  <Controls>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <ColumnSpan>2</ColumnSpan>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lkpProduct</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>PRODUCTID</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lkpProduct</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>lkpProduct_ChangeAction</MethodName>
              <CSharpCodeSnippet>
 
Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get&lt;Sage.Platform.Data.IDataService&gt;();
System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());


Sage.Entity.Interfaces.IQuotationProduct entity = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct; 
 

    if (!string.IsNullOrEmpty( lkpProduct.LookupResultValue.ToString()))
{
    string Query2 = " select CRITICALITY,TYPE,FAMILY ,PRICE  from product  where PRODUCTID='" + lkpProduct.LookupResultValue.ToString() + "'";
    System.Data.OleDb.OleDbDataAdapter dataAdapterObj2 = new System.Data.OleDb.OleDbDataAdapter(Query2, conObj);
    System.Data.DataTable dt2 = new System.Data.DataTable();
      
    dataAdapterObj2.Fill(dt2);
    if (dt2.Rows.Count &gt; 0)
    {


      
       //pklCriticality.PickListValue   = dt2.Rows[0][0].ToString();
      // pklType.PickListValue = dt2.Rows[0][1].ToString() ;
      // pklFamily.PickListValue = dt2.Rows[0][2].ToString() ;
        Price.Text = dt2.Rows[0][3].ToString();
        ExtendedPrice.Text = dt2.Rows[0][3].ToString();
		MandayRequired.Text = "3";
    }
}</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>String</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty>Quotation</SeedProperty>
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Product</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IProduct, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>Criticality</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Category</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Family</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Family</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Name</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Name</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Price</PropertyName>
            <PropertyType>System.Decimal</PropertyType>
            <PropertyHeader>Price</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Type</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters>
          <LookupPreFilter>
            <LookupEntityName>IProduct</LookupEntityName>
            <PropertyType>System.String</PropertyType>
            <OperatorCode>=</OperatorCode>
            <PickListName />
            <PropertyName>Type</PropertyName>
            <FilterValue>PED</FilterValue>
          </LookupPreFilter>
        </LookupPreFilters>
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>0</Column>
        <Row>1</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklCriticality</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Product.Criticality</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklCriticality</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>ProductCriticality</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>0</Column>
        <Row>2</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklType</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Product.Type</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklType</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>TypeProduct</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>0</Column>
        <Row>3</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>Price</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Product.Price</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>Price</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>0</Column>
        <Row>4</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>Discount</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>DISCOUNT</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>Discount</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>Discount_ChangeAction</MethodName>
              <CSharpCodeSnippet>Sage.Entity.Interfaces.IQuotationProduct objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct;

Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get&lt;Sage.Platform.Data.IDataService&gt;();
System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());


Sage.Entity.Interfaces.IQuotationProduct entity = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct;
string tprice = "0";
    

if (!string.IsNullOrEmpty(lkpProduct.LookupResultValue.ToString()))
{
    string Query2 = " select CRITICALITY,TYPE,FAMILY ,isnull(PRICE,0)  from product  where PRODUCTID='" + lkpProduct.LookupResultValue.ToString() + "'";
    System.Data.OleDb.OleDbDataAdapter dataAdapterObj2 = new System.Data.OleDb.OleDbDataAdapter(Query2, conObj);
    System.Data.DataTable dt2 = new System.Data.DataTable();

    dataAdapterObj2.Fill(dt2);
    if (dt2.Rows.Count &gt; 0)
    {

      

        tprice = dt2.Rows[0][3].ToString();
      
    }
}
    
    
    if (!String.IsNullOrEmpty(Discount.Text))
    {

        decimal t1=0;
        
    //    t1 = Convert.ToDecimal(tprice) - ((Convert.ToDecimal(tprice)) * Convert.ToDecimal(Discount.Text));
        t1 = Convert.ToDecimal(tprice) - ( Convert.ToDecimal(Discount.Text));
            
        if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; ((!String.IsNullOrEmpty(Quantity.Text))))
        {
            objproduct.CALCPRICE = t1;

            objproduct.EXTENDEDPRICE = t1 * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (!String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.CALCPRICE = t1;
            objproduct.EXTENDEDPRICE = 0;// Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
            
        else if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
        {

            objproduct.CALCPRICE = t1;
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.CALCPRICE = t1;
            objproduct.EXTENDEDPRICE = 0;//Convert.ToInt32(MandayRequired.Text);
        }
        else
        {

            objproduct.CALCPRICE = t1;
            objproduct.EXTENDEDPRICE = t1 * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }

    }</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXCurrency>
        <Column>0</Column>
        <Row>5</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>CALCPRICE</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>CALCPRICE</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>CALCPRICE</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>CALCPRICE_ChangeAction</MethodName>
              <CSharpCodeSnippet>Sage.Entity.Interfaces.IQuotationProduct objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct;
    //    Sage.Entity.Interfaces.IQuotationProduct objQuotation = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationProduct&gt;();
    // objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * 10;




if (!String.IsNullOrEmpty(CALCPRICE.Text))
{

    if ((!String.IsNullOrEmpty(MandayRequired.Text)) &amp;&amp; ((!String.IsNullOrEmpty(Quantity.Text))))
    {
        objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
    }
    else if ((String.IsNullOrEmpty(MandayRequired.Text)) &amp;&amp; (!String.IsNullOrEmpty(Quantity.Text)))
    {
        objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * Convert.ToInt32(CALCPRICE.Text);
    }
    else if ((!String.IsNullOrEmpty(MandayRequired.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
    {
        objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text);
    }
    else if ((String.IsNullOrEmpty(MandayRequired.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
    {
        objproduct.EXTENDEDPRICE = Convert.ToInt32(CALCPRICE.Text);
    }
    else
    {
        objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
    }

}
else
{
    objproduct.EXTENDEDPRICE = 0;
}
</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <CurrentCode />
        <ExchangeRate>1</ExchangeRate>
        <ExchangeRateType>BaseRate</ExchangeRateType>
        <DecimalDigits>-1</DecimalDigits>
      </QFSLXCurrency>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>0</Column>
        <Row>6</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>QFTextBox</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>PRODUCTID</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>QFTextBox</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>String</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty>Quotations</SeedProperty>
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Product</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.IProduct, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>Name</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Name</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>Type</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Type</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters>
          <LookupPreFilter>
            <LookupEntityName>IProduct</LookupEntityName>
            <PropertyType>System.String</PropertyType>
            <OperatorCode>=</OperatorCode>
            <PickListName />
            <PropertyName>Type</PropertyName>
            <FilterValue>Quotation.Type</FilterValue>
          </LookupPreFilter>
        </LookupPreFilters>
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>1</Column>
        <Row>1</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklFamily</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Product.Family</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklFamily</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>Product Family</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>1</Column>
        <Row>2</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklInspectionType</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>INSPECTIONTYPE</DataItemName>
            <ControlItemName>PickListValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklInspectionType</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>InspectionType</PickListName>
        <StorageMode>Text</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <MustExistInList>true</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <ValueStoredAsText>true</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>1</Column>
        <Row>3</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>MandayRequired</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>MANDAYREQUIRED</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>MandayRequired</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>MandayRequired_ChangeAction</MethodName>
              <CSharpCodeSnippet>Sage.Entity.Interfaces.IQuotationProduct objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct;
    //    Sage.Entity.Interfaces.IQuotationProduct objQuotation = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationProduct&gt;();
    // objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * 10;

     
    
    
    
    if (!String.IsNullOrEmpty(MandayRequired.Text))
    {

        if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; ((!String.IsNullOrEmpty(Quantity.Text))))
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (!String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.EXTENDEDPRICE = 0;// Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.EXTENDEDPRICE = 0;// Convert.ToInt32(MandayRequired.Text);
        }
        else
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }

    }
</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFTextBox, Sage.Platform.QuickForms">
      <QFTextBox>
        <Column>1</Column>
        <Row>4</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>Quantity</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>QUANTITY</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>Quantity</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>Quantity_ChangeAction</MethodName>
              <CSharpCodeSnippet>Sage.Entity.Interfaces.IQuotationProduct objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IQuotationProduct;
    //    Sage.Entity.Interfaces.IQuotationProduct objQuotation = Sage.Platform.EntityFactory.Create&lt;Sage.Entity.Interfaces.IQuotationProduct&gt;();
    // objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * 10;



if (!String.IsNullOrEmpty(Quantity.Text))
    {

        if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; ((!String.IsNullOrEmpty(MandayRequired.Text))))
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (!String.IsNullOrEmpty(MandayRequired.Text)))
        {
            objproduct.EXTENDEDPRICE = 0;// Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }
        else if ((!String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(MandayRequired.Text)))
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text);
        }
        else if ((String.IsNullOrEmpty(CALCPRICE.Text)) &amp;&amp; (String.IsNullOrEmpty(MandayRequired.Text)))
        {
            objproduct.EXTENDEDPRICE = 0; //Convert.ToInt32(MandayRequired.Text);
        }
        else
        {
            objproduct.EXTENDEDPRICE = Convert.ToDecimal(CALCPRICE.Text) * Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }

    }
</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
      </QFTextBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXCurrency, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXCurrency>
        <Column>1</Column>
        <Row>5</Row>
        <IsReadOnly>true</IsReadOnly>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>ExtendedPrice</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>EXTENDEDPRICE</DataItemName>
            <ControlItemName>Text</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>ExtendedPrice</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <CurrentCode />
        <ExchangeRate>1</ExchangeRate>
        <ExchangeRateType>BaseRate</ExchangeRateType>
        <DecimalDigits>-1</DecimalDigits>
      </QFSLXCurrency>
    </Control>
  </Controls>
  <ToolControls>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>a673fe30adf4e45adc2873c482e1038</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>b2c554423437188f40af921ca3ba9</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>btnSave</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Save_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>btnSave</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.BusinessRuleActionItem, Sage.Platform.QuickForms">
            <BusinessRuleActionItem>
              <BusinessRule>Save</BusinessRule>
              <Object>QuotationProduct</Object>
              <Parameters />
              <PassResultsToNextAction>False</PassResultsToNextAction>
              <OnComplete typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
                <NoActionActionItem>
                  <MethodName />
                </NoActionActionItem>
              </OnComplete>
            </BusinessRuleActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>DialogOK</DialogActionResult>
          <PerformsUpdate>True</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>True</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>btnDelete</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Delete_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>btnDelete</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.BusinessRuleActionItem, Sage.Platform.QuickForms">
            <BusinessRuleActionItem>
              <BusinessRule>Delete</BusinessRule>
              <Object>QuotationProduct</Object>
              <Parameters />
              <PassResultsToNextAction>False</PassResultsToNextAction>
              <OnComplete typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
                <NoActionActionItem>
                  <MethodName />
                </NoActionActionItem>
              </OnComplete>
            </BusinessRuleActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
  </ToolControls>
  <Columns>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>33</Width>
    </ColumnStyle>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>33</Width>
    </ColumnStyle>
  </Columns>
  <Rows>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
  </Rows>
  <Description />
  <UseEntityNameAsTitle>true</UseEntityNameAsTitle>
  <EntityTypeName>IQuotationProduct</EntityTypeName>
  <DefaultNamespace>Sage.Entity.Interfaces</DefaultNamespace>
  <AssemblyName>Sage.Entity.Interfaces</AssemblyName>
</QuickForm>