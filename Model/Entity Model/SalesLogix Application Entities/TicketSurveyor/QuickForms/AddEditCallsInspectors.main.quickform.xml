<?xml version="1.0"?>
<QuickForm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="4fe1a9c3-e5db-4b56-b6e7-bef1065955a6" DefinitionType="Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms">
  <ActiveControl />
  <ImagePath />
  <LoadActions>
    <FormActionDefinition>
      <ResourceKey>eb759767-8c80-49fc-8322-e79216b14401</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
        <CSharpSnippetActionItem>
          <MethodName />
          <CSharpCodeSnippet> Sage.Entity.Interfaces.ITicket tkt = this.GetParentEntity() as Sage.Entity.Interfaces.ITicket;
    
    if (lkpSurveyor.LookupResultValue==null)
    {
        lkpSurveyor.Enabled = true;

        if (tkt.CompetencyCheck == true)
        {
            string qry = "Select distinct SURVEYORID From SURVEYORCOMPETENCYITEM where SCOPEOFACTIVITY in (select FAMILY from ContractProductItem where ContractID='"+ tkt.Contract.Id +"')";
          
            string sId1 = "'";
            Sage.Platform.Data.IDataService service1 = Sage.Platform.Application.ApplicationContext.Current.Services.Get&lt;Sage.Platform.Data.IDataService&gt;();
            System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service1.GetConnectionString());
            System.Data.OleDb.OleDbDataAdapter dataAdapterObj = new System.Data.OleDb.OleDbDataAdapter(qry, conObj);
            System.Data.DataTable dt = new System.Data.DataTable();
            dataAdapterObj.Fill(dt);
            foreach (System.Data.DataRow dr in dt.Rows)
            {
                sId1 = sId1 + dr["SURVEYORID"].ToString() + "','";
            }
            if (sId1.Length &gt; 1)
            {
                sId1 = sId1.Remove(sId1.Length - 2, 2);
            }
            else
            {
                sId1 = "''";
            }
            string Accmgr = "Id in (" + sId1 + ") AND Contract.Id";
			lkpSurveyor.SeedProperty = Accmgr;//"Contract.Id";
    		lkpSurveyor.SeedValue = tkt.Contract.Id.ToString();
    		lkpSurveyor.InitializeLookup = true;
			lkpSurveyor.Enabled = true;
        }
    }
    else
    {
        lkpSurveyor.Enabled = false;
    }



</CSharpCodeSnippet>
        </CSharpSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
  </LoadActions>
  <Name>AddEditCallsInspectors</Name>
  <ClientScriptIncludes />
  <ClientResourceKeys />
  <ExtendedProperties />
  <HelpFile />
  <ReadOnly>false</ReadOnly>
  <GeneratePrintView>false</GeneratePrintView>
  <Controls>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXLookup, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXLookup>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>lkpSurveyor</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>Surveyor</DataItemName>
            <ControlItemName>LookupResultValue</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <OnChangeAction>
          <ResourceKey>lkpSurveyor</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <LookupImage />
        <LookupDialogWidth xsi:nil="true" />
        <LookupDialogHeight xsi:nil="true" />
        <LookupBindingMode>Object</LookupBindingMode>
        <LookupResultValue xsi:type="xsd:string" />
        <SeedProperty />
        <SeedValue />
        <DropDownDisplayProperty />
        <AllowClearingResult>false</AllowClearingResult>
        <AppendStringValues>false</AppendStringValues>
        <OverrideSeedOnSearch>false</OverrideSeedOnSearch>
        <LookupEntityName>Surveyor</LookupEntityName>
        <LookupEntityTypeName>Sage.Entity.Interfaces.ISurveyor, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</LookupEntityTypeName>
        <AutoPostBack>false</AutoPostBack>
        <EnableHyperLinking>false</EnableHyperLinking>
        <InitializeLookup>false</InitializeLookup>
        <LookupProperties>
          <LookupProperty>
            <PropertyName>Branch</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Branch</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>FirstName</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>First Name</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>LastName</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Last Name</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>MobileNo</PropertyName>
            <PropertyType>System.String</PropertyType>
            <PropertyHeader>Mobile No.</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
          <LookupProperty>
            <PropertyName>SurveyorType</PropertyName>
            <PropertyType>SalesLogix.PickList</PropertyType>
            <PropertyHeader>InspectorType</PropertyHeader>
            <PropertyFormat>None</PropertyFormat>
            <PropertyFormatString />
            <UseAsResult>true</UseAsResult>
            <ExcludeFromFilters>false</ExcludeFromFilters>
            <IsSortable>true</IsSortable>
            <HideCondition />
          </LookupProperty>
        </LookupProperties>
        <LookupPreFilters />
      </QFSLXLookup>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.QFControls.QFCheckBox, Sage.Platform.QuickForms.QFControls">
      <QFCheckBox>
        <Column>0</Column>
        <Row>1</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>chkIsPrimary</ControlId>
        <DataBindings>
          <QuickFormPropertyDataBindingDefinition>
            <DataSourceID>MainEntity</DataSourceID>
            <DataItemName>IsPrimary</DataItemName>
            <ControlItemName>Checked</ControlItemName>
            <FormatString />
            <NullValueString />
          </QuickFormPropertyDataBindingDefinition>
        </DataBindings>
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <Checked>false</Checked>
        <OnChangeAction>
          <ResourceKey>chkIsPrimary</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>chkIsPrimary_ChangeAction</MethodName>
              <CSharpCodeSnippet> Sage.Entity.Interfaces.ITicketSurveyor tktser = BindingSource.Current as Sage.Entity.Interfaces.ITicketSurveyor;
if(chkIsPrimary.Checked==false)
{	tktser.IsPrimary=true;    
	DialogService.ShowMessage("Please assign primary to another Inspector");
}</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
      </QFCheckBox>
    </Control>
  </Controls>
  <ToolControls>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>da8d31a5a13240fb9ea26f0e019e5452</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cc7f0fd0254bf8ac189b4038fa0f5a</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>QFButton</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Save_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>QFButton</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>QFButton_ClickAction</MethodName>
              <CSharpCodeSnippet>Sage.Entity.Interfaces.ITicket tkt= this.GetParentEntity() as Sage.Entity.Interfaces.ITicket;
Sage.Entity.Interfaces.ITicketSurveyor tkts = this.BindingSource.Current as Sage.Entity.Interfaces.ITicketSurveyor;

//tkts.Surveyor.Id
if (chkIsPrimary.Checked==true)
{
Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get&lt;Sage.Platform.Data.IDataService&gt;();
System.Data.OleDb.OleDbConnection conObj1 = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());
conObj1.Open();
string query1 = "Update sysdba.TICKETSURVEYOR set ISPRIMARY ='F' where TICKETID='"+ tkt.Id +"'";
System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(query1, conObj1);
cmd.ExecuteNonQuery();
}
    
//Sage.Entity.Interfaces.ISurveyor ser = Sage.Platform.EntityFactory.GetById&lt;Sage.Entity.Interfaces.ISurveyor&gt;(lkpSurveyor.LookupResultValue.ToString());
tkts.Surveyor = lkpSurveyor.LookupResultValue as Sage.Entity.Interfaces.ISurveyor;
//tkts.SurveyorID = ser.Id.ToString();
tkts.Ticket = tkt;
tkts.IsPrimary = chkIsPrimary.Checked;
tkts.Save();
System.Web.HttpContext.Current.Response.Redirect(string.Format("Ticket.aspx?entityId={1}", "Ticket", tkt.Id.ToString()));</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
  </ToolControls>
  <Columns>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>100</Width>
    </ColumnStyle>
  </Columns>
  <Rows>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
  </Rows>
  <Description />
  <UseEntityNameAsTitle>true</UseEntityNameAsTitle>
  <EntityTypeName>ITicketSurveyor</EntityTypeName>
  <DefaultNamespace>Sage.Entity.Interfaces</DefaultNamespace>
  <AssemblyName>Sage.Entity.Interfaces</AssemblyName>
</QuickForm>