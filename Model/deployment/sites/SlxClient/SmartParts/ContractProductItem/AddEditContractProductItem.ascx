<%@ Control Language="C#" ClassName="AddEditContractProductItem" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
     <tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft">
   <asp:Label ID="lkpProduct_lbl" AssociatedControlID="lkpProduct" runat="server" Text="<%$ resources: lkpProduct.Caption %>" ></asp:Label>
 </div>   
  <div  class="twocoltextcontrol lookup"  >
<SalesLogix:LookupControl runat="server" ID="lkpProduct" LookupEntityName="SalesOrderItem" LookupEntityTypeName="Sage.Entity.Interfaces.ISalesOrderItem, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpProduct.LookupProperties.Product.Criticality.PropertyHeader %>" PropertyName="Product.Criticality" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpProduct.LookupProperties.Product.Family.PropertyHeader %>" PropertyName="Product.Family" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpProduct.LookupProperties.Product.Name.PropertyHeader %>" PropertyName="Product.Name" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpProduct.LookupProperties.Product.Status.PropertyHeader %>" PropertyName="Product.Status" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
            </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Quantity_lbl" AssociatedControlID="Quantity" runat="server" Text="<%$ resources: Quantity.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Quantity"  dojoType="Sage.UI.Controls.TextBox" AutoPostBack="true"  />
  </div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="CalPrice_lbl" AssociatedControlID="CalPrice" runat="server" Text="<%$ resources: CalPrice.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="CalPrice" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
AutoPostBack="true"  />
</div>

      </td>
      </tr>
<tr>
            <td  >
<div class=" lbl alignleft">
    <asp:Label ID="Discount_lbl" AssociatedControlID="Discount" runat="server" Text="<%$ resources: Discount.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="Discount" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
AutoPostBack="true"  />
</div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="ExtendedPrice_lbl" AssociatedControlID="ExtendedPrice" runat="server" Text="<%$ resources: ExtendedPrice.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="ExtendedPrice" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DecimalDigits="-1"
 />
</div>

      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox_lbl" AssociatedControlID="QFTextBox" runat="server" Text="<%$ resources: QFTextBox.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox5_lbl" AssociatedControlID="QFTextBox5" runat="server" Text="<%$ resources: QFTextBox5.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox5"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64" Visible="false"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox3_lbl" AssociatedControlID="QFTextBox3" runat="server" Text="<%$ resources: QFTextBox3.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox3"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox1_lbl" AssociatedControlID="QFTextBox1" runat="server" Text="<%$ resources: QFTextBox1.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox1"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditContractProductItem_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="QFButton2"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditContractProductItem&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditContractProductItemHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditContractProductItem" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IContractProductItem); }
}

 

protected override void OnAddEntityBindings() {
                 // lkpProduct.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpProductLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProductId", lkpProduct, "LookupResultValue");
        BindingSource.Bindings.Add(lkpProductLookupResultValueBinding);
                    // Quantity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QuantityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Quantity", Quantity, "Text");
        BindingSource.Bindings.Add(QuantityTextBinding);
                    // CalPrice.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding CalPriceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CalPrice", CalPrice, "Text");
        BindingSource.Bindings.Add(CalPriceTextBinding);
                    // Discount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DiscountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Discount", Discount, "Text");
        BindingSource.Bindings.Add(DiscountTextBinding);
                    // ExtendedPrice.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ExtendedPriceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ExtendedPrice", ExtendedPrice, "Text");
        BindingSource.Bindings.Add(ExtendedPriceTextBinding);
                    // QFTextBox.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBoxTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Family", QFTextBox, "Text");
        BindingSource.Bindings.Add(QFTextBoxTextBinding);
                    // QFTextBox5.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox5TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Unit", QFTextBox5, "Text");
        BindingSource.Bindings.Add(QFTextBox5TextBinding);
                    // QFTextBox3.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox3TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Program", QFTextBox3, "Text");
        BindingSource.Bindings.Add(QFTextBox3TextBinding);
                    // QFTextBox1.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox1TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Price", QFTextBox1, "Text");
        BindingSource.Bindings.Add(QFTextBox1TextBinding);
    
   
        }
                                                               
protected void Quantity_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IContractProductItem objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IContractProductItem;
    //    Sage.Entity.Interfaces.IQuotationProduct objQuotation = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.IQuotationProduct>();
    // objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * 10;



    if (!String.IsNullOrEmpty(Quantity.Text))
    {

        if ((!String.IsNullOrEmpty(CalPrice.Text)))
        {
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text) * Convert.ToInt32(Quantity.Text);
        }
        else if ((String.IsNullOrEmpty(CalPrice.Text)))
        {
            objproduct.ExtendedPrice = 0;
        }


        else
        {
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text) * Convert.ToInt32(Quantity.Text);
        }

    }

}
protected void CalPrice_ChangeAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IContractProductItem objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IContractProductItem;
    //    Sage.Entity.Interfaces.IQuotationProduct objQuotation = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.IQuotationProduct>();
    // objproduct.EXTENDEDPRICE = Convert.ToInt32(MandayRequired.Text) * 10;




    if (!String.IsNullOrEmpty(CalPrice.Text))
    {

        if (((!String.IsNullOrEmpty(Quantity.Text))))
        {
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text) * Convert.ToInt32(Quantity.Text);
        }

        else if ((String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text) * Convert.ToInt32(Quantity.Text);
        }
      
        else
        {
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text) * Convert.ToInt32(Quantity.Text);
        }

    }
    else
    {
        objproduct.ExtendedPrice = 0;
    }


}
protected void Discount_ChangeAction(object sender, EventArgs e) {
 Sage.Entity.Interfaces.IContractProductItem objproduct = this.BindingSource.Current as Sage.Entity.Interfaces.IContractProductItem;

    Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
    System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());


    Sage.Entity.Interfaces.IContractProductItem entity = this.BindingSource.Current as Sage.Entity.Interfaces.IContractProductItem;
    string tprice = "0";


    if (!string.IsNullOrEmpty(lkpProduct.LookupResultValue.ToString()))
    {
        string Query2 = " select CRITICALITY,TYPE,FAMILY ,isnull(PRICE,0)  from product  where PRODUCTID='" + lkpProduct.LookupResultValue.ToString() + "'";
        System.Data.OleDb.OleDbDataAdapter dataAdapterObj2 = new System.Data.OleDb.OleDbDataAdapter(Query2, conObj);
        System.Data.DataTable dt2 = new System.Data.DataTable();

        dataAdapterObj2.Fill(dt2);
        if (dt2.Rows.Count > 0)
        {



            tprice = dt2.Rows[0][3].ToString();

        }
    }


    if (!String.IsNullOrEmpty(Discount.Text))
    {

        decimal t1 = 0;

        //    t1 = Convert.ToDecimal(tprice) - ((Convert.ToDecimal(tprice)) * Convert.ToDecimal(Discount.Text));
        t1 = Convert.ToDecimal(tprice) - (Convert.ToDecimal(Discount.Text));

        if ((!String.IsNullOrEmpty(CalPrice.Text)) && ((!String.IsNullOrEmpty(Quantity.Text))))
        {
            objproduct.CalPrice = t1;

            objproduct.ExtendedPrice = t1 * Convert.ToInt32(Quantity.Text);
        }
        else if ((String.IsNullOrEmpty(CalPrice.Text)) && (!String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.CalPrice = t1;
            objproduct.ExtendedPrice = 0;// Convert.ToInt32(Quantity.Text) * Convert.ToInt32(MandayRequired.Text);
        }

        else if ((!String.IsNullOrEmpty(CalPrice.Text)) && (String.IsNullOrEmpty(Quantity.Text)))
        {

            objproduct.CalPrice = t1;
            objproduct.ExtendedPrice = Convert.ToDecimal(CalPrice.Text);
        }
        else if ((String.IsNullOrEmpty(CalPrice.Text)) && (String.IsNullOrEmpty(Quantity.Text)))
        {
            objproduct.CalPrice = t1;
            objproduct.ExtendedPrice = 0;//Convert.ToInt32(MandayRequired.Text);
        }
        else
        {

            objproduct.CalPrice = t1;
            objproduct.ExtendedPrice = t1 * Convert.ToInt32(Quantity.Text);
        }

    }


}
protected void QFButton_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IContractProductItem _entity = BindingSource.Current as Sage.Entity.Interfaces.IContractProductItem;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

    Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}
protected void QFButton2_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 Quantity.TextChanged += new EventHandler(Quantity_ChangeAction);
CalPrice.TextChanged += new EventHandler(CalPrice_ChangeAction);
Discount.TextChanged += new EventHandler(Discount_ChangeAction);
QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);
QFButton.Click += new ImageClickEventHandler(DialogService.CloseEventHappened);
QFButton.Click += new ImageClickEventHandler(Refresh);
QFButton2.Click += new ImageClickEventHandler(QFButton2_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(QFButton);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditContractProductItemAdapter(this)); }
}

public class AddEditContractProductItemAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditContractProductItem
{
    public AddEditContractProductItemAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILookupControl _lkpProduct;
    public  Sage.Platform.Controls.ILookupControl lkpProduct
    {
        get { return FindControl(ref _lkpProduct, "lkpProduct"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Quantity;
    public  Sage.Platform.Controls.ITextBoxControl Quantity
    {
        get { return FindControl(ref _Quantity, "Quantity"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _Discount;
    public  Sage.Platform.Controls.ICurrencyControl Discount
    {
        get { return FindControl(ref _Discount, "Discount"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox
    {
        get { return FindControl(ref _QFTextBox, "QFTextBox"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox3;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox3
    {
        get { return FindControl(ref _QFTextBox3, "QFTextBox3"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _CalPrice;
    public  Sage.Platform.Controls.ICurrencyControl CalPrice
    {
        get { return FindControl(ref _CalPrice, "CalPrice"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _ExtendedPrice;
    public  Sage.Platform.Controls.ICurrencyControl ExtendedPrice
    {
        get { return FindControl(ref _ExtendedPrice, "ExtendedPrice"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox5;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox5
    {
        get { return FindControl(ref _QFTextBox5, "QFTextBox5"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox1;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox1
    {
        get { return FindControl(ref _QFTextBox1, "QFTextBox1"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton2;
    public  Sage.Platform.Controls.IButtonControl QFButton2
    {
        get { return FindControl(ref _QFButton2, "QFButton2"); }
    }

}

</script>

<script type="text/javascript">
</script>
