<%@ Control Language="C#" ClassName="Training" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Name_lbl" AssociatedControlID="Name" runat="server" Text="<%$ resources: Name.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Name" Required="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklCategory_lbl" AssociatedControlID="pklCategory" runat="server" Text="<%$ resources: pklCategory.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklCategory" PickListName="Category" Required="true" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtFromDate_lbl" AssociatedControlID="dtFromDate" runat="server" Text="<%$ resources: dtFromDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtFromDate" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtToDate_lbl" AssociatedControlID="dtToDate" runat="server" Text="<%$ resources: dtToDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtToDate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpBranch_lbl" AssociatedControlID="lkpBranch" runat="server" Text="<%$ resources: lkpBranch.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lkpBranch" LookupEntityName="Branch" LookupEntityTypeName="Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" LookupBindingMode="String" DropDownDisplayProperty="BranchName" Required="true"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpTrainerName_lbl" AssociatedControlID="lkpTrainerName" runat="server" Text="<%$ resources: lkpTrainerName.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpTrainerName" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTrainerName.LookupProperties.FirstName.PropertyHeader %>" PropertyName="FirstName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTrainerName.LookupProperties.LastName.PropertyHeader %>" PropertyName="LastName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTrainerName.LookupProperties.Mobile.PropertyHeader %>" PropertyName="Mobile" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="TrainerDesignation_lbl" AssociatedControlID="TrainerDesignation" runat="server" Text="<%$ resources: TrainerDesignation.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="TrainerDesignation" PickListName="Designation" MustExistInList="false" MaxLength="32"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Remark_lbl" AssociatedControlID="Remark" runat="server" Text="<%$ resources: Remark.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Remark"  Rows="1" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ManagerComment_lbl" AssociatedControlID="ManagerComment" runat="server" Text="<%$ resources: ManagerComment.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ManagerComment"  Rows="1" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="Training_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="grpNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSave"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnDelete"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=Training&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkTrainingHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="Training" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ITraining); }
}

 

protected override void OnAddEntityBindings() {
                 // Name.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding NameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Name", Name, "Text");
        BindingSource.Bindings.Add(NameTextBinding);
                    // pklCategory.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklCategoryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Category", pklCategory, "PickListValue");
        BindingSource.Bindings.Add(pklCategoryPickListValueBinding);
                    // dtFromDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtFromDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TrainingFromDate", dtFromDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtFromDateDateTimeValueBinding);
                    // dtToDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtToDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TrainingToDate", dtToDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtToDateDateTimeValueBinding);
                    // lkpBranch.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpBranchLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BranchId", lkpBranch, "LookupResultValue");
        BindingSource.Bindings.Add(lkpBranchLookupResultValueBinding);
                    // lkpTrainerName.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpTrainerNameLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TrainerName", lkpTrainerName, "LookupResultValue");
        BindingSource.Bindings.Add(lkpTrainerNameLookupResultValueBinding);
                    // TrainerDesignation.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding TrainerDesignationPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TrainerDesignation", TrainerDesignation, "PickListValue");
        BindingSource.Bindings.Add(TrainerDesignationPickListValueBinding);
                    // Remark.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding RemarkTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Remark", Remark, "Text");
        BindingSource.Bindings.Add(RemarkTextBinding);
                    // ManagerComment.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ManagerCommentTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ManagerComment", ManagerComment, "Text");
        BindingSource.Bindings.Add(ManagerCommentTextBinding);
    
   
            }
                                                               
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ITraining _entity = BindingSource.Current as Sage.Entity.Interfaces.ITraining;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

          btnSave_ClickActionBRC(sender, e);
    
  
}
protected void btnSave_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect(string.Format("Training.aspx?entityId={0}", (this.BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new TrainingAdapter(this)); }
}

public class TrainingAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITraining
{
    public TrainingAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _Name;
    public new  Sage.Platform.Controls.ITextBoxControl Name
    {
        get { return FindControl(ref _Name, "Name"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtFromDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtFromDate
    {
        get { return FindControl(ref _dtFromDate, "dtFromDate"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpBranch;
    public  Sage.Platform.Controls.ILookupControl lkpBranch
    {
        get { return FindControl(ref _lkpBranch, "lkpBranch"); }
    }
    private Sage.Platform.Controls.IPickListControl _TrainerDesignation;
    public  Sage.Platform.Controls.IPickListControl TrainerDesignation
    {
        get { return FindControl(ref _TrainerDesignation, "TrainerDesignation"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _ManagerComment;
    public  Sage.Platform.Controls.ITextBoxControl ManagerComment
    {
        get { return FindControl(ref _ManagerComment, "ManagerComment"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklCategory;
    public  Sage.Platform.Controls.IPickListControl pklCategory
    {
        get { return FindControl(ref _pklCategory, "pklCategory"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtToDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtToDate
    {
        get { return FindControl(ref _dtToDate, "dtToDate"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpTrainerName;
    public  Sage.Platform.Controls.ILookupControl lkpTrainerName
    {
        get { return FindControl(ref _lkpTrainerName, "lkpTrainerName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Remark;
    public  Sage.Platform.Controls.ITextBoxControl Remark
    {
        get { return FindControl(ref _Remark, "Remark"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _grpNavigator;
    public  Sage.Platform.Controls.IGroupNavigatorControl grpNavigator
    {
        get { return FindControl(ref _grpNavigator, "grpNavigator"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnDelete;
    public  Sage.Platform.Controls.IButtonControl btnDelete
    {
        get { return FindControl(ref _btnDelete, "btnDelete"); }
    }

}

</script>

<script type="text/javascript">
</script>
