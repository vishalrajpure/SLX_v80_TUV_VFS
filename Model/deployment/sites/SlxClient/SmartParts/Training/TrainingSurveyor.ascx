<%@ Control Language="C#" ClassName="TrainingSurveyor" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
   <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

 

<SalesLogix:ScriptResourceProvider ID="TrainingSurveyorQFSDataGrid_Strings" runat="server">
    <Keys>
        <SalesLogix:ResourceKeyName Key="QFSDataGrid.EmptyTableRowText" />  <SalesLogix:ResourceKeyName Key="QFSDataGrid.89db91d6-2b06-4264-86f4-56da2e7cd336.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="QFSDataGrid.8d1fcebb-2126-499d-9030-09988e2579db.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="QFSDataGrid.6c65ed85-03e7-4f51-a2ff-d21f5d3eb658.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="QFSDataGrid.39dda28e-520d-4992-985b-e31aabc8e861.ColumnHeading" />
        <SalesLogix:ResourceKeyName Key="QFSDataGrid.39dda28e-520d-4992-985b-e31aabc8e861.Text" />
<SalesLogix:ResourceKeyName Key="874e1cc5-aabf-4927-9902-c0aaa55dd70e.DialogTitleOverride" />        </Keys>
</SalesLogix:ScriptResourceProvider>

				 





























<div style="display:none;">
  <asp:TextBox runat="server" ID="TrainingSurveyorQFSDataGrid_DataCarrier" class="TrainingSurveyorQFSDataGrid_DataCarrier" ></asp:TextBox>
</div>
  <div id="TrainingSurveyorQFSDataGrid_Container" style="width:100%;height:100%;" class="">
    <div id="TrainingSurveyorQFSDataGrid_Grid" style="width:100%;height:100%;"
     data-dojo-type="dijit.layout.BorderContainer"
></div>
</div>


 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="TrainingSurveyor_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=TrainingSurveyor&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkTrainingSurveyorHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="TrainingSurveyor" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ITraining); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsTrainingDetails;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsTrainingDetails
{ 
  get 
  {
    if (_dsTrainingDetails == null)
    {
             _dsTrainingDetails = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ITrainingDetail), 
	    EntityType              ,"TrainingDetails", System.Reflection.MemberTypes.Property);
                   _dsTrainingDetails.UseSmartQuery = true;
      	   	}
 	return _dsTrainingDetails;
  }
}

void dsTrainingDetails_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsTrainingDetails.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsTrainingDetails);
   }
}

 



 

protected override void OnAddEntityBindings() {
    
     BindingSource.OnCurrentEntitySet += new EventHandler(dsTrainingDetails_OnCurrentEntitySet);
    
    }
       
protected void QFButton_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(400, 600, "AddEditTrainingDetail", GetLocalResourceObject("d3de1944-4d70-44d9-9176-49e019a75ef9.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.ITrainingDetail); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.ITrainingDetail),
    typeof(Sage.Entity.Interfaces.ITraining),
    typeof(Sage.Entity.Interfaces.ITrainingDetail).GetProperty("Training"),
    typeof(Sage.Entity.Interfaces.ITraining).GetProperty("TrainingDetails"));
  DialogService.ShowDialog();
}

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);


}

protected override void OnFormBound()
{
 var entity = BindingSource.Current as Sage.Entity.Interfaces.ITraining; 
 if (this.PageWorkItem.State["ModeId"].ToString() == "Insert") 
 { 
 var feed = new Sage.Integration.Entity.Feeds.TrainingDetailFeed(); 
 if (entity != null) 
      if (entity.Surveyors.Count > 0) 
      { 
			var include = Sage.Common.Syndication.InclusionNode.CreateInclusionTree("Surveyor", null, null, null); 
          var transformer = 
              Sage.Platform.Application.ApplicationContext.Current.Services.Get 
                  <Sage.Platform.SData.IAtomEntryToEntityTransformationService>(); 
          foreach (Sage.Entity.Interfaces.ITrainingDetail item in entity.Surveyors) 
          { 
              var transItem = transformer.ConvertEntity(item, include) as Sage.Integration.Entity.Feeds.TrainingDetailEntry; 
              if (transItem != null) 
              { 
                  feed.Entries.Add(transItem); 
              } 
          } 
          string text; 
          using (var stream = new System.IO.MemoryStream()) 
          { 
          	          	new Sage.Common.Syndication.JsonSerializer().SaveToStream((Sage.Common.Syndication.IFeed)feed, stream, null, include); 
          	text = Encoding.UTF8.GetString(stream.ToArray()); 
          } 
          TrainingSurveyorQFSDataGrid_DataCarrier.Text = text; 
          entity.Surveyors.Clear(); 
      } 
 } 
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsTrainingDetails.SourceObject == null) { dsTrainingDetails.SourceObject = BindingSource.Current; }
if (dsTrainingDetails.SourceObject == null) { RegisterBindingsWithClient(dsTrainingDetails); }
dsTrainingDetails.Bind();


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Training/TrainingSurveyor.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.TrainingSurveyor.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.TrainingSurveyor.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_TrainingSurveyor", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new TrainingSurveyorAdapter(this)); }
}

public class TrainingSurveyorAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITrainingSurveyor
{
    public TrainingSurveyorAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataSourceControl _dsTrainingDetails;
    public  Sage.Platform.Controls.IDataSourceControl dsTrainingDetails
    {
        get { return FindControl(ref _dsTrainingDetails, "dsTrainingDetails"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }

}

</script>

<script type="text/javascript">
</script>
