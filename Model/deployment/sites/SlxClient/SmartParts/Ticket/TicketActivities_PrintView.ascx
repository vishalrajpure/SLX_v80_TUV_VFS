<%@ Control Language="C#" ClassName="TicketActivities_PrintView" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="10%" />
            <col width="10%" />
            <col width="10%" />
     <tr>
            <td  colspan="2" >
<asp:Panel runat="server" ID="ctrlDescription" CssClass="controlslist "
>
   <div class="twocollbl alignleft" style="margin-top:.5em;">
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"  style="margin-top:.5em;" >
<asp:Label runat="server" ID="txtComments" style="white-space:normal"  />
  </div>

  
</asp:Panel>
      </td>
                      <td  >

      </td>
      </tr>
<tr>
            <td  colspan="3" >
  <hr />
 

      </td>
                  </tr>
<tr>
            <td  colspan="3" >
 <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

 

<SalesLogix:ScriptResourceProvider ID="TicketActivities_PrintViewgrdTicketActivities_Strings" runat="server">
    <Keys>
          <SalesLogix:ResourceKeyName Key="grdTicketActivities.0509cdb3-ff22-44fb-940f-19a24860e02f.ColumnHeading" />
  <SalesLogix:ResourceKeyName Key="grdTicketActivities.0509cdb3-ff22-44fb-940f-19a24860e02f.FormatString" />     <SalesLogix:ResourceKeyName Key="grdTicketActivities.999ab82e-6b24-4741-b77b-4dc90b785593.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdTicketActivities.1a8f67b9-1c52-4b9f-9eab-718774e3c741.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdTicketActivities.12352d75-17a5-419a-a592-2d80ea965b55.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdTicketActivities.79a654ac-e61e-4e5f-b371-7f8500df8ad5.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdTicketActivities.e1fe0285-a9a6-4f96-9e9c-a9002dc6c4f1.ColumnHeading" />
            </Keys>
</SalesLogix:ScriptResourceProvider>

										
		
		
		
		

			 





























<div style="display:none;">
  <asp:TextBox runat="server" ID="TicketActivities_PrintViewgrdTicketActivities_DataCarrier" class="TicketActivities_PrintViewgrdTicketActivities_DataCarrier" ></asp:TextBox>
</div>
  <div id="TicketActivities_PrintViewgrdTicketActivities_Container" style="width:100%;height:100%;" class="">
    <div id="TicketActivities_PrintViewgrdTicketActivities_Grid" style="width:100%;height:100%;"
></div>
</div>



      </td>
                  </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="TicketActivities_PrintView_RTools" ToolbarLocation="right">
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=TicketActivities_PrintView&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkTicketActivities_PrintViewHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="TicketActivities" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ITicket); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsActivities;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsActivities
{ 
  get 
  {
    if (_dtsActivities == null)
    {
             _dtsActivities = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.ITicketActivity), 
	    EntityType              ,"TicketActivities", System.Reflection.MemberTypes.Property);
                   _dtsActivities.UseSmartQuery = true;
      	   	}
 	return _dtsActivities;
  }
}

void dtsActivities_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsActivities.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsActivities);
   }
}

 



 private Sage.Platform.WebPortal.Binding.WebEntityBindingSource _dtsTicketActivityDataSource;
public Sage.Platform.WebPortal.Binding.WebEntityBindingSource dtsTicketActivityDataSource
{ 
  get 
  {
    if (_dtsTicketActivityDataSource == null)
    {
             _dtsTicketActivityDataSource = new Sage.Platform.WebPortal.Binding.WebEntityBindingSource(typeof(Sage.Entity.Interfaces.ITicketActivity),
	    EntityType              );       	   	}
 	return _dtsTicketActivityDataSource;
  }
}

void dtsTicketActivityDataSource_OnCurrentEntitySet(object sender, EventArgs e) 
{
    string changeKey = GetChangeStateKey(typeof(Sage.Entity.Interfaces.ITicketActivity), Sage.Platform.Orm.Entities.EntityViewMode.Insert);
    object current = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.ITicketActivity>();
    RestoreEntityChanges(changeKey, current);
    dtsTicketActivityDataSource.Current = current;
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsTicketActivityDataSource);
   }
}

 

protected override void OnUnload(EventArgs e)
{
    base.OnUnload(e);
    string changeKey = GetChangeStateKey(typeof(Sage.Entity.Interfaces.ITicketActivity), Sage.Platform.Orm.Entities.EntityViewMode.Insert);
    SaveEntityChanges(changeKey, dtsTicketActivityDataSource.Current);
}


 

protected override void OnAddEntityBindings() {
                    // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ActivityDescription", txtComments, "Text");
        dtsTicketActivityDataSource.Bindings.Add(txtCommentsTextBinding);
                
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsActivities_OnCurrentEntitySet);
      BindingSource.OnCurrentEntitySet += new EventHandler(dtsTicketActivityDataSource_OnCurrentEntitySet);
    
    }
                                          
protected override void OnFormBound()
{
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
 var systemInfo = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);  
 if (systemInfo.MultiCurrency) 
 { 
    FormHelper.AddBaseUserCurrencyRatesToClientContext(PageWorkItem); 
 } 
 var entity = BindingSource.Current as Sage.Entity.Interfaces.ITicket; 
 if (this.PageWorkItem.State["ModeId"].ToString() == "Insert") 
 { 
 var feed = new Sage.Integration.Entity.Feeds.TicketActivityFeed(); 
 if (entity != null) 
      if (entity.TicketActivities.Count > 0) 
      { 
			var include = Sage.Common.Syndication.InclusionNode.CreateInclusionTree("TicketActivity", null, null, null); 
          var transformer = 
              Sage.Platform.Application.ApplicationContext.Current.Services.Get 
                  <Sage.Platform.SData.IAtomEntryToEntityTransformationService>(); 
          foreach (Sage.Entity.Interfaces.ITicketActivity item in entity.TicketActivities) 
          { 
              var transItem = transformer.ConvertEntity(item, include) as Sage.Integration.Entity.Feeds.TicketActivityEntry; 
              if (transItem != null) 
              { 
                  feed.Entries.Add(transItem); 
              } 
          } 
          string text; 
          using (var stream = new System.IO.MemoryStream()) 
          { 
          	          	new Sage.Common.Syndication.JsonSerializer().SaveToStream((Sage.Common.Syndication.IFeed)feed, stream, null, include); 
          	text = Encoding.UTF8.GetString(stream.ToArray()); 
          } 
          TicketActivities_PrintViewgrdTicketActivities_DataCarrier.Text = text; 
          entity.TicketActivities.Clear(); 
      } 
 } 
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dtsActivities.SourceObject == null) { dtsActivities.SourceObject = BindingSource.Current; }
if (dtsActivities.SourceObject == null) { RegisterBindingsWithClient(dtsActivities); }
dtsActivities.Bind();

dtsTicketActivityDataSource.Bind();


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Ticket/TicketActivities_PrintView.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.TicketActivities.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.TicketActivities.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_TicketActivities", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            if (tool is PageLink)
                        {
                            PageLink plink = tool as PageLink;
                            if (plink.LinkType == enumPageLinkType.HelpFileName)
                            {
                                            tinfo.RightTools.Add(tool);
                                                }
                        }
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new TicketActivitiesAdapter(this)); }
}

public class TicketActivitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITicketActivities
{
    public TicketActivitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IControlsListControl _ctrlDescription;
    public  Sage.Platform.Controls.IControlsListControl ctrlDescription
    {
        get { return FindControl(ref _ctrlDescription, "ctrlDescription"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtComments;
    public  Sage.Platform.Controls.ITextBoxControl txtComments
    {
        get { return FindControl(ref _txtComments, "txtComments"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdCommentsDateStamp;
    public  Sage.Platform.Controls.IButtonControl cmdCommentsDateStamp
    {
        get { return FindControl(ref _cmdCommentsDateStamp, "cmdCommentsDateStamp"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdAdvanced;
    public  Sage.Platform.Controls.IButtonControl cmdAdvanced
    {
        get { return FindControl(ref _cmdAdvanced, "cmdAdvanced"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dtsActivities;
    public  Sage.Platform.Controls.IDataSourceControl dtsActivities
    {
        get { return FindControl(ref _dtsActivities, "dtsActivities"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dtsTicketActivityDataSource;
    public  Sage.Platform.Controls.IDataSourceControl dtsTicketActivityDataSource
    {
        get { return FindControl(ref _dtsTicketActivityDataSource, "dtsTicketActivityDataSource"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdTicketActivities;
    public  Sage.Platform.Controls.IButtonControl cmdTicketActivities
    {
        get { return FindControl(ref _cmdTicketActivities, "cmdTicketActivities"); }
    }

}

</script>

<script type="text/javascript">

function cmdTicketActivities_ClientClick() {
var prm = Sys.WebForms.PageRequestManager.getInstance();if(prm != null) {function endCommentRequest(sender,args) {var node = dojo.byId("<%= txtComments.ClientID %>");if(node != null) {node.value = "";}prm.remove_pageLoaded(endCommentRequest);}prm.add_pageLoaded(endCommentRequest);}return true;
}</script>
