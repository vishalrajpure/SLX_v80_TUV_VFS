<%@ Control Language="C#" ClassName="HolidayItem" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdHolidayItems" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 ExpandableRows="True" ResizableColumns="True"  OnRowCommand="grdHolidayItems_RowCommand"
 DataKeyNames="InstanceId,Id"
 OnRowEditing="grdHolidayItems_RowEditing"  OnRowDeleting="grdHolidayItems_RowDeleting" OnRowDataBound="grdHolidayItems_RowDataBound" >
<Columns>
   <asp:BoundField DataField="HolidayName"
      HeaderText="<%$ resources: grdHolidayItems.48578bff-2491-41a5-8156-af2d5c9c5544.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="HolidayDate"
  DataFormatString="<%$ resources: grdHolidayItems.0c9a3714-ec6d-4546-acb1-b5c9def31149.FormatString %>" HtmlEncode="false"    HeaderText="<%$ resources: grdHolidayItems.0c9a3714-ec6d-4546-acb1-b5c9def31149.ColumnHeading %>"          >
      </asp:BoundField>
  <asp:ButtonField CommandName="Edit"
  Text="<%$ resources: grdHolidayItems.1c4b9b3c-6b30-41a1-93ac-5177b7678438.Text %>"        HeaderText="<%$ resources: grdHolidayItems.1c4b9b3c-6b30-41a1-93ac-5177b7678438.ColumnHeading %>"        >
          </asp:ButtonField>
     <asp:ButtonField CommandName="Delete"
  Text="<%$ resources: grdHolidayItems.1d1291dc-4620-4fa7-9604-d23273078394.Text %>"         HeaderText="<%$ resources: grdHolidayItems.1d1291dc-4620-4fa7-9604-d23273078394.ColumnHeading %>"        >
          </asp:ButtonField>
   </Columns>
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">

            private int _grdHolidayItemsdeleteColumnIndex = -2;
protected int grdHolidayItemsDeleteColumnIndex
{
    get
    {
        if (_grdHolidayItemsdeleteColumnIndex == -2)
        {
            int bias = (grdHolidayItems.ExpandableRows) ? 1 : 0;
            _grdHolidayItemsdeleteColumnIndex = -1;
            int colcount = 0;
            foreach (DataControlField col in grdHolidayItems.Columns)
            {
                ButtonField btn = col as ButtonField;
                if (btn != null)
                {
                    if (btn.CommandName == "Delete")
                    {
                        _grdHolidayItemsdeleteColumnIndex = colcount + bias;
                        break;
                    }
                }
                colcount++;
            }
        }
        return _grdHolidayItemsdeleteColumnIndex;
    }
}

protected void grdHolidayItems_RowDataBound(object sender, GridViewRowEventArgs e)
{
}
   
protected void grdHolidayItems_RowCommand(object sender, GridViewCommandEventArgs e)
{
    if (e.CommandName == "Page")
        return;
    int rowIndex;
    if (Int32.TryParse(e.CommandArgument.ToString(), out rowIndex))
    {
        dsHolidayItems.SelectedIndex = rowIndex;
        object currentEntity = dsHolidayItems.Current;
        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
        string id = String.Empty;
        //Check if this is an unpersisted entity and use its InstanceId
        if (Sage.Platform.WebPortal.PortalUtil.ObjectIsNewEntity(currentEntity))
        {
            if (grdHolidayItems.DataKeys[0].Values.Count > 1) {
                foreach (DictionaryEntry val in grdHolidayItems.DataKeys[rowIndex].Values)
                {
                    if (val.Key.ToString() == "InstanceId")
                    {
                        Guid instanceId = (Guid)val.Value;
                        dsHolidayItems.SetCurrentEntityByInstanceId(instanceId);
                        id = instanceId.ToString();
                        currentEntity = dsHolidayItems.Current;
                        if ((currentEntity is Sage.Platform.ComponentModel.ComponentView) && !((Sage.Platform.ComponentModel.ComponentView)currentEntity).IsVirtualComponent)
                            currentEntity = ((Sage.Platform.ComponentModel.ComponentView)currentEntity).Component;
                    }
                }
            }
        }
        else
        {
            foreach (DictionaryEntry val in grdHolidayItems.DataKeys[rowIndex].Values)
            {
                if (val.Key.ToString() != "InstanceId")
                {
                    id = val.Value.ToString();
                }
            }
        }
        if (e.CommandName.Equals("Edit"))
        {
            if (DialogService != null)
            {
                // QFDataGrid
                            DialogService.SetSpecs(400, 600, "AddEditHolidayItem", GetLocalResourceObject("6bcb8a47-512b-428c-8a9a-53713fa8b1f6.DialogTitleOverride").ToString() );
                            DialogService.EntityType = typeof(Sage.Entity.Interfaces.IHolidayItem );
                DialogService.EntityID = id;
                DialogService.ShowDialog();
            }
        }
        if (e.CommandName.Equals("Delete"))
        {
            Sage.Entity.Interfaces.IHoliday mainentity = this.BindingSource.Current as Sage.Entity.Interfaces.IHoliday;
            if (mainentity != null)
            {
                Sage.Entity.Interfaces.IHolidayItem childEntity = null;
                if((currentEntity != null) && (currentEntity is Sage.Entity.Interfaces.IHolidayItem))
                {
                    childEntity = (Sage.Entity.Interfaces.IHolidayItem)currentEntity;
                }
                else if (id != null)
                {
                    childEntity = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IHolidayItem>(id);
            }
                if(childEntity != null)
                {
                     mainentity.HolidayItems.Remove(childEntity);

                     if((childEntity.PersistentState & Sage.Platform.Orm.Interfaces.PersistentState.New) <= 0)
                     {
                         childEntity.Delete();
                     }
                     dsHolidayItems.SelectedIndex = -1;
                }
            }
        }
    }
    grdHolidayItems_refresh();
}
    protected void grdHolidayItems_refresh()
    {
        if (PageWorkItem != null) {
            Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
            if (refresher != null)
            {
                refresher.RefreshAll();
            }
            else
            {
                Response.Redirect(Request.Url.ToString());
            }
        }
    }

        protected void grdHolidayItems_RowEditing(object sender, GridViewEditEventArgs e)
    {
        grdHolidayItems.SelectedIndex = e.NewEditIndex;
        e.Cancel = true;
    }
            protected void grdHolidayItems_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        grdHolidayItems.SelectedIndex = -1;
    }
    </script>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="HolidayItem_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=HolidayItem&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkHolidayItemHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="HolidayItem" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IHoliday); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsHolidayItems;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsHolidayItems
{ 
  get 
  {
    if (_dsHolidayItems == null)
    {
             _dsHolidayItems = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IHolidayItem), 
	    EntityType              ,"HolidayItems", System.Reflection.MemberTypes.Property);
                   _dsHolidayItems.UseSmartQuery = true;
      	   	}
 	return _dsHolidayItems;
  }
}

void dsHolidayItems_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsHolidayItems.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsHolidayItems);
   }
}

 



 

protected override void OnAddEntityBindings() {
       dsHolidayItems.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("HolidayItems", grdHolidayItems ));
   dsHolidayItems.BindFieldNames = new String[] { "Id","HolidayName","HolidayDate" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dsHolidayItems_OnCurrentEntitySet);
    
    }
       
protected void QFButton_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(400, 600, "AddEditHolidayItem", GetLocalResourceObject("8438ecff-ab42-4c84-b2e5-a8afed82cb7a.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.IHolidayItem); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.IHolidayItem),
    typeof(Sage.Entity.Interfaces.IHoliday),
    typeof(Sage.Entity.Interfaces.IHolidayItem).GetProperty("Holiday"),
    typeof(Sage.Entity.Interfaces.IHoliday).GetProperty("HolidayItems"));
  DialogService.ShowDialog();
}

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);


}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsHolidayItems.SourceObject == null) { dsHolidayItems.SourceObject = BindingSource.Current; }
if (dsHolidayItems.SourceObject == null) { RegisterBindingsWithClient(dsHolidayItems); }
dsHolidayItems.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new HolidayItemAdapter(this)); }
}

public class HolidayItemAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IHolidayItem
{
    public HolidayItemAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataGridControl _grdHolidayItems;
    public  Sage.Platform.Controls.IDataGridControl grdHolidayItems
    {
        get { return FindControl(ref _grdHolidayItems, "grdHolidayItems"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsHolidayItems;
    public  Sage.Platform.Controls.IDataSourceControl dsHolidayItems
    {
        get { return FindControl(ref _dsHolidayItems, "dsHolidayItems"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }

}

</script>

<script type="text/javascript">
</script>
