<%@ Control Language="C#" ClassName="ComplaintActivities" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
<asp:Panel runat="server" ID="ctrlDescription" CssClass="controlslist "
>
   <div class=" lbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtComments"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

   <asp:ImageButton runat="server" ID="QFButton"
 ToolTip="<%$ resources: QFButton.ToolTip %>" AccessKey="4" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
</asp:Panel>
      </td>
                <td  >
 <asp:Button runat="server" ID="cmdAdvanced"
 Text="<%$ resources: cmdAdvanced.Caption %>"  />
 
      </td>
      </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

 

<SalesLogix:ScriptResourceProvider ID="ComplaintActivitiesgrdComplaintActivities_Strings" runat="server">
    <Keys>
          <SalesLogix:ResourceKeyName Key="grdComplaintActivities.5319162a-7a4d-4307-a48e-437e06844c6b.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdComplaintActivities.2d8c5595-a0d0-4e21-a7ea-aaaf0bbf344b.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdComplaintActivities.a55340c6-6b16-4a5a-a1d7-7bd699db6c9d.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdComplaintActivities.0a881bf9-ec94-4772-b14e-ef3d183512ea.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdComplaintActivities.bd258810-44c9-4d2f-88ea-275e0f534e92.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdComplaintActivities.d65c3388-3c7b-461d-8098-6b87e4953bcb.ColumnHeading" />
            </Keys>
</SalesLogix:ScriptResourceProvider>

										
		
		
		
		

			 
  <div id="ComplaintActivitiesgrdComplaintActivities_Container" style="width:100%;height:100%;" class="">
    <div id="ComplaintActivitiesgrdComplaintActivities_Grid" style="width:100%;height:100%;"
     data-dojo-type="dijit.layout.BorderContainer"
></div>
</div>



      </td>
            </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ComplaintActivities_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdComplaintActivities"
 AlternateText="<%$ resources: cmdComplaintActivities.Caption %>"  ToolTip="<%$ resources: cmdComplaintActivities.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ComplaintActivities&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkComplaintActivitiesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ComplaintActivities" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IComplaint); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsComplaintActivities;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsComplaintActivities
{ 
  get 
  {
    if (_dsComplaintActivities == null)
    {
             _dsComplaintActivities = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IComplaintActivity), 
	    EntityType              ,"ComplaintActivities", System.Reflection.MemberTypes.Property);
                   _dsComplaintActivities.UseSmartQuery = true;
      	   	}
 	return _dsComplaintActivities;
  }
}

void dsComplaintActivities_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsComplaintActivities.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsComplaintActivities);
   }
}

 



 

protected override void OnAddEntityBindings() {
                   
     BindingSource.OnCurrentEntitySet += new EventHandler(dsComplaintActivities_OnCurrentEntitySet);
    
    }
                                          
protected void QFButton_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IComplaint>("Complaint.AddComplaintActivityCommentsTimeStampStep", objarray);

  
}
protected void cmdAdvanced_ClickAction(object sender, EventArgs e) {
 Session.Add("ComplaintActivityComments", txtComments.Text);
    Response.Redirect("InsertComplaintActivity.aspx?modeid=insert");

}
protected void cmdComplaintActivities_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IComplaint _entity = BindingSource.Current as Sage.Entity.Interfaces.IComplaint;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

          cmdComplaintActivities_ClickActionBRC(sender, e);
    
  
}
protected void cmdComplaintActivities_ClickActionBRC(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);
cmdAdvanced.Click += new EventHandler(cmdAdvanced_ClickAction);
cmdComplaintActivities.Click += new ImageClickEventHandler(cmdComplaintActivities_ClickAction);


}

protected override void OnFormBound()
{
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
 var systemInfo = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);  
 if (systemInfo.MultiCurrency) 
 { 
    FormHelper.AddBaseUserCurrencyRatesToClientContext(PageWorkItem); 
 } 
ClientBindingMgr.RegisterSaveButton(cmdComplaintActivities);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsComplaintActivities.SourceObject == null) { dsComplaintActivities.SourceObject = BindingSource.Current; }
if (dsComplaintActivities.SourceObject == null) { RegisterBindingsWithClient(dsComplaintActivities); }
dsComplaintActivities.Bind();


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Complaint/ComplaintActivities.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.ComplaintActivities.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.ComplaintActivities.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_ComplaintActivities", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ComplaintActivitiesAdapter(this)); }
}

public class ComplaintActivitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IComplaintActivities
{
    public ComplaintActivitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IControlsListControl _ctrlDescription;
    public  Sage.Platform.Controls.IControlsListControl ctrlDescription
    {
        get { return FindControl(ref _ctrlDescription, "ctrlDescription"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtComments;
    public  Sage.Platform.Controls.ITextBoxControl txtComments
    {
        get { return FindControl(ref _txtComments, "txtComments"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdAdvanced;
    public  Sage.Platform.Controls.IButtonControl cmdAdvanced
    {
        get { return FindControl(ref _cmdAdvanced, "cmdAdvanced"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsComplaintActivities;
    public  Sage.Platform.Controls.IDataSourceControl dsComplaintActivities
    {
        get { return FindControl(ref _dsComplaintActivities, "dsComplaintActivities"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdComplaintActivities;
    public  Sage.Platform.Controls.IButtonControl cmdComplaintActivities
    {
        get { return FindControl(ref _cmdComplaintActivities, "cmdComplaintActivities"); }
    }

}

</script>

<script type="text/javascript">
</script>
