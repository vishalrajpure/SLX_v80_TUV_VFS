<%@ Control Language="C#" ClassName="SurveyorChangePassword" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="InspectorName_lbl" AssociatedControlID="InspectorName" runat="server" Text="<%$ resources: InspectorName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="InspectorName" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="4000"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtNewPassword_lbl" AssociatedControlID="txtNewPassword" runat="server" Text="<%$ resources: txtNewPassword.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtNewPassword" Required="true"  dojoType="Sage.UI.Controls.TextBox" TextMode="Password"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtconfirmpassword_lbl" AssociatedControlID="txtconfirmpassword" runat="server" Text="<%$ resources: txtconfirmpassword.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtconfirmpassword" Required="true"  dojoType="Sage.UI.Controls.TextBox" TextMode="Password"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblMassage"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="QFControlsList" CssClass="controlslist "
>
   <asp:Button runat="server" ID="btnSave"
 Text="<%$ resources: btnSave.Caption %>" CssClass="slxbutton"  />
   
   <asp:Button runat="server" ID="btnCancle"
 Text="<%$ resources: btnCancle.Caption %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="SurveyorChangePassword_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=SurveyorChangePassword&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkSurveyorChangePasswordHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="SurveyorChangePassword" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ISurveyor); }
}

 

protected override void OnAddEntityBindings() {
                 // InspectorName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding InspectorNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("InspectorName", InspectorName, "Text");
        BindingSource.Bindings.Add(InspectorNameTextBinding);
                      
   
}
                                                 
protected void btnSave_ClickAction(object sender, EventArgs e) {
  // save password

 Sage.Entity.Interfaces.ISurveyor objSurveyor = this.BindingSource.Current as Sage.Entity.Interfaces.ISurveyor;
 if (!string.IsNullOrEmpty(txtconfirmpassword.Text.ToString()))
 {
     if (txtconfirmpassword.Text.ToString().Length == 0)
     {
         lblMassage.Text ="Invalid Password";
     }
     else
     {

         string encryptpwd = "";
         try
         {
             byte[] data = ASCIIEncoding.ASCII.GetBytes(txtconfirmpassword.Text.ToString());
             byte[] rgbKey = ASCIIEncoding.ASCII.GetBytes("12345678");
             byte[] rgbIV = ASCIIEncoding.ASCII.GetBytes("87654321");
             //1024-bit encryption

             System.IO.MemoryStream memoryStream = new System.IO.MemoryStream(1024);
             System.Security.Cryptography.DESCryptoServiceProvider desCryptoServiceProvider = new System.Security.Cryptography.DESCryptoServiceProvider();
             System.Security.Cryptography.CryptoStream cryptoStream = new System.Security.Cryptography.CryptoStream(memoryStream, desCryptoServiceProvider.CreateEncryptor(rgbKey, rgbIV), System.Security.Cryptography.CryptoStreamMode.Write);
             cryptoStream.Write(data, 0, data.Length);
             cryptoStream.FlushFinalBlock();
             byte[] result = new byte[(int)memoryStream.Position];
             memoryStream.Position = 0;
             memoryStream.Read(result, 0, result.Length);
             cryptoStream.Close();
             memoryStream.Dispose();
             encryptpwd = Convert.ToBase64String(result);
         }
         catch (Exception ex)
         {
             encryptpwd = null;
         }

         objSurveyor.Password = encryptpwd;


         objSurveyor.Save();
     }
 }
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new EventHandler(btnSave_ClickAction);
btnSave.Click += new EventHandler(DialogService.CloseEventHappened);
btnSave.Click += new EventHandler(Refresh);
btnCancle.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
ClientBindingMgr.RegisterDialogCancelButton(btnCancle);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new SurveyorChangePasswordAdapter(this)); }
}

public class SurveyorChangePasswordAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ISurveyorChangePassword
{
    public SurveyorChangePasswordAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _InspectorName;
    public  Sage.Platform.Controls.ITextBoxControl InspectorName
    {
        get { return FindControl(ref _InspectorName, "InspectorName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtNewPassword;
    public  Sage.Platform.Controls.ITextBoxControl txtNewPassword
    {
        get { return FindControl(ref _txtNewPassword, "txtNewPassword"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtconfirmpassword;
    public  Sage.Platform.Controls.ITextBoxControl txtconfirmpassword
    {
        get { return FindControl(ref _txtconfirmpassword, "txtconfirmpassword"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblMassage;
    public  Sage.Platform.Controls.ILabelControl lblMassage
    {
        get { return FindControl(ref _lblMassage, "lblMassage"); }
    }
    private Sage.Platform.Controls.IControlsListControl _QFControlsList;
    public  Sage.Platform.Controls.IControlsListControl QFControlsList
    {
        get { return FindControl(ref _QFControlsList, "QFControlsList"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnCancle;
    public  Sage.Platform.Controls.IButtonControl btnCancle
    {
        get { return FindControl(ref _btnCancle, "btnCancle"); }
    }

}

</script>

<script type="text/javascript">
</script>
