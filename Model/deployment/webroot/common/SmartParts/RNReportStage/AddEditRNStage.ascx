<%@ Control Language="C#" ClassName="AddEditRNStage" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="txtSrNo_lbl" AssociatedControlID="txtSrNo" runat="server" Text="<%$ resources: txtSrNo.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="txtSrNo"
Required="true" Strict="False" 
 />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luePRoductStage_lbl" AssociatedControlID="luePRoductStage" runat="server" Text="<%$ resources: luePRoductStage.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="luePRoductStage" LookupEntityName="ProductStage" LookupEntityTypeName="Sage.Entity.Interfaces.IProductStage, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luePRoductStage.LookupProperties.Name.PropertyHeader %>" PropertyName="Name" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luePRoductStage.LookupProperties.Product.Description.PropertyHeader %>" PropertyName="Product.Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luePRoductStage.LookupProperties.Product.Name.PropertyHeader %>" PropertyName="Product.Name" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luePRoductStage.LookupProperties.ProductStageId.PropertyHeader %>" PropertyName="ProductStageId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtstatus_lbl" AssociatedControlID="txtstatus" runat="server" Text="<%$ resources: txtstatus.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtstatus" Required="true"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditRNStage_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnSave"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditRNStage&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditRNStageHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditRNStage" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IRNReportStage); }
}

 

protected override void OnAddEntityBindings() {
                 // txtSrNo.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSrNoTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SerialNumber", txtSrNo, "Text");
        BindingSource.Bindings.Add(txtSrNoTextBinding);
                    // luePRoductStage.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luePRoductStageLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProductStage", luePRoductStage, "LookupResultValue");
        BindingSource.Bindings.Add(luePRoductStageLookupResultValueBinding);
                    // txtstatus.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtstatusTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", txtstatus, "Text");
        BindingSource.Bindings.Add(txtstatusTextBinding);
    
   
    }
                     
protected void btnSave_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IRNReport VRpt = this.GetParentEntity() as Sage.Entity.Interfaces.IRNReport;
Sage.Entity.Interfaces.IRNReportStage objs = BindingSource.Current as Sage.Entity.Interfaces.IRNReportStage;
if(objs != null)
{
	if(objs.SerialNumber <=0)
	{
		throw new Sage.Platform.Application.ValidationException("Please Enter Valid Serial Number...");
	}
	foreach(Sage.Entity.Interfaces.IRNReportStage rnStage in VRpt.RNReportStages)
	{
		if(rnStage.SerialNumber == objs.SerialNumber)
		{
			throw new Sage.Platform.Application.ValidationException("Serial number is Duplicate...");
		}
	}
	objs.RNReport = VRpt;
	objs.Save();
	System.Web.HttpContext.Current.Response.Redirect(string.Format("RNReport.aspx?entityid=" + VRpt.Id.ToString(), "&modeid=Detail"));
}

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.IRNReport RN = this.GetParentEntity() as Sage.Entity.Interfaces.IRNReport;
if (EntityContext.EntityID.ToString().ToUpper().Equals("INSERT") == true)
{
	string qry = "Select ProductStageID From ProductStage Where ProductID IN (select ProductID From Ticketproduct where TicketproductID in (Select ProductID From RNReportItem Where RNReportID = '"+ RN.Id +"')) AND ProductStageID Not IN (Select ProductStageID From RNReportStage Where RNReportID = '"+ RN.Id +"')";

	string sId1 = "'";
	Sage.Platform.Data.IDataService service1 = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
	System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service1.GetConnectionString());
	System.Data.OleDb.OleDbDataAdapter dataAdapterObj = new System.Data.OleDb.OleDbDataAdapter(qry, conObj);
	System.Data.DataTable dt = new System.Data.DataTable();
	dataAdapterObj.Fill(dt);
	foreach (System.Data.DataRow dr in dt.Rows)
	{
		sId1 = sId1 + dr["ProductStageID"].ToString() + "','";
	}
	if(sId1.Length > 1)
	{
		sId1 = sId1.Remove(sId1.Length - 2, 2);
	}
	else
	{
		sId1 = "''";
	}
	//string Accmgr = "xxx' AND Id in (" + sId1 + ") AND 'A' != 'B";
	
	string Accmgr = "Id in (" + sId1 + ") and RNReport.Id";

	
	luePRoductStage.SeedProperty = Accmgr;//"Contract.Id";
    luePRoductStage.SeedValue = RN.Id.ToString();
    luePRoductStage.InitializeLookup = true;
	luePRoductStage.Enabled = true;
}
else
{
	
	luePRoductStage.Enabled = false;
}

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditRNStageAdapter(this)); }
}

public class AddEditRNStageAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditRNStage
{
    public AddEditRNStageAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.INumericControl _txtSrNo;
    public  Sage.Platform.Controls.INumericControl txtSrNo
    {
        get { return FindControl(ref _txtSrNo, "txtSrNo"); }
    }
    private Sage.Platform.Controls.ILookupControl _luePRoductStage;
    public  Sage.Platform.Controls.ILookupControl luePRoductStage
    {
        get { return FindControl(ref _luePRoductStage, "luePRoductStage"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtstatus;
    public  Sage.Platform.Controls.ITextBoxControl txtstatus
    {
        get { return FindControl(ref _txtstatus, "txtstatus"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }

}

</script>

<script type="text/javascript">
</script>
