<%@ Control Language="C#" ClassName="AddEditVisitReportItem" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueCallProduct_lbl" AssociatedControlID="lueCallProduct" runat="server" Text="<%$ resources: lueCallProduct.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueCallProduct" LookupEntityName="TicketProduct" LookupEntityTypeName="Sage.Entity.Interfaces.ITicketProduct, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueCallProduct.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueCallProduct.LookupProperties.Quantity.PropertyHeader %>" PropertyName="Quantity" PropertyType="System.Int32" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklResult_lbl" AssociatedControlID="pklResult" runat="server" Text="<%$ resources: pklResult.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklResult" PickListName="status                                                                                                                                                                                           " MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="2"  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDetailActivity_lbl" AssociatedControlID="txtDetailActivity" runat="server" Text="<%$ resources: txtDetailActivity.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDetailActivity"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
        </tr>
<tr>
            <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditVisitReportItem_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdSave"
 ToolTip="<%$ resources: cmdSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditVisitReportItem&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditVisitReportItemHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditVisitReportItem" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IVisitReportItem); }
}

 

protected override void OnAddEntityBindings() {
                 // lueCallProduct.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueCallProductLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TicketProduct", lueCallProduct, "LookupResultValue");
        BindingSource.Bindings.Add(lueCallProductLookupResultValueBinding);
                    // pklResult.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklResultPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Result", pklResult, "PickListValue");
        BindingSource.Bindings.Add(pklResultPickListValueBinding);
                    // txtDetailActivity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDetailActivityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DetailOfActivityPerformed", txtDetailActivity, "Text");
        BindingSource.Bindings.Add(txtDetailActivityTextBinding);
    
   
    }
                     
protected void cmdSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IVisitReportItem _entity = BindingSource.Current as Sage.Entity.Interfaces.IVisitReportItem;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
if (EntityContext.EntityID.ToString().ToUpper().Equals("INSERT") == true)
    {
		lueCallProduct.Enabled = true;
	}
	else
	{
		lueCallProduct.Enabled = false;
	}

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(cmdSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditVisitReportItemAdapter(this)); }
}

public class AddEditVisitReportItemAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditVisitReportItem
{
    public AddEditVisitReportItemAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILookupControl _lueCallProduct;
    public  Sage.Platform.Controls.ILookupControl lueCallProduct
    {
        get { return FindControl(ref _lueCallProduct, "lueCallProduct"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklResult;
    public  Sage.Platform.Controls.IPickListControl pklResult
    {
        get { return FindControl(ref _pklResult, "pklResult"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtDetailActivity;
    public  Sage.Platform.Controls.ITextBoxControl txtDetailActivity
    {
        get { return FindControl(ref _txtDetailActivity, "txtDetailActivity"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdSave;
    public  Sage.Platform.Controls.IButtonControl cmdSave
    {
        get { return FindControl(ref _cmdSave, "cmdSave"); }
    }

}

</script>

<script type="text/javascript">
</script>
