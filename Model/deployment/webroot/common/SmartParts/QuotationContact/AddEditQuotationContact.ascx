<%@ Control Language="C#" ClassName="AddEditQuotationContact" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="contact_lbl" AssociatedControlID="contact" runat="server" Text="<%$ resources: contact.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="contact" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkIsPrimary"  Text="<%$ resources: chkIsPrimary.Caption %>"  CssClass=""
LabelPlacement="left" AutoPostBack="true"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="title_lbl" AssociatedControlID="title" runat="server" Text="<%$ resources: title.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="title" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft">
   <asp:Label ID="QFTextBox6_lbl" AssociatedControlID="QFTextBox6" runat="server" Text="<%$ resources: QFTextBox6.Caption %>" ></asp:Label>
 </div>   
   <div  class="twocoltextcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="QFTextBox6" PickListName="Role" MustExistInList="false" MaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="QFTextBox7_lbl" AssociatedControlID="QFTextBox7" runat="server" Text="<%$ resources: QFTextBox7.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox7"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
            <td rowspan="3"  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="Strategy_lbl" AssociatedControlID="Strategy" runat="server" Text="<%$ resources: Strategy.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="Strategy"  Rows="2" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
              </tr>
<tr>
              </tr>
</table>
 

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditQuotationContact_CTools" ToolbarLocation="center">
    <asp:ImageButton runat="server" ID="btnSave"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  </SalesLogix:SmartPartToolsContainer>

 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditQuotationContact_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditQuotationContact&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditQuotationContactHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditQuotationContact" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IQuotationContact); }
}

 

protected override void OnAddEntityBindings() {
                 // contact.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding contactTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact.NameLF", contact, "Text");
        BindingSource.Bindings.Add(contactTextBinding);
                    // chkIsPrimary.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkIsPrimaryCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ISPRIMARY", chkIsPrimary, "Checked");
        BindingSource.Bindings.Add(chkIsPrimaryCheckedBinding);
                    // title.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding titleTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact.Title", title, "Text");
        BindingSource.Bindings.Add(titleTextBinding);
                    // QFTextBox6.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox6PickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesRole", QFTextBox6, "PickListValue");
        BindingSource.Bindings.Add(QFTextBox6PickListValueBinding);
                    // QFTextBox7.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBox7TextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Standing", QFTextBox7, "Text");
        BindingSource.Bindings.Add(QFTextBox7TextBinding);
                    // Strategy.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding StrategyTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Strategy", Strategy, "Text");
        BindingSource.Bindings.Add(StrategyTextBinding);
    
   
       }
                                          
protected void chkIsPrimary_ChangeAction(object sender, EventArgs e) {
//set primary 
  if (chkIsPrimary.Checked == true)
    {
        Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
        
        Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
        System.Data.OleDb.OleDbConnection conObj1 = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());
        if (!string.IsNullOrEmpty(page.EntityContext.EntityID.ToString() ))
        {
            conObj1.Open();


            string query1 = "update quotation_contact set isprimary='F' where QUOTATIONID='" + page.EntityContext.EntityID.ToString() + "'";


            System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(query1, conObj1);
            cmd.ExecuteNonQuery();
        }
        
    }

}
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IQuotationContact _entity = BindingSource.Current as Sage.Entity.Interfaces.IQuotationContact;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

    Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 chkIsPrimary.CheckedChanged += new EventHandler(chkIsPrimary_ChangeAction);
btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnSave.Click += new ImageClickEventHandler(DialogService.CloseEventHappened);
btnSave.Click += new ImageClickEventHandler(Refresh);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditQuotationContactAdapter(this)); }
}

public class AddEditQuotationContactAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditQuotationContact
{
    public AddEditQuotationContactAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _contact;
    public  Sage.Platform.Controls.ITextBoxControl contact
    {
        get { return FindControl(ref _contact, "contact"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _title;
    public  Sage.Platform.Controls.ITextBoxControl title
    {
        get { return FindControl(ref _title, "title"); }
    }
    private Sage.Platform.Controls.IPickListControl _QFTextBox6;
    public  Sage.Platform.Controls.IPickListControl QFTextBox6
    {
        get { return FindControl(ref _QFTextBox6, "QFTextBox6"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox7;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox7
    {
        get { return FindControl(ref _QFTextBox7, "QFTextBox7"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Strategy;
    public  Sage.Platform.Controls.ITextBoxControl Strategy
    {
        get { return FindControl(ref _Strategy, "Strategy"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkIsPrimary;
    public  Sage.Platform.Controls.ICheckBoxControl chkIsPrimary
    {
        get { return FindControl(ref _chkIsPrimary, "chkIsPrimary"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }

}

</script>

<script type="text/javascript">
</script>
