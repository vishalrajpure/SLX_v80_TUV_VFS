<%@ Control Language="C#" ClassName="StandardProblemDetail" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Description_lbl" AssociatedControlID="Description" runat="server" Text="<%$ resources: Description.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Description" ToolTip="<%$ resources: Description.ToolTip %>"  dojoType="Sage.UI.Controls.TextBox" MaxLength="255"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
<div class="dependency">
<SalesLogix:DependencyLookupControl runat="server" ID="dlueArea"  LabelCssClass="lbl" ButtonToolTip="<%$ resources: dlueArea.ButtonToolTip %>"  >
<LookupResultsHeaderStyle BackColor="ActiveCaption" Font-Bold="True" ForeColor="White" />
<LookupDialogStyle BackColor="ButtonFace" />
<LookupResultsStyle CellPadding="4" ForeColor="Black" />
<DependentLookups>
 <SalesLogix:DependentLookup LookupEntityName="AreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Area" ParentProperty="" PropertyDisplay="<%$ resources: dlueArea.DependentLookups.Area.PropertyDisplay %>" BindingPropertyName="Area">
  </SalesLogix:DependentLookup>
 <SalesLogix:DependentLookup LookupEntityName="AreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Category" ParentProperty="Area" PropertyDisplay="<%$ resources: dlueArea.DependentLookups.Category.PropertyDisplay %>" BindingPropertyName="Category">
  </SalesLogix:DependentLookup>
 <SalesLogix:DependentLookup LookupEntityName="AreaCategoryIssue" LookupEntityTypeName="Sage.Entity.Interfaces.IAreaCategoryIssue, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DropDownDisplayProperty="Issue" ParentProperty="Category" PropertyDisplay="<%$ resources: dlueArea.DependentLookups.Issue.PropertyDisplay %>" BindingPropertyName="Issue">
  </SalesLogix:DependentLookup>
  </DependentLookups>
  <LookupPreFilters>
      </LookupPreFilters>
</SalesLogix:DependencyLookupControl>
</div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Notes_lbl" AssociatedControlID="Notes" runat="server" Text="<%$ resources: Notes.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Notes" ToolTip="<%$ resources: Notes.ToolTip %>"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="StandardProblemDetail_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="ProblemNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSave"
 ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnDelete"
 ToolTip="<%$ resources: btnDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=StandardProblemDetail&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkStandardProblemDetailHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="StandardProblemDetail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ITicketProblemType); }
}

 

protected override void OnAddEntityBindings() {
                 // Description.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", Description, "Text");
        BindingSource.Bindings.Add(DescriptionTextBinding);
      BindingSource.AddBindingProvider(dlueArea as Sage.Platform.EntityBinding.IEntityBindingProvider);
                 // dlueArea.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dlueAreaTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Area", dlueArea, "Text");
        BindingSource.Bindings.Add(dlueAreaTextBinding);
                    // Notes.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding NotesTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", Notes, "Text");
        BindingSource.Bindings.Add(NotesTextBinding);
    
   
            }
                     
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ITicketProblemType _entity = BindingSource.Current as Sage.Entity.Interfaces.ITicketProblemType;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

          btnSave_ClickActionBRC(sender, e);
    
  
}
protected void btnSave_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect(string.Format("TicketProblemType.aspx?entityId={0}", (this.BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
  
}
protected void btnDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

          btnDelete_ClickActionBRC(sender, e);
    
  
}
protected void btnDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("TicketProblemType.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnDelete.Click += new ImageClickEventHandler(btnDelete_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
    Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
    if (page != null)
    {
	    bool bInsertMode = page.ModeId.ToUpper().Equals("INSERT");
	    this.btnDelete.Visible = !bInsertMode;
        this.ProblemNavigator.Visible = !bInsertMode;
    }

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(btnSave);

btnDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("btnDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
ClientBindingMgr.SetFocusTo(Description);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new StandardProblemDetailAdapter(this)); }
}

public class StandardProblemDetailAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IStandardProblemDetail
{
    public StandardProblemDetailAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _Description;
    public  Sage.Platform.Controls.ITextBoxControl Description
    {
        get { return FindControl(ref _Description, "Description"); }
    }
    private Sage.Platform.Controls.IDependencyLookupControl _dlueArea;
    public  Sage.Platform.Controls.IDependencyLookupControl dlueArea
    {
        get { return FindControl(ref _dlueArea, "dlueArea"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Notes;
    public  Sage.Platform.Controls.ITextBoxControl Notes
    {
        get { return FindControl(ref _Notes, "Notes"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _ProblemNavigator;
    public  Sage.Platform.Controls.IGroupNavigatorControl ProblemNavigator
    {
        get { return FindControl(ref _ProblemNavigator, "ProblemNavigator"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnDelete;
    public  Sage.Platform.Controls.IButtonControl btnDelete
    {
        get { return FindControl(ref _btnDelete, "btnDelete"); }
    }

}

</script>

<script type="text/javascript">
</script>
