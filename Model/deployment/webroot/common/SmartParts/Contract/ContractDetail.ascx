<%@ Control Language="C#" ClassName="ContractDetail" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="25%" />
            <col width="25%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtReference_lbl" AssociatedControlID="txtReference" runat="server" Text="<%$ resources: txtReference.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtReference"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chkActive"  Text="<%$ resources: chkActive.Caption %>"  CssClass=""
LabelPlacement="right"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAccount_lbl" AssociatedControlID="lueAccount" runat="server" Text="<%$ resources: lueAccount.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueAccount" ButtonToolTip="<%$ resources: lueAccount.ButtonToolTip %>" ReadOnly="true" EnableLookup="false" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" EnableHyperLinking="true" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.SubType.PropertyHeader %>" PropertyName="SubType" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpBranch_lbl" AssociatedControlID="lkpBranch" runat="server" Text="<%$ resources: lkpBranch.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lkpBranch" LookupEntityName="Branch" LookupEntityTypeName="Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" LookupBindingMode="String" DropDownDisplayProperty="BranchName"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpSalesOrder_lbl" AssociatedControlID="lkpSalesOrder" runat="server" Text="<%$ resources: lkpSalesOrder.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpSalesOrder" LookupEntityName="SalesOrder" LookupEntityTypeName="Sage.Entity.Interfaces.ISalesOrder, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.Ordercode.PropertyHeader %>" PropertyName="Ordercode" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.OrderDate.PropertyHeader %>" PropertyName="OrderDate" PropertyType="System.DateTime" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.OrderTotal.PropertyHeader %>" PropertyName="OrderTotal" PropertyType="System.Double" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.OrderType.PropertyHeader %>" PropertyName="OrderType" PropertyType="SalesLogix.PickList" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueContact_lbl" AssociatedControlID="lueContact" runat="server" Text="<%$ resources: lueContact.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueContact" ButtonToolTip="<%$ resources: lueContact.ButtonToolTip %>" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.NameLF.PropertyHeader %>" PropertyName="NameLF" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="" PropertyFormat="Phone" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="Description_lbl" AssociatedControlID="Description" runat="server" Text="<%$ resources: Description.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="Description"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpAccountManager_lbl" AssociatedControlID="lkpAccountManager" runat="server" Text="<%$ resources: lkpAccountManager.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpAccountManager" LookupEntityName="UserInfo" LookupEntityTypeName="Sage.Entity.Interfaces.IUserInfo, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccountManager.LookupProperties.FirstName.PropertyHeader %>" PropertyName="FirstName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccountManager.LookupProperties.LastName.PropertyHeader %>" PropertyName="LastName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccountManager.LookupProperties.Phone.PropertyHeader %>" PropertyName="Phone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklFeeType_lbl" AssociatedControlID="pklFeeType" runat="server" Text="<%$ resources: pklFeeType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklFeeType" PickListName="FeeType" MustExistInList="false" MaxLength="32"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklType_lbl" AssociatedControlID="pklType" runat="server" Text="<%$ resources: pklType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklType" PickListName="Product Type" MustExistInList="false" MaxLength="32"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="PONo_lbl" AssociatedControlID="PONo" runat="server" Text="<%$ resources: PONo.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="PONo"  dojoType="Sage.UI.Controls.TextBox" MaxLength="32"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtPODate_lbl" AssociatedControlID="dtPODate" runat="server" Text="<%$ resources: dtPODate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtPODate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtProposdedStartDate_lbl" AssociatedControlID="dtProposdedStartDate" runat="server" Text="<%$ resources: dtProposdedStartDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtProposdedStartDate" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtProposedEndDate_lbl" AssociatedControlID="dtProposedEndDate" runat="server" Text="<%$ resources: dtProposedEndDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtProposedEndDate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtReceivedDate_lbl" AssociatedControlID="dtReceivedDate" runat="server" Text="<%$ resources: dtReceivedDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtReceivedDate" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpExecutingBranch_lbl" AssociatedControlID="lkpExecutingBranch" runat="server" Text="<%$ resources: lkpExecutingBranch.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lkpExecutingBranch" LookupEntityName="Branch" LookupEntityTypeName="Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" LookupBindingMode="String" DropDownDisplayProperty="BranchName"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklService_lbl" AssociatedControlID="pklService" runat="server" Text="<%$ resources: pklService.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklService" PickListName="Contract Service Type" MustExistInList="false" StorageMode="ID" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPONumber_lbl" AssociatedControlID="txtPONumber" runat="server" Text="<%$ resources: txtPONumber.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPONumber"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklContractType_lbl" AssociatedControlID="pklContractType" runat="server" Text="<%$ resources: pklContractType.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklContractType" ReadOnly="true" Enabled="false" PickListName="Contract Type" AutoPostBack="true" MustExistInList="false" StorageMode="ID" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpPurchaseDate_lbl" AssociatedControlID="dtpPurchaseDate" runat="server" Text="<%$ resources: dtpPurchaseDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpPurchaseDate" ButtonToolTip="<%$ resources: dtpPurchaseDate.ButtonToolTip %>" Visible="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpStartDate_lbl" AssociatedControlID="dtpStartDate" runat="server" Text="<%$ resources: dtpStartDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpStartDate" ButtonToolTip="<%$ resources: dtpStartDate.ButtonToolTip %>" Visible="false" AutoPostBack="true" />
  </div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="curListPrice_lbl" AssociatedControlID="curListPrice" runat="server" Text="<%$ resources: curListPrice.Caption %>" Visible="false" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curListPrice" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
Visible="false" AutoPostBack="true"  />
</div>

      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chkContractAfterTicket"  Text="<%$ resources: chkContractAfterTicket.Caption %>"  CssClass=""
Enabled="false" Visible="false" LabelPlacement="right" AutoPostBack="true"  />
</div>
      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="curDiscount_lbl" AssociatedControlID="curDiscount" runat="server" Text="<%$ resources: curDiscount.Caption %>" Visible="false" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curDiscount" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
Visible="false" AutoPostBack="true"  />
</div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpEndDate_lbl" AssociatedControlID="dtpEndDate" runat="server" Text="<%$ resources: dtpEndDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpEndDate" ButtonToolTip="<%$ resources: dtpEndDate.ButtonToolTip %>" Visible="false" AutoPostBack="true" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="usrLastUpdatedBy_lbl" AssociatedControlID="usrLastUpdatedBy" runat="server" Text="<%$ resources: usrLastUpdatedBy.Caption %>" Visible="false" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
    <SalesLogix:SlxUserControl runat="server" ID="usrLastUpdatedBy" Enabled="false" ReadOnly="true" LookupBindingMode="String" ButtonToolTip="<%$ resources: usrLastUpdatedBy.ButtonToolTip %>" Visible="false"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtGracePeriod_lbl" AssociatedControlID="txtGracePeriod" runat="server" Text="<%$ resources: txtGracePeriod.Caption %>" Visible="false" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtGracePeriod"  dojoType="Sage.UI.Controls.TextBox" Visible="false"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteUpdatedDate_lbl" AssociatedControlID="dteUpdatedDate" runat="server" Text="<%$ resources: dteUpdatedDate.Caption %>" Visible="false" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteUpdatedDate" ReadOnly="true" Enabled="false" ButtonToolTip="<%$ resources: dteUpdatedDate.ButtonToolTip %>" DisplayTime="false" Visible="false" />
  </div>

      </td>
      </tr>
<tr>
            <td rowspan="4"  >
<asp:Panel runat="server" ID="ctrlComments" CssClass="controlslist "
Visible="false" >
   <div class=" lbl alignleft" >
   <asp:Label ID="txtComments_lbl" AssociatedControlID="txtComments" runat="server" Text="<%$ resources: txtComments.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtComments"  Rows="3" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

   <asp:ImageButton runat="server" ID="cmdDateStamp"
 ToolTip="<%$ resources: cmdDateStamp.ToolTip %>" CssClass="padleft" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
</asp:Panel>
      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="curContractAmount_lbl" AssociatedControlID="curContractAmount" runat="server" Text="<%$ resources: curContractAmount.Caption %>" Visible="false" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curContractAmount" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
Visible="false" AutoPostBack="true"  />
</div>

      </td>
      </tr>
<tr>
                  <td  >
<asp:Panel runat="server" ID="ctrlstQuantity" CssClass="controlslist "
Visible="false" >
  <div class=" lbl alignleft">
    <asp:Label ID="curQuantity_lbl" AssociatedControlID="curQuantity" runat="server" Text="<%$ resources: curQuantity.Caption %>" Visible="false" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curQuantity" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
Visible="false" AutoPostBack="true"  />
</div>

   <div class=" lbl alignleft">
   <asp:Label ID="numQuantity_lbl" AssociatedControlID="numQuantity" runat="server" Text="<%$ resources: numQuantity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="numQuantity"
Strict="False" 
AutoPostBack="true"  />
  </div>

</asp:Panel>
      </td>
      </tr>
<tr>
                  <td  >
<asp:Panel runat="server" ID="ctrlstRemaining" CssClass="controlslist "
Visible="false" >
  <div class=" lbl alignleft">
    <asp:Label ID="curRemaining_lbl" AssociatedControlID="curRemaining" runat="server" Text="<%$ resources: curRemaining.Caption %>" Visible="false" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curRemaining" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DecimalDigits="-1"
Visible="false"  />
</div>

   <div class=" lbl alignleft">
   <asp:Label ID="numRemaining_lbl" AssociatedControlID="numRemaining" runat="server" Text="<%$ resources: numRemaining.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="numRemaining"
ReadOnly="true" Strict="False" 
 />
  </div>

</asp:Panel>
      </td>
      </tr>
<tr>
                  <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ContractDetail_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="GroupNavigator" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="cmdSave"
 AlternateText="<%$ resources: cmdSave.Caption %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdReset"
 AlternateText="<%$ resources: cmdReset.Caption %>"  ToolTip="<%$ resources: cmdReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
    <asp:ImageButton runat="server" ID="cmdDelete"
 AlternateText="<%$ resources: cmdDelete.Caption %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
    <asp:ImageButton runat="server" ID="cmdCopy"
 AlternateText="<%$ resources: cmdCopy.Caption %>"  ToolTip="<%$ resources: cmdCopy.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Copy_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ContractDetail&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkContractDetailHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ContractDetail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IContract); }
}

 

protected override void OnAddEntityBindings() {
                 // txtReference.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtReferenceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReferenceNumber", txtReference, "Text");
        BindingSource.Bindings.Add(txtReferenceTextBinding);
                    // chkActive.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkActiveCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("IsActive", chkActive, "Checked");
        BindingSource.Bindings.Add(chkActiveCheckedBinding);
                    // lueAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", lueAccount, "LookupResultValue");
        BindingSource.Bindings.Add(lueAccountLookupResultValueBinding);
                    // lkpBranch.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpBranchLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("BranchId", lkpBranch, "LookupResultValue");
        BindingSource.Bindings.Add(lkpBranchLookupResultValueBinding);
                    // lkpSalesOrder.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpSalesOrderLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrderId", lkpSalesOrder, "LookupResultValue");
        BindingSource.Bindings.Add(lkpSalesOrderLookupResultValueBinding);
                    // lueContact.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueContactLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact", lueContact, "LookupResultValue");
        BindingSource.Bindings.Add(lueContactLookupResultValueBinding);
                    // Description.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding DescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", Description, "Text");
        BindingSource.Bindings.Add(DescriptionTextBinding);
                    // lkpAccountManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpAccountManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", lkpAccountManager, "LookupResultValue");
        BindingSource.Bindings.Add(lkpAccountManagerLookupResultValueBinding);
                    // pklFeeType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklFeeTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FeeType", pklFeeType, "PickListValue");
        BindingSource.Bindings.Add(pklFeeTypePickListValueBinding);
                    // pklType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Type", pklType, "PickListValue");
        BindingSource.Bindings.Add(pklTypePickListValueBinding);
                    // PONo.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding PONoTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PONo", PONo, "Text");
        BindingSource.Bindings.Add(PONoTextBinding);
                    // dtPODate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtPODateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PODate", dtPODate, "DateTimeValue");
        BindingSource.Bindings.Add(dtPODateDateTimeValueBinding);
                    // dtProposdedStartDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtProposdedStartDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProposedStartDate", dtProposdedStartDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtProposdedStartDateDateTimeValueBinding);
                    // dtProposedEndDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtProposedEndDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProposedEndDate", dtProposedEndDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtProposedEndDateDateTimeValueBinding);
                    // dtReceivedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtReceivedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReceivedDate", dtReceivedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtReceivedDateDateTimeValueBinding);
                    // lkpExecutingBranch.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpExecutingBranchLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ExecutingBranchId", lkpExecutingBranch, "LookupResultValue");
        BindingSource.Bindings.Add(lkpExecutingBranchLookupResultValueBinding);
                    // pklService.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklServicePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ServiceCode", pklService, "PickListValue");
        BindingSource.Bindings.Add(pklServicePickListValueBinding);
                    // txtPONumber.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtPONumberTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PONumber", txtPONumber, "Text");
        BindingSource.Bindings.Add(txtPONumberTextBinding);
                    // pklContractType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklContractTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TypeCode", pklContractType, "PickListValue");
        BindingSource.Bindings.Add(pklContractTypePickListValueBinding);
                    // dtpPurchaseDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpPurchaseDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PurchaseDate", dtpPurchaseDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpPurchaseDateDateTimeValueBinding);
                    // dtpStartDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpStartDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("StartDate", dtpStartDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpStartDateDateTimeValueBinding);
                    // curListPrice.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curListPriceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ListPrice", curListPrice, "Text");
        BindingSource.Bindings.Add(curListPriceTextBinding);
                    // chkContractAfterTicket.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkContractAfterTicketCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("FirstTicket", chkContractAfterTicket, "Checked");
        BindingSource.Bindings.Add(chkContractAfterTicketCheckedBinding);
                    // curDiscount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curDiscountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Discount", curDiscount, "Text");
        BindingSource.Bindings.Add(curDiscountTextBinding);
                    // dtpEndDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpEndDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndingDate", dtpEndDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpEndDateDateTimeValueBinding);
                    // usrLastUpdatedBy.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrLastUpdatedByTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", usrLastUpdatedBy, "Text");
        usrLastUpdatedByTextBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(usrLastUpdatedByTextBinding);
                 // usrLastUpdatedBy.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding usrLastUpdatedByLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyUser", usrLastUpdatedBy, "LookupResultValue");
        BindingSource.Bindings.Add(usrLastUpdatedByLookupResultValueBinding);
                    // txtGracePeriod.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtGracePeriodTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("GracePeriod", txtGracePeriod, "Text");
        BindingSource.Bindings.Add(txtGracePeriodTextBinding);
                    // dteUpdatedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteUpdatedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ModifyDate", dteUpdatedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteUpdatedDateDateTimeValueBinding);
                       // txtComments.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCommentsTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Notes", txtComments, "Text");
        BindingSource.Bindings.Add(txtCommentsTextBinding);
                       // curContractAmount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curContractAmountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Amount", curContractAmount, "Text");
        BindingSource.Bindings.Add(curContractAmountTextBinding);
                       // curQuantity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curQuantityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Period", curQuantity, "Text");
        BindingSource.Bindings.Add(curQuantityTextBinding);
                    // numQuantity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding numQuantityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Period", numQuantity, "Text");
        BindingSource.Bindings.Add(numQuantityTextBinding);
                       // curRemaining.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curRemainingTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Remaining", curRemaining, "Text");
        BindingSource.Bindings.Add(curRemainingTextBinding);
                    // numRemaining.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding numRemainingTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Remaining", numRemaining, "Text", "{0:f}", "");
        BindingSource.Bindings.Add(numRemainingTextBinding);
    
   
                    }
                                                                                                                                                                                                                                                                          
protected void lueAccount_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnAccountChanged", objarray);

  
}
protected void lueContact_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnContactChanged", objarray);

  
}
protected void pklContractType_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnContractTypeChanged", objarray);

  
}
protected void dtpStartDate_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnStartDateChanged", objarray);

  
}
protected void curListPrice_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnListPriceChanged", objarray);

  
}
protected void chkContractAfterTicket_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnFirstTicketChanged", objarray);

  
}
protected void curDiscount_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnDiscountChanged", objarray);

  
}
protected void dtpEndDate_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnEndingDateChanged", objarray);

  
}
protected void cmdDateStamp_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.AddContractCommentsTimeStamp", objarray);

  
}
protected void curContractAmount_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnAmountChanged", objarray);

  
}
protected void curQuantity_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnQuantityChanged", objarray);

  
}
protected void numQuantity_ChangeAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.IContract>("Contract.OnQuantityChanged", objarray);

  
}
protected void cmdSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IContract _entity = BindingSource.Current as Sage.Entity.Interfaces.IContract;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}
protected void cmdReset_ClickAction(object sender, EventArgs e) {
  
}
protected void cmdDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

          cmdDelete_ClickActionBRC(sender, e);
    
  
}
protected void cmdDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Contract.aspx");
  
}
protected void cmdCopy_ClickAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("InsertContract.aspx?modeid=Insert&entityId={0}", (BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
   
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueAccount.LookupResultValueChanged += new EventHandler(lueAccount_ChangeAction);
lueContact.LookupResultValueChanged += new EventHandler(lueContact_ChangeAction);
pklContractType.PickListValueChanged += new EventHandler(pklContractType_ChangeAction);
dtpStartDate.DateTimeValueChanged += new EventHandler(dtpStartDate_ChangeAction);
curListPrice.TextChanged += new EventHandler(curListPrice_ChangeAction);
chkContractAfterTicket.CheckedChanged += new EventHandler(chkContractAfterTicket_ChangeAction);
curDiscount.TextChanged += new EventHandler(curDiscount_ChangeAction);
dtpEndDate.DateTimeValueChanged += new EventHandler(dtpEndDate_ChangeAction);
cmdDateStamp.Click += new ImageClickEventHandler(cmdDateStamp_ClickAction);
curContractAmount.TextChanged += new EventHandler(curContractAmount_ChangeAction);
curQuantity.TextChanged += new EventHandler(curQuantity_ChangeAction);
numQuantity.TextChanged += new EventHandler(numQuantity_ChangeAction);
cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);
cmdReset.Click += new ImageClickEventHandler(cmdReset_ClickAction);
cmdDelete.Click += new ImageClickEventHandler(cmdDelete_ClickAction);
cmdCopy.Click += new ImageClickEventHandler(cmdCopy_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.IContract contract = this.BindingSource.Current as Sage.Entity.Interfaces.IContract;
if (String.IsNullOrEmpty(contract.TypeCode)) return;
Sage.SalesLogix.PickLists.PickList picklist =
    Sage.SalesLogix.PickLists.PickList.GetPickListById(contract.TypeCode);
if (picklist != null)
{
    string value = picklist.Text.ToUpper();
    if (value == GetLocalResourceObject("ContractType_Dollars").ToString().ToUpper())
    {
        numQuantity.Visible = false;
        curQuantity.Visible = true;
        numRemaining.Visible = false;
        curRemaining.Visible = true;
    }
    else
    {
        curQuantity.Visible = false;
        numQuantity.Visible = true;
        curRemaining.Visible = false;
        numRemaining.Visible = true;
    }
}
curQuantity_lbl.Visible = curQuantity.Visible;
numQuantity_lbl.Visible = numQuantity.Visible;
curRemaining_lbl.Visible = curRemaining.Visible;
numRemaining_lbl.Visible = numRemaining.Visible;

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(cmdSave);

cmdDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("cmdDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(cmdReset); }


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ContractDetailAdapter(this)); }
}

public class ContractDetailAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IContractDetail
{
    public ContractDetailAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtReference;
    public  Sage.Platform.Controls.ITextBoxControl txtReference
    {
        get { return FindControl(ref _txtReference, "txtReference"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkActive;
    public  Sage.Platform.Controls.ICheckBoxControl chkActive
    {
        get { return FindControl(ref _chkActive, "chkActive"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueAccount;
    public  Sage.Platform.Controls.ILookupControl lueAccount
    {
        get { return FindControl(ref _lueAccount, "lueAccount"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpSalesOrder;
    public  Sage.Platform.Controls.ILookupControl lkpSalesOrder
    {
        get { return FindControl(ref _lkpSalesOrder, "lkpSalesOrder"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _Description;
    public  Sage.Platform.Controls.ITextBoxControl Description
    {
        get { return FindControl(ref _Description, "Description"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklFeeType;
    public  Sage.Platform.Controls.IPickListControl pklFeeType
    {
        get { return FindControl(ref _pklFeeType, "pklFeeType"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _PONo;
    public  Sage.Platform.Controls.ITextBoxControl PONo
    {
        get { return FindControl(ref _PONo, "PONo"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtProposdedStartDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtProposdedStartDate
    {
        get { return FindControl(ref _dtProposdedStartDate, "dtProposdedStartDate"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtReceivedDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtReceivedDate
    {
        get { return FindControl(ref _dtReceivedDate, "dtReceivedDate"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklService;
    public  Sage.Platform.Controls.IPickListControl pklService
    {
        get { return FindControl(ref _pklService, "pklService"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklContractType;
    public  Sage.Platform.Controls.IPickListControl pklContractType
    {
        get { return FindControl(ref _pklContractType, "pklContractType"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpStartDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpStartDate
    {
        get { return FindControl(ref _dtpStartDate, "dtpStartDate"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkContractAfterTicket;
    public  Sage.Platform.Controls.ICheckBoxControl chkContractAfterTicket
    {
        get { return FindControl(ref _chkContractAfterTicket, "chkContractAfterTicket"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpEndDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpEndDate
    {
        get { return FindControl(ref _dtpEndDate, "dtpEndDate"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtGracePeriod;
    public  Sage.Platform.Controls.ITextBoxControl txtGracePeriod
    {
        get { return FindControl(ref _txtGracePeriod, "txtGracePeriod"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlComments;
    public  Sage.Platform.Controls.IControlsListControl ctrlComments
    {
        get { return FindControl(ref _ctrlComments, "ctrlComments"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtComments;
    public  Sage.Platform.Controls.ITextBoxControl txtComments
    {
        get { return FindControl(ref _txtComments, "txtComments"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdDateStamp;
    public  Sage.Platform.Controls.IButtonControl cmdDateStamp
    {
        get { return FindControl(ref _cmdDateStamp, "cmdDateStamp"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpBranch;
    public  Sage.Platform.Controls.ILookupControl lkpBranch
    {
        get { return FindControl(ref _lkpBranch, "lkpBranch"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueContact;
    public  Sage.Platform.Controls.ILookupControl lueContact
    {
        get { return FindControl(ref _lueContact, "lueContact"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpAccountManager;
    public  Sage.Platform.Controls.ILookupControl lkpAccountManager
    {
        get { return FindControl(ref _lkpAccountManager, "lkpAccountManager"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklType;
    public  Sage.Platform.Controls.IPickListControl pklType
    {
        get { return FindControl(ref _pklType, "pklType"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtPODate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtPODate
    {
        get { return FindControl(ref _dtPODate, "dtPODate"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtProposedEndDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtProposedEndDate
    {
        get { return FindControl(ref _dtProposedEndDate, "dtProposedEndDate"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpExecutingBranch;
    public  Sage.Platform.Controls.ILookupControl lkpExecutingBranch
    {
        get { return FindControl(ref _lkpExecutingBranch, "lkpExecutingBranch"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtPONumber;
    public  Sage.Platform.Controls.ITextBoxControl txtPONumber
    {
        get { return FindControl(ref _txtPONumber, "txtPONumber"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpPurchaseDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpPurchaseDate
    {
        get { return FindControl(ref _dtpPurchaseDate, "dtpPurchaseDate"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curListPrice;
    public  Sage.Platform.Controls.ICurrencyControl curListPrice
    {
        get { return FindControl(ref _curListPrice, "curListPrice"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curDiscount;
    public  Sage.Platform.Controls.ICurrencyControl curDiscount
    {
        get { return FindControl(ref _curDiscount, "curDiscount"); }
    }
    private Sage.Platform.Controls.IUserControl _usrLastUpdatedBy;
    public  Sage.Platform.Controls.IUserControl usrLastUpdatedBy
    {
        get { return FindControl(ref _usrLastUpdatedBy, "usrLastUpdatedBy"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteUpdatedDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dteUpdatedDate
    {
        get { return FindControl(ref _dteUpdatedDate, "dteUpdatedDate"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curContractAmount;
    public  Sage.Platform.Controls.ICurrencyControl curContractAmount
    {
        get { return FindControl(ref _curContractAmount, "curContractAmount"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstQuantity;
    public  Sage.Platform.Controls.IControlsListControl ctrlstQuantity
    {
        get { return FindControl(ref _ctrlstQuantity, "ctrlstQuantity"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curQuantity;
    public  Sage.Platform.Controls.ICurrencyControl curQuantity
    {
        get { return FindControl(ref _curQuantity, "curQuantity"); }
    }
    private Sage.Platform.Controls.INumericControl _numQuantity;
    public  Sage.Platform.Controls.INumericControl numQuantity
    {
        get { return FindControl(ref _numQuantity, "numQuantity"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstRemaining;
    public  Sage.Platform.Controls.IControlsListControl ctrlstRemaining
    {
        get { return FindControl(ref _ctrlstRemaining, "ctrlstRemaining"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curRemaining;
    public  Sage.Platform.Controls.ICurrencyControl curRemaining
    {
        get { return FindControl(ref _curRemaining, "curRemaining"); }
    }
    private Sage.Platform.Controls.INumericControl _numRemaining;
    public  Sage.Platform.Controls.INumericControl numRemaining
    {
        get { return FindControl(ref _numRemaining, "numRemaining"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _GroupNavigator;
    public  Sage.Platform.Controls.IGroupNavigatorControl GroupNavigator
    {
        get { return FindControl(ref _GroupNavigator, "GroupNavigator"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdSave;
    public  Sage.Platform.Controls.IButtonControl cmdSave
    {
        get { return FindControl(ref _cmdSave, "cmdSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdReset;
    public  Sage.Platform.Controls.IButtonControl cmdReset
    {
        get { return FindControl(ref _cmdReset, "cmdReset"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdDelete;
    public  Sage.Platform.Controls.IButtonControl cmdDelete
    {
        get { return FindControl(ref _cmdDelete, "cmdDelete"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdCopy;
    public  Sage.Platform.Controls.IButtonControl cmdCopy
    {
        get { return FindControl(ref _cmdCopy, "cmdCopy"); }
    }

}

</script>

<script type="text/javascript">
</script>
