<%@ Control Language="C#" ClassName="ICAccounting" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
  <SalesLogix:SlxGridView runat="server" ID="grdAccounting" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
 AllowPaging="true" PageSize="20" OnPageIndexChanging="grdAccountingpage_changing" EmptyTableRowText="<%$ resources: grdAccounting.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True"  AllowSorting="true" OnSorting="grdAccounting_Sorting"  ShowSortIcon="true" >
<Columns>
   <asp:BoundField DataField="IntegrationApplication.Name"
      HeaderText="<%$ resources: grdAccounting.11c82dc6-3c78-4d13-8b35-cc8a6693c7f6.ColumnHeading %>"       SortExpression="IntegrationApplication.Name"    >
      </asp:BoundField>
    <asp:BoundField DataField="Status"
      HeaderText="<%$ resources: grdAccounting.f954206c-35b2-4d00-9c96-dd52e8c712ba.ColumnHeading %>"       SortExpression="Status"    >
      </asp:BoundField>
    <asp:BoundField DataField="IntegrationApplication.Name"
      HeaderText="<%$ resources: grdAccounting.91911580-4435-42fa-bdbb-8a09d671e75c.ColumnHeading %>"       SortExpression="IntegrationApplication.Name"    >
      </asp:BoundField>
    <asp:TemplateField   HeaderText="<%$ resources: grdAccounting.6c3bc72d-f3de-48d8-b3ae-adb680fa1afd.ColumnHeading %>"       SortExpression="CreateUser"  >
    <itemtemplate>
   <SalesLogix:SlxUserControl runat="server" ID="grdAccountingcol4" DisplayMode="AsText" LookupResultValue='<%#  dtscAccounting.getPropertyValue(Container.DataItem, "CreateUser")  %>' CssClass=""  />
   </itemtemplate></asp:TemplateField>
    <asp:TemplateField   HeaderText="<%$ resources: grdAccounting.a7d22ede-ff75-408d-b56d-67f44e008070.ColumnHeading %>"       SortExpression="LinkedDate"  >
    <itemtemplate>
   <SalesLogix:DateTimePicker runat="server" ID="grdAccountingcol5"  DisplayMode="AsText" DateTimeValue='<%#  dtscAccounting.getPropertyValue(Container.DataItem, "LinkedDate")  %>'  CssClass=""  />
   </itemtemplate></asp:TemplateField>
 </Columns>
    <PagerSettings Mode="NumericFirstLast" FirstPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=Start_16x16" LastPageImageUrl="ImageResource.axd?scope=global&type=Global_Images&key=End_16x16" />
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


protected void grdAccountingpage_changing(object sender, GridViewPageEventArgs e)
{
 grdAccounting.PageIndex = e.NewPageIndex;
 grdAccounting.DataBind();
}
protected void grdAccounting_Sorting(object sender, GridViewSortEventArgs e) { }
</script>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ICAccounting_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ICAccounting&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkICAccountingHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ICAccounting" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtscAccounting;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtscAccounting
{ 
  get 
  {
    if (_dtscAccounting == null)
    {
             _dtscAccounting = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IAccountOperatingCompany), 
	    EntityType              ,"AccountOperatingCompanies", System.Reflection.MemberTypes.Property);
                   _dtscAccounting.UseSmartQuery = true;
      	   	}
 	return _dtscAccounting;
  }
}

void dtscAccounting_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtscAccounting.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtscAccounting);
   }
}

 



 

protected override void OnAddEntityBindings() {
       dtscAccounting.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("AccountOperatingCompanies", grdAccounting ));
   dtscAccounting.BindFieldNames = new String[] { "Id","IntegrationApplication.Name","Status","CreateUser","LinkedDate" };
     
     BindingSource.OnCurrentEntitySet += new EventHandler(dtscAccounting_OnCurrentEntitySet);
    
}
       

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dtscAccounting.SourceObject == null) { dtscAccounting.SourceObject = BindingSource.Current; }
if (dtscAccounting.SourceObject == null) { RegisterBindingsWithClient(dtscAccounting); }
dtscAccounting.Bind();



}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ICAccountingAdapter(this)); }
}

public class ICAccountingAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IICAccounting
{
    public ICAccountingAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataGridControl _grdAccounting;
    public  Sage.Platform.Controls.IDataGridControl grdAccounting
    {
        get { return FindControl(ref _grdAccounting, "grdAccounting"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dtscAccounting;
    public  Sage.Platform.Controls.IDataSourceControl dtscAccounting
    {
        get { return FindControl(ref _dtscAccounting, "dtscAccounting"); }
    }

}

</script>

<script type="text/javascript">
</script>
