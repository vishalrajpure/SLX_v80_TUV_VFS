<%@ Control Language="C#" ClassName="AccountOpportunities" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="25%" />
            <col width="25%" />
            <col width="25%" />
            <col width="25%" />
     <tr>
            <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblOpen" Text="<%$ resources: lblOpen.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblClosedWon" Text="<%$ resources: lblClosedWon.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblClosedLost" Text="<%$ resources: lblClosedLost.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblInactive" Text="<%$ resources: lblInactive.Text %>"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="OpenCount_lbl" AssociatedControlID="OpenCount" runat="server" Text="<%$ resources: OpenCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="OpenCount" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ClosedWonCount_lbl" AssociatedControlID="ClosedWonCount" runat="server" Text="<%$ resources: ClosedWonCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ClosedWonCount" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="ClosedLostCount_lbl" AssociatedControlID="ClosedLostCount" runat="server" Text="<%$ resources: ClosedLostCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="ClosedLostCount" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="InactiveCount_lbl" AssociatedControlID="InactiveCount" runat="server" Text="<%$ resources: InactiveCount.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="InactiveCount" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
<div class=" lbl alignleft">
    <asp:Label ID="OpenTotal_lbl" AssociatedControlID="OpenTotal" runat="server" Text="<%$ resources: OpenTotal.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="OpenTotal" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DecimalDigits="-1"
 />
</div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="ClosedWonTotal_lbl" AssociatedControlID="ClosedWonTotal" runat="server" Text="<%$ resources: ClosedWonTotal.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="ClosedWonTotal" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DecimalDigits="-1"
 />
</div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="ClosedLostTotal_lbl" AssociatedControlID="ClosedLostTotal" runat="server" Text="<%$ resources: ClosedLostTotal.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="ClosedLostTotal" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DecimalDigits="-1"
 />
</div>

      </td>
                <td  >
<div class=" lbl alignleft">
    <asp:Label ID="InactiveTotal_lbl" AssociatedControlID="InactiveTotal" runat="server" Text="<%$ resources: InactiveTotal.Caption %>" ></asp:Label>
</div>
 <div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="InactiveTotal" 
    ExchangeRateType="BaseRate"
    ReadOnly="true"  Required="false"
 DisplayCurrencyCode="false" DecimalDigits="-1"
 />
</div>

      </td>
      </tr>
<tr>
            <td  colspan="4" >
  <hr />
 

      </td>
                        </tr>
<tr>
            <td  colspan="4" >
 <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

 

<SalesLogix:ScriptResourceProvider ID="AccountOpportunitiesgrdOpportunities_Strings" runat="server">
    <Keys>
          <SalesLogix:ResourceKeyName Key="grdOpportunities.38029fed-9a11-4909-acb0-172580949665.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdOpportunities.676ac648-6253-4fec-87e8-88b2437c51fd.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdOpportunities.19474684-0f99-413c-abea-6afc786caee2.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdOpportunities.2c849f60-beb9-43bf-bdf5-5798180ace75.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdOpportunities.6f2dc306-def2-481b-826d-7d86d4be6d1c.ColumnHeading" />
            </Keys>
</SalesLogix:ScriptResourceProvider>

							
		
		
		
		

					 
  <div id="AccountOpportunitiesgrdOpportunities_Container" style="width:100%;height:100%;" class="">
    <div id="AccountOpportunitiesgrdOpportunities_Grid" style="width:100%;height:100%;"
     data-dojo-type="dijit.layout.BorderContainer"
></div>
</div>



      </td>
                        </tr>
<tr>
            <td></td>
                <td></td>
                <td></td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountOpportunities_RTools" ToolbarLocation="right">
    <asp:HyperLink runat="server" ID="AddOpportunity"   ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16X16"    ToolTip="<%$ resources: AddOpportunity.ToolTip %>"    NavigateUrl="~/InsertOpportunity.aspx?modeid=Insert"     />
  

  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AccountOpportunities&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAccountOpportunitiesHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AccountOpportunities" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityBindingSource _dsOppStats;
public Sage.Platform.WebPortal.Binding.WebEntityBindingSource dsOppStats
{ 
  get 
  {
    if (_dsOppStats == null)
    {
             _dsOppStats = new Sage.Platform.WebPortal.Binding.WebEntityBindingSource(typeof(Object),
	    EntityType                     ,"GetOpportunityStats", System.Reflection.MemberTypes.Method);
            	   	}
 	return _dsOppStats;
  }
}

void dsOppStats_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsOppStats.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsOppStats);
   }
}

 



 

protected override void OnAddEntityBindings() {
                             // OpenCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpenCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpenCount", OpenCount, "Text");
        dsOppStats.Bindings.Add(OpenCountTextBinding);
                    // ClosedWonCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedWonCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedWonCount", ClosedWonCount, "Text");
        dsOppStats.Bindings.Add(ClosedWonCountTextBinding);
                    // ClosedLostCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedLostCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedLostCount", ClosedLostCount, "Text");
        dsOppStats.Bindings.Add(ClosedLostCountTextBinding);
                    // InactiveCount.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding InactiveCountTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("InactiveCount", InactiveCount, "Text");
        dsOppStats.Bindings.Add(InactiveCountTextBinding);
                    // OpenTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding OpenTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OpenTotal", OpenTotal, "Text");
        dsOppStats.Bindings.Add(OpenTotalTextBinding);
                    // ClosedWonTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedWonTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedWonTotal", ClosedWonTotal, "Text");
        dsOppStats.Bindings.Add(ClosedWonTotalTextBinding);
                    // ClosedLostTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ClosedLostTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClosedLostTotal", ClosedLostTotal, "Text");
        dsOppStats.Bindings.Add(ClosedLostTotalTextBinding);
                    // InactiveTotal.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding InactiveTotalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("InactiveTotal", InactiveTotal, "Text");
        dsOppStats.Bindings.Add(InactiveTotalTextBinding);
          
     BindingSource.OnCurrentEntitySet += new EventHandler(dsOppStats_OnCurrentEntitySet);
    
    }
                                                                                                  

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
 var systemInfo = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);  
 if (systemInfo.MultiCurrency) 
 { 
    FormHelper.AddBaseUserCurrencyRatesToClientContext(PageWorkItem); 
 } 
AddOpportunity.Visible = (RoleSecurityService.HasAccess("Entities/Opportunity/Add"));
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsOppStats.SourceObject == null) { dsOppStats.SourceObject = BindingSource.Current; }
if (dsOppStats.SourceObject == null) { RegisterBindingsWithClient(dsOppStats); }
dsOppStats.Bind( true );


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Account/AccountOpportunities.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.AccountOpportunities.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.AccountOpportunities.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_AccountOpportunities", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AccountOpportunitiesAdapter(this)); }
}

public class AccountOpportunitiesAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountOpportunities
{
    public AccountOpportunitiesAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILabelControl _lblOpen;
    public  Sage.Platform.Controls.ILabelControl lblOpen
    {
        get { return FindControl(ref _lblOpen, "lblOpen"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _OpenCount;
    public  Sage.Platform.Controls.ITextBoxControl OpenCount
    {
        get { return FindControl(ref _OpenCount, "OpenCount"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _OpenTotal;
    public  Sage.Platform.Controls.ICurrencyControl OpenTotal
    {
        get { return FindControl(ref _OpenTotal, "OpenTotal"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblClosedWon;
    public  Sage.Platform.Controls.ILabelControl lblClosedWon
    {
        get { return FindControl(ref _lblClosedWon, "lblClosedWon"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _ClosedWonCount;
    public  Sage.Platform.Controls.ITextBoxControl ClosedWonCount
    {
        get { return FindControl(ref _ClosedWonCount, "ClosedWonCount"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _ClosedWonTotal;
    public  Sage.Platform.Controls.ICurrencyControl ClosedWonTotal
    {
        get { return FindControl(ref _ClosedWonTotal, "ClosedWonTotal"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblClosedLost;
    public  Sage.Platform.Controls.ILabelControl lblClosedLost
    {
        get { return FindControl(ref _lblClosedLost, "lblClosedLost"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _ClosedLostCount;
    public  Sage.Platform.Controls.ITextBoxControl ClosedLostCount
    {
        get { return FindControl(ref _ClosedLostCount, "ClosedLostCount"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _ClosedLostTotal;
    public  Sage.Platform.Controls.ICurrencyControl ClosedLostTotal
    {
        get { return FindControl(ref _ClosedLostTotal, "ClosedLostTotal"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblInactive;
    public  Sage.Platform.Controls.ILabelControl lblInactive
    {
        get { return FindControl(ref _lblInactive, "lblInactive"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _InactiveCount;
    public  Sage.Platform.Controls.ITextBoxControl InactiveCount
    {
        get { return FindControl(ref _InactiveCount, "InactiveCount"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _InactiveTotal;
    public  Sage.Platform.Controls.ICurrencyControl InactiveTotal
    {
        get { return FindControl(ref _InactiveTotal, "InactiveTotal"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dsOppStats;
    public  Sage.Platform.Controls.IDataSourceControl dsOppStats
    {
        get { return FindControl(ref _dsOppStats, "dsOppStats"); }
    }
    private Sage.Platform.Controls.ILinkControl _AddOpportunity;
    public  Sage.Platform.Controls.ILinkControl AddOpportunity
    {
        get { return FindControl(ref _AddOpportunity, "AddOpportunity"); }
    }

}

</script>

<script type="text/javascript">
</script>
