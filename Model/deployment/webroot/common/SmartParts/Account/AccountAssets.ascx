<%@ Control Language="C#" ClassName="AccountAssets" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
   <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

	  	  	   

<SalesLogix:ScriptResourceProvider ID="AccountAssetsgrdAssets_Strings" runat="server">
    <Keys>
        <SalesLogix:ResourceKeyName Key="grdAssets.EmptyTableRowText" />  <SalesLogix:ResourceKeyName Key="grdAssets.a4124a04-6c17-4e29-a35c-27f340e36dc5.ColumnHeading" />
        <SalesLogix:ResourceKeyName Key="grdAssets.a4124a04-6c17-4e29-a35c-27f340e36dc5.Text" />
<SalesLogix:ResourceKeyName Key="1044d27e-4703-4469-ad55-9c8b676e31c7.DialogTitleOverride" />   <SalesLogix:ResourceKeyName Key="grdAssets.59e59e62-db7d-4146-adda-cd7d7136745b.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.c48be44d-1fcc-4e50-8eda-778820212af3.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.6728e16d-efef-4879-8d68-65f599ecbf35.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.2d388020-65ff-4d69-92e9-000e482fd94d.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.c9b81fd8-e256-463f-a1c8-24aa2cd769e4.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.92a21ea1-16f7-4fb0-9753-1d8b021e03e0.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdAssets.6beb1b27-2f6b-4f69-98a3-0f01cf7090a2.ColumnHeading" />
           <SalesLogix:ResourceKeyName Key="grdAssets.Save.ToolTip" />
    <SalesLogix:ResourceKeyName Key="grdAssets.Delete.ToolTip" />
    <SalesLogix:ResourceKeyName Key="grdAssets.Cancel.ToolTip" />
     </Keys>
</SalesLogix:ScriptResourceProvider>

								 
  <div id="AccountAssetsgrdAssets_Container" style="width:100%;height:100%;" class="">
    <div id="AccountAssetsgrdAssets_Grid" style="width:100%;height:100%;"
     data-dojo-type="dijit.layout.BorderContainer"
></div>
</div>


 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AccountAssets_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnAddAsset"
 ToolTip="<%$ resources: btnAddAsset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=plus_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AccountAssets&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAccountAssetsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AccountAssets" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAccount); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsAssets;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsAssets
{ 
  get 
  {
    if (_dtsAssets == null)
    {
             _dtsAssets = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IAccountProduct), 
	    EntityType              ,"AccountProducts", System.Reflection.MemberTypes.Property);
            	   	}
 	return _dtsAssets;
  }
}

void dtsAssets_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsAssets.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsAssets);
   }
}

 



 

protected override void OnAddEntityBindings() {
    
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsAssets_OnCurrentEntitySet);
    
    }
       
protected void btnAddAsset_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(575, 750, "AddEditAccountProduct", string.Empty );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.IAccountProduct); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.IAccountProduct),
    typeof(Sage.Entity.Interfaces.IAccount),
    typeof(Sage.Entity.Interfaces.IAccountProduct).GetProperty("Account"),
    typeof(Sage.Entity.Interfaces.IAccount).GetProperty("AccountProducts"));
  DialogService.ShowDialog();
}

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnAddAsset.Click += new ImageClickEventHandler(btnAddAsset_ClickAction);


}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dtsAssets.SourceObject == null) { dtsAssets.SourceObject = BindingSource.Current; }
if (dtsAssets.SourceObject == null) { RegisterBindingsWithClient(dtsAssets); }
dtsAssets.Bind();


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Account/AccountAssets.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.AccountAssets.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.AccountAssets.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_AccountAssets", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AccountAssetsAdapter(this)); }
}

public class AccountAssetsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAccountAssets
{
    public AccountAssetsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataSourceControl _dtsAssets;
    public  Sage.Platform.Controls.IDataSourceControl dtsAssets
    {
        get { return FindControl(ref _dtsAssets, "dtsAssets"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnAddAsset;
    public  Sage.Platform.Controls.IButtonControl btnAddAsset
    {
        get { return FindControl(ref _btnAddAsset, "btnAddAsset"); }
    }

}

</script>

<script type="text/javascript">
</script>
