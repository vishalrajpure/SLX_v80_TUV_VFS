<%@ Control Language="C#" ClassName="IRNReportDetail" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpAccount_lbl" AssociatedControlID="lkpAccount" runat="server" Text="<%$ resources: lkpAccount.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpAccount" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.BranchId.PropertyHeader %>" PropertyName="BranchId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.Owner.User.UserName.PropertyHeader %>" PropertyName="Owner.User.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpAccount.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtReferenceNo_lbl" AssociatedControlID="txtReferenceNo" runat="server" Text="<%$ resources: txtReferenceNo.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtReferenceNo"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpSalesOrder_lbl" AssociatedControlID="lkpSalesOrder" runat="server" Text="<%$ resources: lkpSalesOrder.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpSalesOrder" LookupEntityName="SalesOrder" LookupEntityTypeName="Sage.Entity.Interfaces.ISalesOrder, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.BranchId.PropertyHeader %>" PropertyName="BranchId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.Ordercode.PropertyHeader %>" PropertyName="Ordercode" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpSalesOrder.LookupProperties.SAPJobNo.PropertyHeader %>" PropertyName="SAPJobNo" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueVender_lbl" AssociatedControlID="lueVender" runat="server" Text="<%$ resources: lueVender.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueVender" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.BranchId.PropertyHeader %>" PropertyName="BranchId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.Owner.User.UserName.PropertyHeader %>" PropertyName="Owner.User.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueVender.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueContract_lbl" AssociatedControlID="lueContract" runat="server" Text="<%$ resources: lueContract.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueContract" ButtonToolTip="<%$ resources: lueContract.ButtonToolTip %>" LookupEntityName="Contract" LookupEntityTypeName="Sage.SalesLogix.Entities.Contract, Sage.SalesLogix.Entities" SeedProperty="SalesOrder.Id" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.ReferenceNumber.PropertyHeader %>" PropertyName="ReferenceNumber" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.ServiceCode.PropertyHeader %>" PropertyName="ServiceCode" PropertyType="SalesLogix.PickList" PropertyFormat="PickList" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.TypeCode.PropertyHeader %>" PropertyName="TypeCode" PropertyType="SalesLogix.PickList" PropertyFormat="PickList" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.Remaining.PropertyHeader %>" PropertyName="Remaining" PropertyType="" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="True"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.StartDate.PropertyHeader %>" PropertyName="StartDate" PropertyType="System.DateTime" PropertyFormat="DateTime" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="True"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContract.LookupProperties.EndingDate.PropertyHeader %>" PropertyName="EndingDate" PropertyType="System.DateTime" PropertyFormat="DateTime" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="True"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="plklocation_lbl" AssociatedControlID="plklocation" runat="server" Text="<%$ resources: plklocation.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="plklocation" MustExistInList="false" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lkpTicket_lbl" AssociatedControlID="lkpTicket" runat="server" Text="<%$ resources: lkpTicket.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lkpTicket" LookupEntityName="Ticket" LookupEntityTypeName="Sage.Entity.Interfaces.ITicket, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Contract.Id" AutoPostBack="true" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.Category.PropertyHeader %>" PropertyName="Category" PropertyType="SalesLogix.PickList" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.ExecutingBranch.PropertyHeader %>" PropertyName="ExecutingBranch" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.OriginatingBranch.PropertyHeader %>" PropertyName="OriginatingBranch" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.ProjectName.PropertyHeader %>" PropertyName="ProjectName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lkpTicket.LookupProperties.SubCategory.PropertyHeader %>" PropertyName="SubCategory" PropertyType="SalesLogix.PickList" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="plkPlaceOfIssue_lbl" AssociatedControlID="plkPlaceOfIssue" runat="server" Text="<%$ resources: plkPlaceOfIssue.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="plkPlaceOfIssue" MustExistInList="false" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPONo_lbl" AssociatedControlID="txtPONo" runat="server" Text="<%$ resources: txtPONo.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPONo"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtPODate_lbl" AssociatedControlID="dtPODate" runat="server" Text="<%$ resources: dtPODate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtPODate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtConclusion_lbl" AssociatedControlID="txtConclusion" runat="server" Text="<%$ resources: txtConclusion.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtConclusion"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="plkOrderStatus_lbl" AssociatedControlID="plkOrderStatus" runat="server" Text="<%$ resources: plkOrderStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="plkOrderStatus" MustExistInList="false" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCalibration_lbl" AssociatedControlID="txtCalibration" runat="server" Text="<%$ resources: txtCalibration.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCalibration"  dojoType="Sage.UI.Controls.TextBox" MaxLength="2147483647"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDisclaimer_lbl" AssociatedControlID="txtDisclaimer" runat="server" Text="<%$ resources: txtDisclaimer.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDisclaimer"  dojoType="Sage.UI.Controls.TextBox" MaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtFooter_lbl" AssociatedControlID="txtFooter" runat="server" Text="<%$ resources: txtFooter.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtFooter"  dojoType="Sage.UI.Controls.TextBox" MaxLength="2147483647"  />
  </div>

      </td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="IRNReportDetail_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="grnVisitReport" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="cmdSave"
 AlternateText="<%$ resources: cmdSave.Caption %>"  ToolTip="<%$ resources: cmdSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdDelete"
 AlternateText="<%$ resources: cmdDelete.Caption %>"  ToolTip="<%$ resources: cmdDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=IRNReportDetail&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkIRNReportDetailHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="IRNReportDetail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IRNReport); }
}

 

protected override void OnAddEntityBindings() {
                 // lkpAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", lkpAccount, "LookupResultValue");
        BindingSource.Bindings.Add(lkpAccountLookupResultValueBinding);
                    // txtReferenceNo.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtReferenceNoTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ReferenceNumber", txtReferenceNo, "Text");
        BindingSource.Bindings.Add(txtReferenceNoTextBinding);
                    // lkpSalesOrder.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpSalesOrderLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrder", lkpSalesOrder, "LookupResultValue");
        BindingSource.Bindings.Add(lkpSalesOrderLookupResultValueBinding);
                 // lkpSalesOrder.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpSalesOrderSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lkpSalesOrder, "SeedValue");
        lkpSalesOrderSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lkpSalesOrderSeedValueBinding);
                    // lueVender.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueVenderLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("VendorId", lueVender, "LookupResultValue");
        BindingSource.Bindings.Add(lueVenderLookupResultValueBinding);
                    // lueContract.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueContractLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ContractId", lueContract, "LookupResultValue");
        BindingSource.Bindings.Add(lueContractLookupResultValueBinding);
                 // lueContract.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueContractSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrder.Id", lueContract, "SeedValue");
        lueContractSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lueContractSeedValueBinding);
                    // plklocation.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding plklocationPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Location", plklocation, "PickListValue");
        BindingSource.Bindings.Add(plklocationPickListValueBinding);
                    // lkpTicket.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpTicketLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Ticket", lkpTicket, "LookupResultValue");
        BindingSource.Bindings.Add(lkpTicketLookupResultValueBinding);
                 // lkpTicket.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lkpTicketSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contract.Id", lkpTicket, "SeedValue");
        lkpTicketSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lkpTicketSeedValueBinding);
                       // txtPONo.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtPONoTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PONumber", txtPONo, "Text");
        BindingSource.Bindings.Add(txtPONoTextBinding);
                    // dtPODate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtPODateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("PODate", dtPODate, "DateTimeValue");
        BindingSource.Bindings.Add(dtPODateDateTimeValueBinding);
                    // txtConclusion.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtConclusionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Conclusion", txtConclusion, "Text");
        BindingSource.Bindings.Add(txtConclusionTextBinding);
                    // plkOrderStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding plkOrderStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OrderStatus", plkOrderStatus, "PickListValue");
        BindingSource.Bindings.Add(plkOrderStatusPickListValueBinding);
                    // txtCalibration.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCalibrationTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Calibration", txtCalibration, "Text");
        BindingSource.Bindings.Add(txtCalibrationTextBinding);
                    // txtDisclaimer.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDisclaimerTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Disclaimer", txtDisclaimer, "Text");
        BindingSource.Bindings.Add(txtDisclaimerTextBinding);
                    // txtFooter.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtFooterTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Footer", txtFooter, "Text");
        BindingSource.Bindings.Add(txtFooterTextBinding);
    
   
            }
                                                                                                         
protected void lkpTicket_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IIRNReport VRpt = this.BindingSource.Current as Sage.Entity.Interfaces.IIRNReport;
Sage.Entity.Interfaces.ITicket tkt = lkpTicket.LookupResultValue as Sage.Entity.Interfaces.ITicket;
if(tkt != null)
{
	VRpt.Account= tkt.Contract.Account;
	Sage.Entity.Interfaces.ISalesOrder objsales = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.ISalesOrder>(tkt.Contract.SalesOrderId);
	if(objsales != null)
	    VRpt.SalesOrder = objsales;
	Sage.Entity.Interfaces.IContract objcont = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IContract>(tkt.Contract.Id);
	if(objcont != null)
	VRpt.Contract= objcont;	
	VRpt.Location= tkt.JobLocation;
}






}
protected void cmdSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IRNReport _entity = BindingSource.Current as Sage.Entity.Interfaces.IRNReport;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

      		        cmdSave_ClickActionBRC(sender, e);
    
  
}
protected void cmdSave_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect(string.Format("IRNReport.aspx?entityId={0}", (this.BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
  
}
protected void cmdDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lkpTicket.LookupResultValueChanged += new EventHandler(lkpTicket_ChangeAction);
cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);
cmdDelete.Click += new ImageClickEventHandler(cmdDelete_ClickAction);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(cmdSave);

cmdDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("cmdDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new IRNReportDetailAdapter(this)); }
}

public class IRNReportDetailAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IIRNReportDetail
{
    public IRNReportDetailAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILookupControl _lkpAccount;
    public  Sage.Platform.Controls.ILookupControl lkpAccount
    {
        get { return FindControl(ref _lkpAccount, "lkpAccount"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpSalesOrder;
    public  Sage.Platform.Controls.ILookupControl lkpSalesOrder
    {
        get { return FindControl(ref _lkpSalesOrder, "lkpSalesOrder"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueContract;
    public  Sage.Platform.Controls.ILookupControl lueContract
    {
        get { return FindControl(ref _lueContract, "lueContract"); }
    }
    private Sage.Platform.Controls.ILookupControl _lkpTicket;
    public  Sage.Platform.Controls.ILookupControl lkpTicket
    {
        get { return FindControl(ref _lkpTicket, "lkpTicket"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtPONo;
    public  Sage.Platform.Controls.ITextBoxControl txtPONo
    {
        get { return FindControl(ref _txtPONo, "txtPONo"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtConclusion;
    public  Sage.Platform.Controls.ITextBoxControl txtConclusion
    {
        get { return FindControl(ref _txtConclusion, "txtConclusion"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCalibration;
    public  Sage.Platform.Controls.ITextBoxControl txtCalibration
    {
        get { return FindControl(ref _txtCalibration, "txtCalibration"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtFooter;
    public  Sage.Platform.Controls.ITextBoxControl txtFooter
    {
        get { return FindControl(ref _txtFooter, "txtFooter"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtReferenceNo;
    public  Sage.Platform.Controls.ITextBoxControl txtReferenceNo
    {
        get { return FindControl(ref _txtReferenceNo, "txtReferenceNo"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueVender;
    public  Sage.Platform.Controls.ILookupControl lueVender
    {
        get { return FindControl(ref _lueVender, "lueVender"); }
    }
    private Sage.Platform.Controls.IPickListControl _plklocation;
    public  Sage.Platform.Controls.IPickListControl plklocation
    {
        get { return FindControl(ref _plklocation, "plklocation"); }
    }
    private Sage.Platform.Controls.IPickListControl _plkPlaceOfIssue;
    public  Sage.Platform.Controls.IPickListControl plkPlaceOfIssue
    {
        get { return FindControl(ref _plkPlaceOfIssue, "plkPlaceOfIssue"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtPODate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtPODate
    {
        get { return FindControl(ref _dtPODate, "dtPODate"); }
    }
    private Sage.Platform.Controls.IPickListControl _plkOrderStatus;
    public  Sage.Platform.Controls.IPickListControl plkOrderStatus
    {
        get { return FindControl(ref _plkOrderStatus, "plkOrderStatus"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtDisclaimer;
    public  Sage.Platform.Controls.ITextBoxControl txtDisclaimer
    {
        get { return FindControl(ref _txtDisclaimer, "txtDisclaimer"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _grnVisitReport;
    public  Sage.Platform.Controls.IGroupNavigatorControl grnVisitReport
    {
        get { return FindControl(ref _grnVisitReport, "grnVisitReport"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdSave;
    public  Sage.Platform.Controls.IButtonControl cmdSave
    {
        get { return FindControl(ref _cmdSave, "cmdSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdDelete;
    public  Sage.Platform.Controls.IButtonControl cmdDelete
    {
        get { return FindControl(ref _cmdDelete, "cmdDelete"); }
    }

}

</script>

<script type="text/javascript">
</script>
