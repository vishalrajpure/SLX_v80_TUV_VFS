<%@ Control Language="C#" ClassName="ReturnDefects" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
   <%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="SalesLogix" %>
  <%--Grid style overrides for quickform configurations and textbox compatibility with IE7.--%>
<style 
type="text/css">     
    .alignleft { text-align : left; }
    .alignright { text-align : right; }
    .aligncenter { text-align : center; }
	.dijitTextBox { width: auto; }
	.ISOSpace {width: 75% !important; }
</style>

	   

<SalesLogix:ScriptResourceProvider ID="ReturnDefectsgrdDefects_Strings" runat="server">
    <Keys>
          <SalesLogix:ResourceKeyName Key="grdDefects.7b3b5848-c377-4a0a-ab27-fbcbcecea85c.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.9b4b6c8a-7bb9-4b77-803e-ca724b96be0a.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.f2a0b6be-72db-48bf-9331-399e572482c2.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.c862d469-4721-4244-a2ab-e088f1a0e204.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.d92e00d6-14ea-4c60-bc34-66a6d9192a06.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.21c64ce5-3901-4f15-8ec1-3ccebc09fd85.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.6fd8d83c-c200-4ce5-bfa3-7e4065331381.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.cc5f9ca6-373e-4f12-8ab3-d2c3bad1f058.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.38adfbfc-16ab-4ecb-8e3c-0459811e8626.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.09d8089b-4409-4e81-baa0-2a50de8e789f.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.efc24cbb-fb04-4bd2-868e-87d5d87dd709.ColumnHeading" />
       <SalesLogix:ResourceKeyName Key="grdDefects.5a690fdf-fa16-4af3-938c-e4ecfcc4d4a1.ColumnHeading" />
           <SalesLogix:ResourceKeyName Key="grdDefects.Delete.ToolTip" />
     </Keys>
</SalesLogix:ScriptResourceProvider>

												 





























<div style="display:none;">
  <asp:TextBox runat="server" ID="ReturnDefectsgrdDefects_DataCarrier" class="ReturnDefectsgrdDefects_DataCarrier" ></asp:TextBox>
</div>
  <div id="ReturnDefectsgrdDefects_Container" style="width:100%;height:100%;" class="">
    <div id="ReturnDefectsgrdDefects_Grid" style="width:100%;height:100%;"
     data-dojo-type="dijit.layout.BorderContainer"
></div>
</div>


 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ReturnDefects_RTools" ToolbarLocation="right">
   <SalesLogix:LookupControl runat="server" ID="lueAssociateDefect" ButtonToolTip="<%$ resources: lueAssociateDefect.ButtonToolTip %>" LookupEntityName="Defect" LookupEntityTypeName="Sage.Entity.Interfaces.IDefect, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="ButtonOnly" AutoPostBack="true" LookupImageURL="~/ImageResource.axd?scope=global&type=Global_Images&key=associate_16x16"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.DefectNumber.PropertyHeader %>" PropertyName="DefectNumber" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.Subject.PropertyHeader %>" PropertyName="Subject" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.DefectProblem.Notes.PropertyHeader %>" PropertyName="DefectProblem.Notes" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.DefectSolution.Notes.PropertyHeader %>" PropertyName="DefectSolution.Notes" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.AssignedTo.OwnerDescription.PropertyHeader %>" PropertyName="AssignedTo.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAssociateDefect.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
 

  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ReturnDefects&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkReturnDefectsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ReturnDefects" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IReturn); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dsDefectReturns;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dsDefectReturns
{ 
  get 
  {
    if (_dsDefectReturns == null)
    {
             _dsDefectReturns = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Entity.Interfaces.IDefectReturn), 
	    EntityType              ,"DefectReturns", System.Reflection.MemberTypes.Property);
                   _dsDefectReturns.UseSmartQuery = true;
      	   	}
 	return _dsDefectReturns;
  }
}

void dsDefectReturns_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dsDefectReturns.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dsDefectReturns);
   }
}

 



 

protected override void OnAddEntityBindings() {
    
     BindingSource.OnCurrentEntitySet += new EventHandler(dsDefectReturns_OnCurrentEntitySet);
    
    }
       
protected void lueAssociateDefect_ChangeAction(object sender, EventArgs e) {

			if (lueAssociateDefect.LookupResultValue != null)
		{
			Sage.Entity.Interfaces.IReturn parentEntity = BindingSource.Current as Sage.Entity.Interfaces.IReturn;
			Sage.Entity.Interfaces.IDefect relatedEntity = lueAssociateDefect.LookupResultValue as Sage.Entity.Interfaces.IDefect;
			Sage.Platform.WebPortal.EntityPage page = (Sage.Platform.WebPortal.EntityPage)Page;
			// check for duplicates
			bool found = false;
			if ((parentEntity != null) && (relatedEntity != null))
			{
						foreach (Sage.Entity.Interfaces.IDefectReturn i in parentEntity.DefectReturns)
				{				
					if (i.Defect.Equals(relatedEntity))
					{
						found = true;
						if (DialogService != null)
						{
							DialogService.ShowMessage(base.GetLocalResourceObject("24abe30f-3211-4c78-8e34-29647761c67c.DuplicateAssociationMessage").ToString(), 90, 360);
							return;
						}
					}
				}
						Sage.Entity.Interfaces.IDefectReturn relationshipEntity = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.IDefectReturn>();
			if (!found)
			{
				relationshipEntity.Return = parentEntity;
				relationshipEntity.Defect = relatedEntity;
				parentEntity.DefectReturns.Add(relationshipEntity);
				dsDefectReturns.SelectedMember = relationshipEntity;
				if (page.ModeId.ToUpper() != "INSERT")
				{
					parentEntity.Save();
				}
			}
					}
		}
				

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueAssociateDefect.LookupResultValueChanged += new EventHandler(lueAssociateDefect_ChangeAction);


}

protected override void OnFormBound()
{
 var entity = BindingSource.Current as Sage.Entity.Interfaces.IReturn; 
 if (this.PageWorkItem.State["ModeId"].ToString() == "Insert") 
 { 
 var feed = new Sage.Integration.Entity.Feeds.DefectReturnFeed(); 
 if (entity != null) 
      if (entity.DefectReturns.Count > 0) 
      { 
			var include = Sage.Common.Syndication.InclusionNode.CreateInclusionTree("DefectReturns", null, null, null); 
          var transformer = 
              Sage.Platform.Application.ApplicationContext.Current.Services.Get 
                  <Sage.Platform.SData.IAtomEntryToEntityTransformationService>(); 
          foreach (Sage.Entity.Interfaces.IDefectReturn item in entity.DefectReturns) 
          { 
              var transItem = transformer.ConvertEntity(item, include) as Sage.Integration.Entity.Feeds.DefectReturnEntry; 
              if (transItem != null) 
              { 
                  feed.Entries.Add(transItem); 
              } 
          } 
          string text; 
          using (var stream = new System.IO.MemoryStream()) 
          { 
          	          	new Sage.Common.Syndication.JsonSerializer().SaveToStream((Sage.Common.Syndication.IFeed)feed, stream, null, include); 
          	text = Encoding.UTF8.GetString(stream.ToArray()); 
          } 
          ReturnDefectsgrdDefects_DataCarrier.Text = text; 
          entity.DefectReturns.Clear(); 
      } 
 } 
ClientBindingMgr.RegisterBoundControl(lueAssociateDefect);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dsDefectReturns.SourceObject == null) { dsDefectReturns.SourceObject = BindingSource.Current; }
if (dsDefectReturns.SourceObject == null) { RegisterBindingsWithClient(dsDefectReturns); }
dsDefectReturns.Bind();


                                var script = new StringBuilder();
                                script.AppendLine("require(['" + Page.ResolveUrl("~/SmartParts/Return/ReturnDefects.js") + "'], function () {");
                                if (Page.IsPostBack)
                                {
                                    script.Append(" Sage.UI.Forms.ReturnDefects.init({workspace: '" + getMyWorkspace() + "'} );");
                                }
                                else 
                                {
                                    script.AppendLine("require(['dojo/ready'], function(ready) {");
                                    script.Append("ready(function () {Sage.UI.Forms.ReturnDefects.init({workspace: '" + getMyWorkspace() + "'} ); });");
                                    script.AppendLine("});");//end ready require
                                }

                                script.AppendLine("});");// end require
                                ScriptManager.RegisterStartupScript(this, GetType(), "initialize_ReturnDefects", script.ToString(), true);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ReturnDefectsAdapter(this)); }
}

public class ReturnDefectsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IReturnDefects
{
    public ReturnDefectsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IDataSourceControl _dsDefectReturns;
    public  Sage.Platform.Controls.IDataSourceControl dsDefectReturns
    {
        get { return FindControl(ref _dsDefectReturns, "dsDefectReturns"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueAssociateDefect;
    public  Sage.Platform.Controls.ILookupControl lueAssociateDefect
    {
        get { return FindControl(ref _lueAssociateDefect, "lueAssociateDefect"); }
    }

}

</script>

<script type="text/javascript">
</script>
