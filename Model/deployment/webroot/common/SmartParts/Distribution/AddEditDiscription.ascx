<%@ Control Language="C#" ClassName="AddEditDiscription" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="plkDiscriptionType_lbl" AssociatedControlID="plkDiscriptionType" runat="server" Text="<%$ resources: plkDiscriptionType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="plkDiscriptionType" MustExistInList="false" Required="true" MaxLength="32"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="plkTypeOfCopy_lbl" AssociatedControlID="plkTypeOfCopy" runat="server" Text="<%$ resources: plkTypeOfCopy.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="plkTypeOfCopy" MustExistInList="false" Required="true" MaxLength="32"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="txtQuantity_lbl" AssociatedControlID="txtQuantity" runat="server" Text="<%$ resources: txtQuantity.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="txtQuantity"
Strict="False" 
 />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditDiscription_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnSave"
 ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditDiscription&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditDiscriptionHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditDiscription" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IDistribution); }
}

 

protected override void OnAddEntityBindings() {
                 // plkDiscriptionType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding plkDiscriptionTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("DistributionType", plkDiscriptionType, "PickListValue");
        BindingSource.Bindings.Add(plkDiscriptionTypePickListValueBinding);
                    // plkTypeOfCopy.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding plkTypeOfCopyPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TypeOfCopy", plkTypeOfCopy, "PickListValue");
        BindingSource.Bindings.Add(plkTypeOfCopyPickListValueBinding);
                    // txtQuantity.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtQuantityTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Quantity", txtQuantity, "Text");
        BindingSource.Bindings.Add(txtQuantityTextBinding);
    
   
    }
                     
protected void btnSave_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IRNReport IRNR= this.GetParentEntity() as Sage.Entity.Interfaces.IRNReport;
Sage.Entity.Interfaces.IDistribution DR = this.BindingSource.Current as Sage.Entity.Interfaces.IDistribution;

if (EntityContext.EntityID.ToString().ToUpper().Equals("INSERT") == true)
{
 if (IRNR.Distributions.Count > 0)
 {
foreach (Sage.Entity.Interfaces.IDistribution obj in IRNR.Distributions)
{
    if (obj.DistributionType == DR.DistributionType)
    {
        throw new ApplicationException("Distribution Type already Present in list"); 
    } 
}}}
DR.Rnreportid=IRNR.Id.ToString();
DR.Save();
System.Web.HttpContext.Current.Response.Redirect(string.Format("RNReport.aspx?entityId={1}", "RNReport", IRNR.Id.ToString()));    
    
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnSave.Click += new ImageClickEventHandler(DialogService.CloseEventHappened);
btnSave.Click += new ImageClickEventHandler(Refresh);


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditDiscriptionAdapter(this)); }
}

public class AddEditDiscriptionAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditDiscription
{
    public AddEditDiscriptionAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.IPickListControl _plkDiscriptionType;
    public  Sage.Platform.Controls.IPickListControl plkDiscriptionType
    {
        get { return FindControl(ref _plkDiscriptionType, "plkDiscriptionType"); }
    }
    private Sage.Platform.Controls.IPickListControl _plkTypeOfCopy;
    public  Sage.Platform.Controls.IPickListControl plkTypeOfCopy
    {
        get { return FindControl(ref _plkTypeOfCopy, "plkTypeOfCopy"); }
    }
    private Sage.Platform.Controls.INumericControl _txtQuantity;
    public  Sage.Platform.Controls.INumericControl txtQuantity
    {
        get { return FindControl(ref _txtQuantity, "txtQuantity"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }

}

</script>

<script type="text/javascript">
</script>
