<%@ Control Language="C#" ClassName="ComplaintDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAccount_lbl" AssociatedControlID="lueAccount" runat="server" Text="<%$ resources: lueAccount.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueAccount" LookupEntityName="Account" LookupEntityTypeName="Sage.Entity.Interfaces.IAccount, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" EnableHyperLinking="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Owner.OwnerDescription.PropertyHeader %>" PropertyName="Owner.OwnerDescription" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.SubType.PropertyHeader %>" PropertyName="SubType" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.Status.PropertyHeader %>" PropertyName="Status" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.AccountManager.UserInfo.UserName.PropertyHeader %>" PropertyName="AccountManager.UserInfo.UserName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAccount.LookupProperties.MainPhone.PropertyHeader %>" PropertyName="MainPhone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklStatus_lbl" AssociatedControlID="pklStatus" runat="server" Text="<%$ resources: pklStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklStatus" PickListName="status" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueContact_lbl" AssociatedControlID="lueContact" runat="server" Text="<%$ resources: lueContact.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueContact" LookupEntityName="Contact" LookupEntityTypeName="Sage.Entity.Interfaces.IContact, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.AccountName.PropertyHeader %>" PropertyName="AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Address.City.PropertyHeader %>" PropertyName="Address.City" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Address.State.PropertyHeader %>" PropertyName="Address.State" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.Email.PropertyHeader %>" PropertyName="Email" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.LastName.PropertyHeader %>" PropertyName="LastName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueContact.LookupProperties.WorkPhone.PropertyHeader %>" PropertyName="WorkPhone" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpComplaintDate_lbl" AssociatedControlID="dtpComplaintDate" runat="server" Text="<%$ resources: dtpComplaintDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpComplaintDate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luejob_lbl" AssociatedControlID="luejob" runat="server" Text="<%$ resources: luejob.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="luejob" LookupEntityName="SalesOrder" LookupEntityTypeName="Sage.Entity.Interfaces.ISalesOrder, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="Account.Id" EnableHyperLinking="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luejob.LookupProperties.Account.AccountName.PropertyHeader %>" PropertyName="Account.AccountName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luejob.LookupProperties.Ordercode.PropertyHeader %>" PropertyName="Ordercode" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luejob.LookupProperties.BranchId.PropertyHeader %>" PropertyName="BranchId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luejob.LookupProperties.SAPJobNo.PropertyHeader %>" PropertyName="SAPJobNo" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="ownAssignto_lbl" AssociatedControlID="ownAssignto" runat="server" Text="<%$ resources: ownAssignto.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
<SalesLogix:OwnerControl runat="server" ID="ownAssignto" Types="$qfcontrol.Types"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="luesubJob_lbl" AssociatedControlID="luesubJob" runat="server" Text="<%$ resources: luesubJob.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="luesubJob" LookupEntityName="Contract" LookupEntityTypeName="Sage.Entity.Interfaces.IContract, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" SeedProperty="SalesOrder.Id" EnableHyperLinking="true" AutoPostBack="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luesubJob.LookupProperties.SalesOrderId.PropertyHeader %>" PropertyName="SalesOrderId" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luesubJob.LookupProperties.ReferenceNumber.PropertyHeader %>" PropertyName="ReferenceNumber" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luesubJob.LookupProperties.EndingDate.PropertyHeader %>" PropertyName="EndingDate" PropertyType="System.DateTime" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luesubJob.LookupProperties.ServiceCode.PropertyHeader %>" PropertyName="ServiceCode" PropertyType="SalesLogix.PickList" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: luesubJob.LookupProperties.StartDate.PropertyHeader %>" PropertyName="StartDate" PropertyType="System.DateTime" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtComplaintNumber_lbl" AssociatedControlID="txtComplaintNumber" runat="server" Text="<%$ resources: txtComplaintNumber.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtComplaintNumber" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueOriginatingBranch_lbl" AssociatedControlID="lueOriginatingBranch" runat="server" Text="<%$ resources: lueOriginatingBranch.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lueOriginatingBranch" ReadOnly="true" EnableLookup="false" LookupEntityName="Branch" LookupEntityTypeName="Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" LookupBindingMode="String" DropDownDisplayProperty="BranchName" Required="true"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDescription_lbl" AssociatedControlID="txtDescription" runat="server" Text="<%$ resources: txtDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDescription" Required="true"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueExecutingBranch_lbl" AssociatedControlID="lueExecutingBranch" runat="server" Text="<%$ resources: lueExecutingBranch.Caption %>" ></asp:Label>
 </div>   
  <div    >
<SalesLogix:LookupControl runat="server" ID="lueExecutingBranch" ReadOnly="true" EnableLookup="false" LookupEntityName="Branch" LookupEntityTypeName="Sage.Entity.Interfaces.IBranch, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="DropDownList" LookupBindingMode="String" DropDownDisplayProperty="BranchName" Required="true"  >
<LookupProperties>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpResponseDate_lbl" AssociatedControlID="dtpResponseDate" runat="server" Text="<%$ resources: dtpResponseDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpResponseDate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklCategory_lbl" AssociatedControlID="pklCategory" runat="server" Text="<%$ resources: pklCategory.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklCategory" PickListName="Category" MaxLength="64"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtResponse_lbl" AssociatedControlID="txtResponse" runat="server" Text="<%$ resources: txtResponse.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtResponse"  dojoType="Sage.UI.Controls.TextBox" MaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklSubCategory_lbl" AssociatedControlID="pklSubCategory" runat="server" Text="<%$ resources: pklSubCategory.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklSubCategory" PickListName="SubCategoty" MaxLength="64"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dtpActionDate_lbl" AssociatedControlID="dtpActionDate" runat="server" Text="<%$ resources: dtpActionDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dtpActionDate" DisplayTime="false" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCorrectionofNC_lbl" AssociatedControlID="txtCorrectionofNC" runat="server" Text="<%$ resources: txtCorrectionofNC.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCorrectionofNC"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtRootCause_lbl" AssociatedControlID="txtRootCause" runat="server" Text="<%$ resources: txtRootCause.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtRootCause"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtEffectivenessofImplementationofCA_lbl" AssociatedControlID="txtEffectivenessofImplementationofCA" runat="server" Text="<%$ resources: txtEffectivenessofImplementationofCA.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtEffectivenessofImplementationofCA"  Rows="4" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea" MultiLineMaxLength="2147483647"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCAtopreventRecurrence_lbl" AssociatedControlID="txtCAtopreventRecurrence" runat="server" Text="<%$ resources: txtCAtopreventRecurrence.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCAtopreventRecurrence"  dojoType="Sage.UI.Controls.TextBox" MaxLength="2147483647"  />
  </div>

      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueSurveyor_lbl" AssociatedControlID="lueSurveyor" runat="server" Text="<%$ resources: lueSurveyor.Caption %>" Visible="false" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueSurveyor" LookupEntityName="Surveyor" LookupEntityTypeName="Sage.Entity.Interfaces.ISurveyor, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Visible="false"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.Branch.PropertyHeader %>" PropertyName="Branch" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.EmailAddress.PropertyHeader %>" PropertyName="EmailAddress" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.FirstName.PropertyHeader %>" PropertyName="FirstName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.LastName.PropertyHeader %>" PropertyName="LastName" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.MobileNo.PropertyHeader %>" PropertyName="MobileNo" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueSurveyor.LookupProperties.SurveyorType.PropertyHeader %>" PropertyName="SurveyorType" PropertyType="SalesLogix.PickList" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="ComplaintDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="QFButton2"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16"  />
 
   <SalesLogix:GroupNavigator runat="server" ID="QFSLXGroupNavigator" ></SalesLogix:GroupNavigator>
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=ComplaintDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkComplaintDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="ComplaintDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IComplaint); }
}

 

protected override void OnAddEntityBindings() {
                 // lueAccount.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAccountLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account", lueAccount, "LookupResultValue");
        BindingSource.Bindings.Add(lueAccountLookupResultValueBinding);
                    // pklStatus.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklStatusPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", pklStatus, "PickListValue");
        BindingSource.Bindings.Add(pklStatusPickListValueBinding);
                    // lueContact.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueContactLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contact", lueContact, "LookupResultValue");
        BindingSource.Bindings.Add(lueContactLookupResultValueBinding);
                 // lueContact.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueContactSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", lueContact, "SeedValue");
        lueContactSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(lueContactSeedValueBinding);
                    // dtpComplaintDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpComplaintDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplaintDate", dtpComplaintDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpComplaintDateDateTimeValueBinding);
                    // luejob.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luejobLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrder", luejob, "LookupResultValue");
        BindingSource.Bindings.Add(luejobLookupResultValueBinding);
                 // luejob.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luejobSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Account.Id", luejob, "SeedValue");
        luejobSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(luejobSeedValueBinding);
                    // ownAssignto.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding ownAssigntoLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Assignedto", ownAssignto, "LookupResultValue");
        BindingSource.Bindings.Add(ownAssigntoLookupResultValueBinding);
                    // luesubJob.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luesubJobLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Contract", luesubJob, "LookupResultValue");
        BindingSource.Bindings.Add(luesubJobLookupResultValueBinding);
                 // luesubJob.SeedValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding luesubJobSeedValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SalesOrder.Id", luesubJob, "SeedValue");
        luesubJobSeedValueBinding.IgnoreFLSDisabling = true;
        BindingSource.Bindings.Add(luesubJobSeedValueBinding);
                    // txtComplaintNumber.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtComplaintNumberTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ComplaintNumber", txtComplaintNumber, "Text");
        BindingSource.Bindings.Add(txtComplaintNumberTextBinding);
                    // lueOriginatingBranch.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueOriginatingBranchLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OriginatingBranch", lueOriginatingBranch, "LookupResultValue");
        BindingSource.Bindings.Add(lueOriginatingBranchLookupResultValueBinding);
                    // txtDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", txtDescription, "Text");
        BindingSource.Bindings.Add(txtDescriptionTextBinding);
                    // lueExecutingBranch.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueExecutingBranchLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ExecutingBranch", lueExecutingBranch, "LookupResultValue");
        BindingSource.Bindings.Add(lueExecutingBranchLookupResultValueBinding);
                    // dtpResponseDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpResponseDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ResponseDate", dtpResponseDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpResponseDateDateTimeValueBinding);
                    // pklCategory.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklCategoryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Category", pklCategory, "PickListValue");
        BindingSource.Bindings.Add(pklCategoryPickListValueBinding);
                    // txtResponse.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtResponseTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Response", txtResponse, "Text");
        BindingSource.Bindings.Add(txtResponseTextBinding);
                    // pklSubCategory.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklSubCategoryPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SubCategory", pklSubCategory, "PickListValue");
        BindingSource.Bindings.Add(pklSubCategoryPickListValueBinding);
                    // dtpActionDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dtpActionDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ActionDate", dtpActionDate, "DateTimeValue");
        BindingSource.Bindings.Add(dtpActionDateDateTimeValueBinding);
                    // txtCorrectionofNC.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCorrectionofNCTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CorrectionofNC", txtCorrectionofNC, "Text");
        BindingSource.Bindings.Add(txtCorrectionofNCTextBinding);
                    // txtRootCause.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtRootCauseTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RootCause", txtRootCause, "Text");
        BindingSource.Bindings.Add(txtRootCauseTextBinding);
                    // txtEffectivenessofImplementationofCA.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtEffectivenessofImplementationofCATextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EffectivenessofImplementationofCA", txtEffectivenessofImplementationofCA, "Text");
        BindingSource.Bindings.Add(txtEffectivenessofImplementationofCATextBinding);
                    // txtCAtopreventRecurrence.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCAtopreventRecurrenceTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CAtopreventRecurrence", txtCAtopreventRecurrence, "Text");
        BindingSource.Bindings.Add(txtCAtopreventRecurrenceTextBinding);
                    // lueSurveyor.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueSurveyorLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Surveyor", lueSurveyor, "LookupResultValue");
        BindingSource.Bindings.Add(lueSurveyorLookupResultValueBinding);
    
   
            }
                                                                                                                                                   
protected void luesubJob_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IComplaint complaint = this.BindingSource.Current as Sage.Entity.Interfaces.IComplaint;

complaint.Account = complaint.Contract.Account;

if (complaint.Contract.Contact != null)
{
    complaint.Contact = complaint.Contract.Contact;
}
else
{
    foreach (Sage.Entity.Interfaces.IContact contact in complaint.Contract.Account.Contacts)
    {
        if (contact.IsPrimary == true)
        {
            complaint.Contact = contact;
        }
    }
}    
Sage.Entity.Interfaces.ISalesOrder objsales = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.ISalesOrder>(complaint.Contract.SalesOrderId);
if (objsales != null)
{
    complaint.SalesOrder = objsales;
 if(complaint.Contract.BranchId != null)
 {
  Sage.Entity.Interfaces.IBranch objbranch = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IBranch>(Convert.ToString(complaint.Contract.BranchId)); 
  if (objbranch != null)
   complaint.OriginatingBranch = objbranch.Id.ToString(); 
 }
 if(complaint.Contract.ExecutingBranchId!=null)
 {
  Sage.Entity.Interfaces.IBranch objbranch1 = Sage.Platform.EntityFactory.GetById<Sage.Entity.Interfaces.IBranch>(Convert.ToString(complaint.Contract.ExecutingBranchId)); 
  if (objbranch1 != null)
   complaint.ExecutingBranch = objbranch1.Id.ToString();
 }
    
    
    
}

}
protected void QFButton_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IComplaint _entity = BindingSource.Current as Sage.Entity.Interfaces.IComplaint;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}
protected void QFButton2_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 luesubJob.LookupResultValueChanged += new EventHandler(luesubJob_ChangeAction);
QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);
QFButton2.Click += new ImageClickEventHandler(QFButton2_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IComplaint cmp = this.BindingSource.Current as Sage.Entity.Interfaces.IComplaint;
    Sage.Platform.WebPortal.EntityPage page=(Sage.Platform.WebPortal.EntityPage)Page;
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
	
    Sage.Platform.WebPortal.Workspaces.Tab.TabWorkspace tabWorkspace = PageWorkItem.Workspaces["TabControl"]  as Sage.Platform.WebPortal.Workspaces.Tab.TabWorkspace;
    if(cmp.EntityType == "Appeal")
    {
     dtpComplaintDate_lbl.Text = "Appeal Date:";
     txtComplaintNumber_lbl.Text = "Appeal Number:";
     page.TitleBar.Text = "Appeal Details";
        foreach (Sage.Platform.WebPortal.Workspaces.Tab.TabInfo tab in tabWorkspace.Tabs)
        {
            tab.Name.Replace("Complaint", "Appeal");
        }
        tinfo.Description = "Appeal Details";
        tinfo.Title = "Appeal Details";
     //this.Name = "Appeal Details";
    }
    else
    {
     dtpComplaintDate_lbl.Text = "Complaint Date:";
     txtComplaintNumber_lbl.Text = "Complaint Number:";
     page.TitleBar.Text = "Complaint Details";
        foreach (Sage.Platform.WebPortal.Workspaces.Tab.TabInfo tab in tabWorkspace.Tabs)
        {
            tab.Name.Replace("Appeal", "Complaint");
        }
        tinfo.Description = "Complaint Details";
        tinfo.Title = "Complaint Details";
 
    }

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(QFButton);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new ComplaintDetailsAdapter(this)); }
}

public class ComplaintDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IComplaintDetails
{
    public ComplaintDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILookupControl _lueAccount;
    public  Sage.Platform.Controls.ILookupControl lueAccount
    {
        get { return FindControl(ref _lueAccount, "lueAccount"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueContact;
    public  Sage.Platform.Controls.ILookupControl lueContact
    {
        get { return FindControl(ref _lueContact, "lueContact"); }
    }
    private Sage.Platform.Controls.ILookupControl _luejob;
    public  Sage.Platform.Controls.ILookupControl luejob
    {
        get { return FindControl(ref _luejob, "luejob"); }
    }
    private Sage.Platform.Controls.ILookupControl _luesubJob;
    public  Sage.Platform.Controls.ILookupControl luesubJob
    {
        get { return FindControl(ref _luesubJob, "luesubJob"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueOriginatingBranch;
    public  Sage.Platform.Controls.ILookupControl lueOriginatingBranch
    {
        get { return FindControl(ref _lueOriginatingBranch, "lueOriginatingBranch"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueExecutingBranch;
    public  Sage.Platform.Controls.ILookupControl lueExecutingBranch
    {
        get { return FindControl(ref _lueExecutingBranch, "lueExecutingBranch"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklCategory;
    public  Sage.Platform.Controls.IPickListControl pklCategory
    {
        get { return FindControl(ref _pklCategory, "pklCategory"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklSubCategory;
    public  Sage.Platform.Controls.IPickListControl pklSubCategory
    {
        get { return FindControl(ref _pklSubCategory, "pklSubCategory"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCorrectionofNC;
    public  Sage.Platform.Controls.ITextBoxControl txtCorrectionofNC
    {
        get { return FindControl(ref _txtCorrectionofNC, "txtCorrectionofNC"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtEffectivenessofImplementationofCA;
    public  Sage.Platform.Controls.ITextBoxControl txtEffectivenessofImplementationofCA
    {
        get { return FindControl(ref _txtEffectivenessofImplementationofCA, "txtEffectivenessofImplementationofCA"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklStatus;
    public  Sage.Platform.Controls.IPickListControl pklStatus
    {
        get { return FindControl(ref _pklStatus, "pklStatus"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpComplaintDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpComplaintDate
    {
        get { return FindControl(ref _dtpComplaintDate, "dtpComplaintDate"); }
    }
    private Sage.Platform.Controls.IOwnerControl _ownAssignto;
    public  Sage.Platform.Controls.IOwnerControl ownAssignto
    {
        get { return FindControl(ref _ownAssignto, "ownAssignto"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtComplaintNumber;
    public  Sage.Platform.Controls.ITextBoxControl txtComplaintNumber
    {
        get { return FindControl(ref _txtComplaintNumber, "txtComplaintNumber"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtDescription;
    public  Sage.Platform.Controls.ITextBoxControl txtDescription
    {
        get { return FindControl(ref _txtDescription, "txtDescription"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpResponseDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpResponseDate
    {
        get { return FindControl(ref _dtpResponseDate, "dtpResponseDate"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtResponse;
    public  Sage.Platform.Controls.ITextBoxControl txtResponse
    {
        get { return FindControl(ref _txtResponse, "txtResponse"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dtpActionDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dtpActionDate
    {
        get { return FindControl(ref _dtpActionDate, "dtpActionDate"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtRootCause;
    public  Sage.Platform.Controls.ITextBoxControl txtRootCause
    {
        get { return FindControl(ref _txtRootCause, "txtRootCause"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCAtopreventRecurrence;
    public  Sage.Platform.Controls.ITextBoxControl txtCAtopreventRecurrence
    {
        get { return FindControl(ref _txtCAtopreventRecurrence, "txtCAtopreventRecurrence"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueSurveyor;
    public  Sage.Platform.Controls.ILookupControl lueSurveyor
    {
        get { return FindControl(ref _lueSurveyor, "lueSurveyor"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton2;
    public  Sage.Platform.Controls.IButtonControl QFButton2
    {
        get { return FindControl(ref _QFButton2, "QFButton2"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _QFSLXGroupNavigator;
    public  Sage.Platform.Controls.IGroupNavigatorControl QFSLXGroupNavigator
    {
        get { return FindControl(ref _QFSLXGroupNavigator, "QFSLXGroupNavigator"); }
    }

}

</script>

<script type="text/javascript">
</script>
