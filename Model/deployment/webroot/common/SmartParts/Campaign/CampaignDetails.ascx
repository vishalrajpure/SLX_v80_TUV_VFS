<%@ Control Language="C#" ClassName="CampaignDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable formtable_fixed">
         <col width="33%" />
            <col width="33%" />
            <col width="150px" />
            <col width="150px" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCampaignName_lbl" AssociatedControlID="txtCampaignName" runat="server" Text="<%$ resources: txtCampaignName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCampaignName"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="cboStatus_lbl" AssociatedControlID="cboStatus" runat="server" Text="<%$ resources: cboStatus.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="cboStatus"  SelectionMode="Single" Rows="1" data-dojo-type="dijit.form.Select"  CssClass="select-control "  >
<asp:ListItem  Text="<%$ resources: cboStatus_item0.Text %>"
Value="Setup" />
<asp:ListItem  Text="<%$ resources: cboStatus_item1.Text %>"
Value="Active" />
<asp:ListItem  Text="<%$ resources: cboStatus_item2.Text %>"
Value="Inactive" />
</asp:ListBox>
  </div>

      </td>
                <td  >
 <asp:Button runat="server" ID="cmdLaunch"
 Text="<%$ resources: cmdLaunch.Caption %>" CssClass="slxbutton"  />
 
      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDescription_lbl" AssociatedControlID="txtDescription" runat="server" Text="<%$ resources: txtDescription.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDescription"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCode_lbl" AssociatedControlID="txtCode" runat="server" Text="<%$ resources: txtCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCode"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblDateLaunched" Text="<%$ resources: lblDateLaunched.Text %>"  />
</div>
      </td>
                <td  >
  <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteLaunchedDate" DisplayMode="AsText" />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtObjective_lbl" AssociatedControlID="txtObjective" runat="server" Text="<%$ resources: txtObjective.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtObjective"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteStartDate_lbl" AssociatedControlID="dteStartDate" runat="server" Text="<%$ resources: dteStartDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteStartDate" ButtonToolTip="<%$ resources: dteStartDate.ButtonToolTip %>" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblTargets" Text="<%$ resources: lblTargets.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblNumOfTargets"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtCallToAction_lbl" AssociatedControlID="txtCallToAction" runat="server" Text="<%$ resources: txtCallToAction.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtCallToAction"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteEndDate_lbl" AssociatedControlID="dteEndDate" runat="server" Text="<%$ resources: dteEndDate.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteEndDate" ButtonToolTip="<%$ resources: dteEndDate.ButtonToolTip %>" DisplayTime="false" />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="QFLabel" Text="<%$ resources: QFLabel.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblNumOfStages"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="QFSLXLookup_lbl" AssociatedControlID="QFSLXLookup" runat="server" Text="<%$ resources: QFSLXLookup.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="QFSLXLookup" LookupEntityName="LeadSource" LookupEntityTypeName="Sage.Entity.Interfaces.ILeadSource, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupBindingMode="String" ReturnPrimaryKey="false" AppendStringValues="true" AllowClearingResult="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: QFSLXLookup.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: QFSLXLookup.LookupProperties.Type.PropertyHeader %>" PropertyName="Type" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lveManager_lbl" AssociatedControlID="lveManager" runat="server" Text="<%$ resources: lveManager.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
    <SalesLogix:SlxUserControl runat="server" ID="lveManager" ButtonToolTip="<%$ resources: lveManager.ButtonToolTip %>"  />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="QFLabel2" Text="<%$ resources: QFLabel2.Text %>"  />
</div>
      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblNumOfTasks"  />
</div>
      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lveOwner_lbl" AssociatedControlID="lveOwner" runat="server" Text="<%$ resources: lveOwner.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol"  > 
<SalesLogix:OwnerControl runat="server" ID="lveOwner" ButtonToolTip="<%$ resources: lveOwner.ButtonToolTip %>" Types="$qfcontrol.Types"  />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="QFLabel3" Text="<%$ resources: QFLabel3.Text %>"  />
</div>
      </td>
                <td  >
<div  class="textcontrol currency"  >
    <SalesLogix:Currency
    runat="server"
    ID="curEstBudget" 
    ExchangeRateType="BaseRate"
     Required="false"
 DecimalDigits="-1"
    DisplayMode="AsText"
 />
</div>

      </td>
      </tr>
<tr>
            <td  >
 <asp:ImageButton runat="server" ID="cmdUpdateTargetsIcon"
Visible="false" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Recurring_16x16"  />
 
      </td>
                <td></td>
                <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkMyCurrency"  Text="<%$ resources: chkMyCurrency.Caption %>"  CssClass=""
LabelPlacement="left" AutoPostBack="true"  />
</div>
      </td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="CampaignDetails_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="grnCampaignDetails" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="cmdSave"
 AlternateText="<%$ resources: cmdSave.Caption %>"  ToolTip="<%$ resources: cmdSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="cmdCopy"
 AlternateText="<%$ resources: cmdCopy.Caption %>"  ToolTip="<%$ resources: cmdCopy.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Copy_16x16"  />
 
    <asp:ImageButton runat="server" ID="cmdDelete"
 AlternateText="<%$ resources: cmdDelete.Caption %>"  ToolTip="<%$ resources: cmdDelete.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Delete_16x16" 
 />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=CampaignDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkCampaignDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="CampaignDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ICampaign); }
}

 

protected override void OnAddEntityBindings() {
                 // txtCampaignName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCampaignNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CampaignName", txtCampaignName, "Text");
        BindingSource.Bindings.Add(txtCampaignNameTextBinding);
                    // cboStatus.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding cboStatusTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Status", cboStatus, "Text");
        BindingSource.Bindings.Add(cboStatusTextBinding);
                       // txtDescription.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDescriptionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Description", txtDescription, "Text");
        BindingSource.Bindings.Add(txtDescriptionTextBinding);
                    // txtCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CampaignCode", txtCode, "Text");
        BindingSource.Bindings.Add(txtCodeTextBinding);
                       // dteLaunchedDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteLaunchedDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ActualLaunchDate", dteLaunchedDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteLaunchedDateDateTimeValueBinding);
                    // txtObjective.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtObjectiveTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Objectives", txtObjective, "Text");
        BindingSource.Bindings.Add(txtObjectiveTextBinding);
                    // dteStartDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteStartDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("StartDate", dteStartDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteStartDateDateTimeValueBinding);
                          // txtCallToAction.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtCallToActionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CallToAction", txtCallToAction, "Text");
        BindingSource.Bindings.Add(txtCallToActionTextBinding);
                    // dteEndDate.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteEndDateDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndDate", dteEndDate, "DateTimeValue");
        BindingSource.Bindings.Add(dteEndDateDateTimeValueBinding);
                          // QFSLXLookup.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFSLXLookupLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CampaignLeadSources", QFSLXLookup, "LookupResultValue");
        BindingSource.Bindings.Add(QFSLXLookupLookupResultValueBinding);
                    // lveManager.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lveManagerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccountManager", lveManager, "LookupResultValue");
        BindingSource.Bindings.Add(lveManagerLookupResultValueBinding);
                          // lveOwner.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lveOwnerLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Owner", lveOwner, "LookupResultValue");
        BindingSource.Bindings.Add(lveOwnerLookupResultValueBinding);
                       // curEstBudget.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding curEstBudgetTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ExpensesBudget", curEstBudget, "Text");
        BindingSource.Bindings.Add(curEstBudgetTextBinding);
          
   
             
      
      
      
                 
      
      
      
    }
                                                                                                                                                                        
protected void cmdLaunch_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ICampaign>("Campaign.LaunchCampaign", objarray);

  
}
protected void chkMyCurrency_ChangeAction(object sender, EventArgs e) {
Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
if (refresher != null) {
  refresher.RefreshAll();
}
else {  
  Response.Redirect(Request.Url.ToString());
}
}
protected void cmdSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ICampaign _entity = BindingSource.Current as Sage.Entity.Interfaces.ICampaign;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}
protected void cmdCopy_ClickAction(object sender, EventArgs e) {
      Response.Redirect(string.Format("InsertCampaign.aspx?modeid=Insert&entityId={0}", (BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
   
}
protected void cmdDelete_ClickAction(object sender, EventArgs e) {
  Sage.Platform.Orm.Interfaces.IPersistentEntity persistentEntity = this.BindingSource.Current as Sage.Platform.Orm.Interfaces.IPersistentEntity;
  if (persistentEntity != null) {
    persistentEntity.Delete();
  }

          cmdDelete_ClickActionBRC(sender, e);
    
  
}
protected void cmdDelete_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect("Campaign.aspx");
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 cmdLaunch.Click += new EventHandler(cmdLaunch_ClickAction);
chkMyCurrency.CheckedChanged += new EventHandler(chkMyCurrency_ChangeAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/CAMPAIGN/EDIT"))
{
cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);
}
}
cmdCopy.Click += new ImageClickEventHandler(cmdCopy_ClickAction);
if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/CAMPAIGN/DELETE"))
{
cmdDelete.Click += new ImageClickEventHandler(cmdDelete_ClickAction);
}
}


}

protected void quickformload0(object sender, EventArgs e) {
//begin custom action
	Sage.Entity.Interfaces.ICampaign campaign = Sage.Platform.EntityFactory.GetById(typeof(Sage.Entity.Interfaces.ICampaign), EntityContext.EntityID) as Sage.Entity.Interfaces.ICampaign;
	if (campaign != null)
	{
		var optionSvc = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);
		bool multiCurrency = optionSvc.MultiCurrency;
		chkMyCurrency.Visible = multiCurrency;

		if (chkMyCurrency.Checked)
		{
			curEstBudget.ExchangeRateType = Sage.Platform.Controls.ExchangeRateTypeEnum.MyRate;
		}

		//get child table counts
		if (campaign.ActualLaunchDate != null)
		{
			cmdLaunch.Text = GetLocalResourceObject("Launched_rsc").ToString();
			cmdLaunch.Enabled = false;
		}
		else
		{
			cmdLaunch.Text = GetLocalResourceObject("Launch_rsc").ToString();
			cmdLaunch.Enabled = true;
		}

		NHibernate.ISession session = Sage.Platform.Framework.SessionFactoryHolder.HolderInstance.CreateSession();
		try
		{
			lblNumOfTargets.Text = session.QueryOver<Sage.Entity.Interfaces.ICampaignTarget>()
				.Where(x => x.Campaign == campaign)
				.RowCount()
				.ToString();

			lblNumOfStages.Text = session.QueryOver<Sage.Entity.Interfaces.ICampaignStage>()
				.Where(x => x.Campaign == campaign)
				.RowCount()
				.ToString();

			string SQL;
			SQL = String.Format("SELECT COUNT(*) FROM CAMPAIGNTASK WHERE CAMPAIGNID = '{0}'", campaign.Id);
			System.Data.OleDb.OleDbConnection conn = new System.Data.OleDb.OleDbConnection(session.Connection.ConnectionString);
			conn.Open();

			System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(SQL, conn);
			System.Data.OleDb.OleDbDataReader dr;
			using (new Sage.Platform.Security.SparseQueryScope())
			{
				dr = cmd.ExecuteReader();
			}
			if (dr != null)
			{
				while (dr.Read())
				{
					lblNumOfTasks.Text = dr[0].ToString();
				}
			}
		}
		finally
		{
			Sage.Platform.Framework.SessionFactoryHolder.HolderInstance.ReleaseSession(session);
		}
	}

//end custom action

}
protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(cmdSave);

cmdDelete.OnClientClick = string.Format("return confirm('{0}');", Sage.Platform.WebPortal.PortalUtil.JavaScriptEncode(GetLocalResourceObject("cmdDelete.ActionConfirmationMessage").ToString()));

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/CAMPAIGN/EDIT"))
{
cmdSave.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/CAMPAIGN/DELETE"))
{
cmdDelete.Visible = false;
}
quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new CampaignDetailsAdapter(this)); }
}

public class CampaignDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ICampaignDetails
{
    public CampaignDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtCampaignName;
    public  Sage.Platform.Controls.ITextBoxControl txtCampaignName
    {
        get { return FindControl(ref _txtCampaignName, "txtCampaignName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtDescription;
    public  Sage.Platform.Controls.ITextBoxControl txtDescription
    {
        get { return FindControl(ref _txtDescription, "txtDescription"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtObjective;
    public  Sage.Platform.Controls.ITextBoxControl txtObjective
    {
        get { return FindControl(ref _txtObjective, "txtObjective"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCallToAction;
    public  Sage.Platform.Controls.ITextBoxControl txtCallToAction
    {
        get { return FindControl(ref _txtCallToAction, "txtCallToAction"); }
    }
    private Sage.Platform.Controls.ILookupControl _QFSLXLookup;
    public  Sage.Platform.Controls.ILookupControl QFSLXLookup
    {
        get { return FindControl(ref _QFSLXLookup, "QFSLXLookup"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdUpdateTargetsIcon;
    public  Sage.Platform.Controls.IButtonControl cmdUpdateTargetsIcon
    {
        get { return FindControl(ref _cmdUpdateTargetsIcon, "cmdUpdateTargetsIcon"); }
    }
    private Sage.Platform.Controls.IListBoxControl _cboStatus;
    public  Sage.Platform.Controls.IListBoxControl cboStatus
    {
        get { return FindControl(ref _cboStatus, "cboStatus"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtCode;
    public  Sage.Platform.Controls.ITextBoxControl txtCode
    {
        get { return FindControl(ref _txtCode, "txtCode"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteStartDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dteStartDate
    {
        get { return FindControl(ref _dteStartDate, "dteStartDate"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteEndDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dteEndDate
    {
        get { return FindControl(ref _dteEndDate, "dteEndDate"); }
    }
    private Sage.Platform.Controls.IUserControl _lveManager;
    public  Sage.Platform.Controls.IUserControl lveManager
    {
        get { return FindControl(ref _lveManager, "lveManager"); }
    }
    private Sage.Platform.Controls.IOwnerControl _lveOwner;
    public  Sage.Platform.Controls.IOwnerControl lveOwner
    {
        get { return FindControl(ref _lveOwner, "lveOwner"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdLaunch;
    public  Sage.Platform.Controls.IButtonControl cmdLaunch
    {
        get { return FindControl(ref _cmdLaunch, "cmdLaunch"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblDateLaunched;
    public  Sage.Platform.Controls.ILabelControl lblDateLaunched
    {
        get { return FindControl(ref _lblDateLaunched, "lblDateLaunched"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblTargets;
    public  Sage.Platform.Controls.ILabelControl lblTargets
    {
        get { return FindControl(ref _lblTargets, "lblTargets"); }
    }
    private Sage.Platform.Controls.ILabelControl _QFLabel;
    public  Sage.Platform.Controls.ILabelControl QFLabel
    {
        get { return FindControl(ref _QFLabel, "QFLabel"); }
    }
    private Sage.Platform.Controls.ILabelControl _QFLabel2;
    public  Sage.Platform.Controls.ILabelControl QFLabel2
    {
        get { return FindControl(ref _QFLabel2, "QFLabel2"); }
    }
    private Sage.Platform.Controls.ILabelControl _QFLabel3;
    public  Sage.Platform.Controls.ILabelControl QFLabel3
    {
        get { return FindControl(ref _QFLabel3, "QFLabel3"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkMyCurrency;
    public  Sage.Platform.Controls.ICheckBoxControl chkMyCurrency
    {
        get { return FindControl(ref _chkMyCurrency, "chkMyCurrency"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteLaunchedDate;
    public  Sage.Platform.Controls.IDateTimePickerControl dteLaunchedDate
    {
        get { return FindControl(ref _dteLaunchedDate, "dteLaunchedDate"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblNumOfTargets;
    public  Sage.Platform.Controls.ILabelControl lblNumOfTargets
    {
        get { return FindControl(ref _lblNumOfTargets, "lblNumOfTargets"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblNumOfStages;
    public  Sage.Platform.Controls.ILabelControl lblNumOfStages
    {
        get { return FindControl(ref _lblNumOfStages, "lblNumOfStages"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblNumOfTasks;
    public  Sage.Platform.Controls.ILabelControl lblNumOfTasks
    {
        get { return FindControl(ref _lblNumOfTasks, "lblNumOfTasks"); }
    }
    private Sage.Platform.Controls.ICurrencyControl _curEstBudget;
    public  Sage.Platform.Controls.ICurrencyControl curEstBudget
    {
        get { return FindControl(ref _curEstBudget, "curEstBudget"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _grnCampaignDetails;
    public  Sage.Platform.Controls.IGroupNavigatorControl grnCampaignDetails
    {
        get { return FindControl(ref _grnCampaignDetails, "grnCampaignDetails"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdSave;
    public  Sage.Platform.Controls.IButtonControl cmdSave
    {
        get { return FindControl(ref _cmdSave, "cmdSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdCopy;
    public  Sage.Platform.Controls.IButtonControl cmdCopy
    {
        get { return FindControl(ref _cmdCopy, "cmdCopy"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdDelete;
    public  Sage.Platform.Controls.IButtonControl cmdDelete
    {
        get { return FindControl(ref _cmdDelete, "cmdDelete"); }
    }

}

</script>

<script type="text/javascript">
</script>
