<%@ Control Language="C#" ClassName="AddEditAccountingSystem" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="2%" />
            <col width="60%" />
            <col width="18%" />
     <tr>
            <td  colspan="2" >
<asp:Label runat="server" ID="lblFeedDetails" Text="<%$ resources: lblFeedDetails.Text %>"  CssClass="wizardsectiontitle"  />

      </td>
                      <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtEndPointURL_lbl" AssociatedControlID="txtEndPointURL" runat="server" Text="<%$ resources: txtEndPointURL.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtEndPointURL"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtUserName_lbl" AssociatedControlID="txtUserName" runat="server" Text="<%$ resources: txtUserName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtUserName"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPassword_lbl" AssociatedControlID="txtPassword" runat="server" Text="<%$ resources: txtPassword.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPassword"  dojoType="Sage.UI.Controls.TextBox" TextMode="Password"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtStatus_lbl" AssociatedControlID="txtStatus" runat="server" Text="<%$ resources: txtStatus.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtStatus" ReadOnly="true"  Rows="2" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

      </td>
                <td  >
 <asp:Button runat="server" ID="btnTestFeed"
 Text="<%$ resources: btnTestFeed.Caption %>" CssClass="slxbutton"  />
 
      </td>
      </tr>
<tr>
            <td  colspan="2" >
<asp:Label runat="server" ID="lblDisplayName" Text="<%$ resources: lblDisplayName.Text %>"  CssClass="wizardsectiontitle padTop"  />

      </td>
                      <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtDisplayName_lbl" AssociatedControlID="txtDisplayName" runat="server" Text="<%$ resources: txtDisplayName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtDisplayName"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="2" >
<asp:Label runat="server" ID="lblIntegrationOptions" Text="<%$ resources: lblIntegrationOptions.Text %>"  CssClass="wizardsectiontitle padTop"  />

      </td>
                      <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chkbxStatus"  Text="<%$ resources: chkbxStatus.Caption %>"  CssClass=""
LabelPlacement="right"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chbxEmailAuth"  Text="<%$ resources: chbxEmailAuth.Caption %>"  CssClass=""
LabelPlacement="right"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td  colspan="2" >
<asp:Label runat="server" ID="lblSchema" Text="<%$ resources: lblSchema.Text %>"  CssClass="wizardsectiontitle padTop"  />

      </td>
                      <td></td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="cboResources_lbl" AssociatedControlID="cboResources" runat="server" Text="<%$ resources: cboResources.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol select"  > 
<asp:ListBox runat="server" ID="cboResources"  SelectionMode="Single" Rows="1" data-dojo-type="dijit.form.Select"  CssClass="select-control "  >
<asp:ListItem  Text="<%$ resources: cboResources_item0.Text %>"
Value="commodities" />
<asp:ListItem  Text="<%$ resources: cboResources_item1.Text %>"
Value="commodityGroups" />
<asp:ListItem  Text="<%$ resources: cboResources_item2.Text %>"
Value="contacts" />
<asp:ListItem  Text="<%$ resources: cboResources_item3.Text %>"
Value="emails" />
<asp:ListItem  Text="<%$ resources: cboResources_item4.Text %>"
Value="locations" />
<asp:ListItem  Text="<%$ resources: cboResources_item5.Text %>"
Value="phones" />
<asp:ListItem  Text="<%$ resources: cboResources_item6.Text %>"
Value="priceLists" />
<asp:ListItem  Text="<%$ resources: cboResources_item7.Text %>"
Value="postalAddresses" />
<asp:ListItem  Text="<%$ resources: cboResources_item8.Text %>"
Value="prices" />
<asp:ListItem  Text="<%$ resources: cboResources_item9.Text %>"
Value="salesOrders" />
<asp:ListItem  Text="<%$ resources: cboResources_item10.Text %>"
Value="salesOrderLines" />
<asp:ListItem  Text="<%$ resources: cboResources_item11.Text %>"
Value="salesQuotations" />
<asp:ListItem  Text="<%$ resources: cboResources_item12.Text %>"
Value="salesQuotationLines" />
<asp:ListItem  Selected="true" Text="<%$ resources: cboResources_item13.Text %>"
Value="tradingAccounts" />
<asp:ListItem  Text="<%$ resources: cboResources_item14.Text %>"
Value="unitsOfMeasure" />
</asp:ListBox>
  </div>

      </td>
                <td  >
 <asp:Button runat="server" ID="btnResource"
 Text="<%$ resources: btnResource.Caption %>"  ToolTip="<%$ resources: btnResource.ToolTip %>" CssClass="slxbutton"  />
 
      </td>
      </tr>
<tr>
            <td></td>
                <td  >
<SalesLogix:SlxGridView runat="server" ID="grdSchemaDiffs" GridLines="None"
AutoGenerateColumns="false" CellPadding="4" CssClass="datagrid" PagerStyle-CssClass="gridPager"
AlternatingRowStyle-CssClass="rowdk" RowStyle-CssClass="rowlt" SelectedRowStyle-CssClass="rowSelected" ShowEmptyTable="true" EnableViewState="false"
EmptyTableRowText="<%$ resources: grdSchemaDiffs.EmptyTableRowText %>"  ExpandableRows="True" ResizableColumns="True" >
<Columns>
   <asp:BoundField DataField="Property"
      HeaderText="<%$ resources: grdSchemaDiffs.d00e55d0-1703-4be7-9c0a-c334c02b979e.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="SlxPropLength"
      HeaderText="<%$ resources: grdSchemaDiffs.119ffbae-7f63-4a20-b283-6281a0d8d284.ColumnHeading %>"          >
      </asp:BoundField>
    <asp:BoundField DataField="ErpPropLength"
      HeaderText="<%$ resources: grdSchemaDiffs.20419138-d47c-45e3-ad0a-ea283227f2d7.ColumnHeading %>"          >
      </asp:BoundField>
 </Columns>
</SalesLogix:SlxGridView>

<script runat="server" type="text/C#">


</script>

      </td>
                <td></td>
      </tr>
<tr>
            <td></td>
                <td></td>
                <td  >
<asp:Panel runat="server" ID="ctrlstButtons" CssClass="controlslist "
>
   <asp:Button runat="server" ID="cmdOK"
 Text="<%$ resources: cmdOK.Caption %>" CssClass="slxbutton"  />
   
   <asp:Button runat="server" ID="cmdCancel"
 Text="<%$ resources: cmdCancel.Caption %>" CssClass="slxbutton"  />
 
</asp:Panel>
      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="AddEditAccountingSystem_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=AddEditAccountingSystem&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkAddEditAccountingSystemHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="AddEditAccountingSystem" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAppIdMapping); }
}

 private Sage.Platform.WebPortal.Binding.WebEntityListBindingSource _dtsSchemaDiffs;
public Sage.Platform.WebPortal.Binding.WebEntityListBindingSource dtsSchemaDiffs
{ 
  get 
  {
    if (_dtsSchemaDiffs == null)
    {
             _dtsSchemaDiffs = new Sage.Platform.WebPortal.Binding.WebEntityListBindingSource(typeof(Sage.Platform.ComponentModel.ComponentView), 
	    EntityType                     ,"GetSchemaDifferences", System.Reflection.MemberTypes.Method);
            	   	}
 	return _dtsSchemaDiffs;
  }
}

void dtsSchemaDiffs_OnCurrentEntitySet(object sender, EventArgs e) 
{
      if (Visible)
    { 
		if(BindingSource.Current != null)
		{
		
      
        dtsSchemaDiffs.SourceObject = BindingSource.Current;
   		}
    }
   if (Visible)
   {   
      RegisterBindingsWithClient(dtsSchemaDiffs);
   }
}

 



 

protected override void OnAddEntityBindings() {
                    // txtEndPointURL.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtEndPointURLTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndPointURL", txtEndPointURL, "Text");
        BindingSource.Bindings.Add(txtEndPointURLTextBinding);
                    // txtUserName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtUserNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserName", txtUserName, "Text");
        BindingSource.Bindings.Add(txtUserNameTextBinding);
                                // txtDisplayName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtDisplayNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Name", txtDisplayName, "Text");
        BindingSource.Bindings.Add(txtDisplayNameTextBinding);
                       // chkbxStatus.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkbxStatusCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Enabled", chkbxStatus, "Checked");
        BindingSource.Bindings.Add(chkbxStatusCheckedBinding);
                    // chbxEmailAuth.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chbxEmailAuthCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EnableEmailAuth", chbxEmailAuth, "Checked");
        BindingSource.Bindings.Add(chbxEmailAuthCheckedBinding);
                   dtsSchemaDiffs.Bindings.Add(new Sage.Platform.WebPortal.Binding.WebEntityListBinding("GetSchemaDifferences()", grdSchemaDiffs ));
   dtsSchemaDiffs.BindFieldNames = new String[] { "Id","Property","SlxPropLength","ErpPropLength" };
              
     BindingSource.OnCurrentEntitySet += new EventHandler(dtsSchemaDiffs_OnCurrentEntitySet);
    
}
                                                                                                                              
protected void btnTestFeed_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAppIdMapping appIdMapping = BindingSource.Current as Sage.Entity.Interfaces.IAppIdMapping;
appIdMapping.EncryptAccountingSystemPassword(txtPassword.Text);
txtPassword.Attributes["value"] = txtPassword.Text;
appIdMapping.ValidateEndPoint();
txtStatus.Text = appIdMapping.TestAccountingFeed();


}
protected void btnResource_ClickAction(object sender, EventArgs e) {
Sage.SalesLogix.Services.ISessionService sessionService =
    Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISessionService>(true);
Sage.SalesLogix.Services.ISessionState sessionState = sessionService.GetSessionState();
sessionState.Add("resourceKind", cboResources.SelectedValue);
grdSchemaDiffs.EmptyTableRowText = GetLocalResourceObject("grdSchemaDiffs_NoDiff.EmptyTableRowText").ToString();

}
protected void cmdOK_ClickAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("AddEditAccountingSystem.cmdOK_OnClick", methodArgs);
  Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
    if (refresher != null) {
      refresher.RefreshAll();
    }
    else {  
      Response.Redirect(Request.Url.ToString());
    }

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnTestFeed.Click += new EventHandler(btnTestFeed_ClickAction);
btnResource.Click += new EventHandler(btnResource_ClickAction);
cmdOK.Click += new EventHandler(cmdOK_ClickAction);
cmdOK.Click += new EventHandler(DialogService.CloseEventHappened);
cmdCancel.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAppIdMapping appIdMapping = BindingSource.Current as Sage.Entity.Interfaces.IAppIdMapping;
txtStatus.Text = String.Empty;
txtPassword.Attributes.Add("value", Sage.SalesLogix.SLXEncryption.Decrypt(appIdMapping.Password, "SDATAIC"));


}
protected void quickformload1(object sender, EventArgs e) {
//keep seperate so that this action will run on the postback
grdSchemaDiffs.Height = 130;

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(cmdOK);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (dtsSchemaDiffs.SourceObject == null) { dtsSchemaDiffs.SourceObject = BindingSource.Current; }
if (dtsSchemaDiffs.SourceObject == null) { RegisterBindingsWithClient(dtsSchemaDiffs); }
dtsSchemaDiffs.Bind();

ClientBindingMgr.RegisterDialogCancelButton(cmdCancel);
quickformload1(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new AddEditAccountingSystemAdapter(this)); }
}

public class AddEditAccountingSystemAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IAddEditAccountingSystem
{
    public AddEditAccountingSystemAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILabelControl _lblFeedDetails;
    public  Sage.Platform.Controls.ILabelControl lblFeedDetails
    {
        get { return FindControl(ref _lblFeedDetails, "lblFeedDetails"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblDisplayName;
    public  Sage.Platform.Controls.ILabelControl lblDisplayName
    {
        get { return FindControl(ref _lblDisplayName, "lblDisplayName"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblIntegrationOptions;
    public  Sage.Platform.Controls.ILabelControl lblIntegrationOptions
    {
        get { return FindControl(ref _lblIntegrationOptions, "lblIntegrationOptions"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblSchema;
    public  Sage.Platform.Controls.ILabelControl lblSchema
    {
        get { return FindControl(ref _lblSchema, "lblSchema"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtEndPointURL;
    public  Sage.Platform.Controls.ITextBoxControl txtEndPointURL
    {
        get { return FindControl(ref _txtEndPointURL, "txtEndPointURL"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtUserName;
    public  Sage.Platform.Controls.ITextBoxControl txtUserName
    {
        get { return FindControl(ref _txtUserName, "txtUserName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtPassword;
    public  Sage.Platform.Controls.ITextBoxControl txtPassword
    {
        get { return FindControl(ref _txtPassword, "txtPassword"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtStatus;
    public  Sage.Platform.Controls.ITextBoxControl txtStatus
    {
        get { return FindControl(ref _txtStatus, "txtStatus"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtDisplayName;
    public  Sage.Platform.Controls.ITextBoxControl txtDisplayName
    {
        get { return FindControl(ref _txtDisplayName, "txtDisplayName"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkbxStatus;
    public  Sage.Platform.Controls.ICheckBoxControl chkbxStatus
    {
        get { return FindControl(ref _chkbxStatus, "chkbxStatus"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chbxEmailAuth;
    public  Sage.Platform.Controls.ICheckBoxControl chbxEmailAuth
    {
        get { return FindControl(ref _chbxEmailAuth, "chbxEmailAuth"); }
    }
    private Sage.Platform.Controls.IListBoxControl _cboResources;
    public  Sage.Platform.Controls.IListBoxControl cboResources
    {
        get { return FindControl(ref _cboResources, "cboResources"); }
    }
    private Sage.Platform.Controls.IDataGridControl _grdSchemaDiffs;
    public  Sage.Platform.Controls.IDataGridControl grdSchemaDiffs
    {
        get { return FindControl(ref _grdSchemaDiffs, "grdSchemaDiffs"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnTestFeed;
    public  Sage.Platform.Controls.IButtonControl btnTestFeed
    {
        get { return FindControl(ref _btnTestFeed, "btnTestFeed"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnResource;
    public  Sage.Platform.Controls.IButtonControl btnResource
    {
        get { return FindControl(ref _btnResource, "btnResource"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstButtons;
    public  Sage.Platform.Controls.IControlsListControl ctrlstButtons
    {
        get { return FindControl(ref _ctrlstButtons, "ctrlstButtons"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdOK;
    public  Sage.Platform.Controls.IButtonControl cmdOK
    {
        get { return FindControl(ref _cmdOK, "cmdOK"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdCancel;
    public  Sage.Platform.Controls.IButtonControl cmdCancel
    {
        get { return FindControl(ref _cmdCancel, "cmdCancel"); }
    }
    private Sage.Platform.Controls.IDataSourceControl _dtsSchemaDiffs;
    public  Sage.Platform.Controls.IDataSourceControl dtsSchemaDiffs
    {
        get { return FindControl(ref _dtsSchemaDiffs, "dtsSchemaDiffs"); }
    }

    public  void cmdOK_OnClick(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("AddEditAccountingSystem.cmdOK_OnClick", methodArgs);
    }
}

</script>

<script type="text/javascript">
</script>
