<%@ Control Language="C#" ClassName="SlxEndPointDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSlxEndPoint_lbl" AssociatedControlID="txtSlxEndPoint" runat="server" Text="<%$ resources: txtSlxEndPoint.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSlxEndPoint"  dojoType="Sage.UI.Controls.TextBox" MaxLength="256"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chkRestrictToSingleAccount"  Text="<%$ resources: chkRestrictToSingleAccount.Caption %>"  CssClass=""
LabelPlacement="right"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="QFTextBox_lbl" AssociatedControlID="QFTextBox" runat="server" Text="<%$ resources: QFTextBox.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="QFTextBox"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
                <td  >
<div class="slxlabel  alignleft  checkbox ">

  <SalesLogix:SLXCheckBox runat="server" ID="chkManageUI"  Text="<%$ resources: chkManageUI.Caption %>"  CssClass=""
LabelPlacement="right"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtPassword_lbl" AssociatedControlID="txtPassword" runat="server" Text="<%$ resources: txtPassword.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtPassword"  dojoType="Sage.UI.Controls.TextBox" MaxLength="128" TextMode="Password"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtName_lbl" AssociatedControlID="txtName" runat="server" Text="<%$ resources: txtName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtName"  dojoType="Sage.UI.Controls.TextBox" MaxLength="128"  />
  </div>

      </td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="SlxEndPointDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="btnSave"
 AlternateText="<%$ resources: btnSave.Caption %>"  ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=SlxEndPointDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkSlxEndPointDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="SlxEndPointDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IAppIdMapping); }
}

 

protected override void OnAddEntityBindings() {
                 // txtSlxEndPoint.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSlxEndPointTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndPointURL", txtSlxEndPoint, "Text");
        BindingSource.Bindings.Add(txtSlxEndPointTextBinding);
                    // chkRestrictToSingleAccount.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkRestrictToSingleAccountCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RestrictToSingleAccount", chkRestrictToSingleAccount, "Checked");
        BindingSource.Bindings.Add(chkRestrictToSingleAccountCheckedBinding);
                    // QFTextBox.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding QFTextBoxTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserName", QFTextBox, "Text");
        BindingSource.Bindings.Add(QFTextBoxTextBinding);
                    // chkManageUI.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkManageUICheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ERPManagesSO", chkManageUI, "Checked");
        BindingSource.Bindings.Add(chkManageUICheckedBinding);
                       // txtName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Name", txtName, "Text");
        BindingSource.Bindings.Add(txtNameTextBinding);
    
   
    }
                                          
protected void btnSave_ClickAction(object sender, EventArgs e) {
Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
Object[] methodArgs = new Object[] { FormAdapter, e };
lib.Execute("SlxEndPointDetails.btnSave_OnClick", methodArgs);

}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
btnSave.Click += new ImageClickEventHandler(DialogService.CloseEventHappened);
btnSave.Click += new ImageClickEventHandler(Refresh);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.IAppIdMapping appIdMapping = BindingSource.Current as Sage.Entity.Interfaces.IAppIdMapping;
txtPassword.Attributes.Add("value", Sage.SalesLogix.SLXEncryption.Decrypt(appIdMapping.Password, "SDATAIC"));

}
protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(btnSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
quickformload0(this, EventArgs.Empty);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new SlxEndPointDetailsAdapter(this)); }
}

public class SlxEndPointDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ISlxEndPointDetails
{
    public SlxEndPointDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtSlxEndPoint;
    public  Sage.Platform.Controls.ITextBoxControl txtSlxEndPoint
    {
        get { return FindControl(ref _txtSlxEndPoint, "txtSlxEndPoint"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _QFTextBox;
    public  Sage.Platform.Controls.ITextBoxControl QFTextBox
    {
        get { return FindControl(ref _QFTextBox, "QFTextBox"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtPassword;
    public  Sage.Platform.Controls.ITextBoxControl txtPassword
    {
        get { return FindControl(ref _txtPassword, "txtPassword"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtName;
    public  Sage.Platform.Controls.ITextBoxControl txtName
    {
        get { return FindControl(ref _txtName, "txtName"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkRestrictToSingleAccount;
    public  Sage.Platform.Controls.ICheckBoxControl chkRestrictToSingleAccount
    {
        get { return FindControl(ref _chkRestrictToSingleAccount, "chkRestrictToSingleAccount"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkManageUI;
    public  Sage.Platform.Controls.ICheckBoxControl chkManageUI
    {
        get { return FindControl(ref _chkManageUI, "chkManageUI"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }

    public  void btnSave_OnClick(System.EventArgs e)
    {
        Sage.Platform.DynamicMethod.DynamicMethodLibrary lib = Sage.Platform.Orm.DynamicMethodLibraryHelper.Instance;
        Object[] methodArgs = new Object[] { this, e };
        lib.Execute("SlxEndPointDetails.btnSave_OnClick", methodArgs);
    }
}

</script>

<script type="text/javascript">
</script>
