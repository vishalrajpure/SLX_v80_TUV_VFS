<%@ Control Language="C#" ClassName="TicketExtendedDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
            <col width="33%" />
     <tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtSubject_lbl" AssociatedControlID="txtSubject" runat="server" Text="<%$ resources: txtSubject.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtSubject"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                      <td></td>
      </tr>
<tr>
            <td  colspan="2" >
<asp:Panel runat="server" ID="ctrlstNotes" CssClass="controlslist "
>
   <div class="twocollbl alignleft" >
   <asp:Label ID="txtProblem_lbl" AssociatedControlID="txtProblem" runat="server" Text="<%$ resources: txtProblem.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtProblem"  Rows="7" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

   <asp:ImageButton runat="server" ID="btnProblemTimestamp"
 ToolTip="<%$ resources: btnProblemTimestamp.ToolTip %>" CssClass="qfButtonContainer" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
   <asp:ImageButton runat="server" ID="btnProblemSpeedSearch"
 ToolTip="<%$ resources: btnProblemSpeedSearch.ToolTip %>" CssClass="qfButtonContainer" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=SpeedSearch_16x16"  />
 
  <SalesLogix:LookupControl runat="server" ID="lueStandardProblem"  ToolTip="<%$ resources: lueStandardProblem.ToolTip %>" LookupEntityName="TicketProblemType" LookupEntityTypeName="Sage.Entity.Interfaces.ITicketProblemType, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="ButtonOnly" AutoPostBack="true" LookupImageURL="~/ImageResource.axd?scope=global&type=Global_Images&key=Find_16x16"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueStandardProblem.LookupProperties.Area.PropertyHeader %>" PropertyName="Area" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueStandardProblem.LookupProperties.Category.PropertyHeader %>" PropertyName="Category" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueStandardProblem.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueStandardProblem.LookupProperties.Issue.PropertyHeader %>" PropertyName="Issue" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
 

</asp:Panel>
      </td>
                      <td></td>
      </tr>
<tr>
            <td  colspan="2" >
<asp:Panel runat="server" ID="ctrlstResolution" CssClass="controlslist "
>
   <div class="twocollbl alignleft" >
   <asp:Label ID="txtResolution_lbl" AssociatedControlID="txtResolution" runat="server" Text="<%$ resources: txtResolution.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtResolution"  Rows="7" TextMode="MultiLine" Columns="40" dojoType="Sage.UI.Controls.SimpleTextarea"  />
  </div>

   <asp:ImageButton runat="server" ID="btnResolutionTimestamp"
 ToolTip="<%$ resources: btnResolutionTimestamp.ToolTip %>" CssClass="qfButtonContainer" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=User_Date_Stamp_16x16"  />
 
   <asp:ImageButton runat="server" ID="btnResolutionSpeedSearch"
 ToolTip="<%$ resources: btnResolutionSpeedSearch.ToolTip %>" CssClass="qfButtonContainer" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=SpeedSearch_16x16"  />
 
  <SalesLogix:LookupControl runat="server" ID="lueStandardResolution"  ToolTip="<%$ resources: lueStandardResolution.ToolTip %>" LookupEntityName="TicketSolutionType" LookupEntityTypeName="Sage.Entity.Interfaces.ITicketSolutionType, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" LookupDisplayMode="ButtonOnly" AutoPostBack="true" LookupImageURL="~/ImageResource.axd?scope=global&type=Global_Images&key=Find_16x16"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueStandardResolution.LookupProperties.Description.PropertyHeader %>" PropertyName="Description" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
 

</asp:Panel>
      </td>
                      <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="TicketExtendedDetails_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="cmdSave"
ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=TicketExtendedDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkTicketExtendedDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="TicketExtendedDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.ITicket); }
}

 

protected override void OnAddEntityBindings() {
                 // txtSubject.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSubjectTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Subject", txtSubject, "Text");
        BindingSource.Bindings.Add(txtSubjectTextBinding);
                       // txtProblem.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtProblemTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TicketProblem.Notes", txtProblem, "Text");
        BindingSource.Bindings.Add(txtProblemTextBinding);
                                // txtResolution.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtResolutionTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("TicketSolution.Notes", txtResolution, "Text");
        BindingSource.Bindings.Add(txtResolutionTextBinding);
             
   
    }
                                                                             
protected void btnProblemTimestamp_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ITicket>("Ticket.AddTicketProblemTimeStamp", objarray);

  
}
protected void btnProblemSpeedSearch_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
    DialogService.SetSpecs(200, 200, 600, 900, "SpeedSearch", "", true);
	DialogService.DialogParameters.Remove("ChildName");
    DialogService.DialogParameters.Remove("EntityProperty");
    DialogService.DialogParameters.Add("ChildName", "TicketProblem");
    DialogService.DialogParameters.Add("EntityProperty", "Notes");
    DialogService.ShowDialog();
}

}
protected void lueStandardProblem_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.ITicketProblemType problem =  this.lueStandardProblem.LookupResultValue as Sage.Entity.Interfaces.ITicketProblemType;
Sage.Entity.Interfaces.ITicket _entity = BindingSource.Current as Sage.Entity.Interfaces.ITicket;
if (this.txtProblem.Text.Length > 0)
    _entity.TicketProblem.Notes += "\n\n";
_entity.TicketProblem.Notes += problem.Notes;
System.Collections.Generic.IList<Sage.Entity.Interfaces.ITicketProblemSolutionType> problemSolutions = new System.Collections.Generic.List<Sage.Entity.Interfaces.ITicketProblemSolutionType>(problem.TicketProblemSolutionTypes);
if (problemSolutions.Count == 1)
{
    if (this.txtResolution.Text.Length > 0) _entity.TicketSolution.Notes += "\n\n";
    _entity.TicketSolution.Notes += problemSolutions[0].TicketSolutionType.Notes;  
}

}
protected void btnResolutionTimestamp_ClickAction(object sender, EventArgs e) {
      object[] objarray = new object[] { this.BindingSource.Current };
     Sage.Platform.EntityFactory.Execute<Sage.Entity.Interfaces.ITicket>("Ticket.AddTicketSolutionTimeStamp", objarray);

  
}
protected void btnResolutionSpeedSearch_ClickAction(object sender, EventArgs e) {
if (DialogService != null)
{
    DialogService.SetSpecs(200, 200, 600, 900, "SpeedSearch", "", true);
	DialogService.DialogParameters.Remove("ChildName");
    DialogService.DialogParameters.Remove("EntityProperty");
    DialogService.DialogParameters.Add("ChildName", "TicketSolution");
    DialogService.DialogParameters.Add("EntityProperty", "Notes");
    DialogService.ShowDialog();
}

}
protected void lueStandardResolution_ChangeAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.ITicketSolutionType resolution = this.lueStandardResolution.LookupResultValue as Sage.Entity.Interfaces.ITicketSolutionType;
Sage.Entity.Interfaces.ITicket _entity = BindingSource.Current as Sage.Entity.Interfaces.ITicket;
if (this.txtResolution.Text.Length > 0)
    _entity.TicketSolution.Notes += "\n\n";
_entity.TicketSolution.Notes += resolution.Notes;

}
protected void cmdSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.ITicket _entity = BindingSource.Current as Sage.Entity.Interfaces.ITicket;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 btnProblemTimestamp.Click += new ImageClickEventHandler(btnProblemTimestamp_ClickAction);
btnProblemSpeedSearch.Click += new ImageClickEventHandler(btnProblemSpeedSearch_ClickAction);
lueStandardProblem.LookupResultValueChanged += new EventHandler(lueStandardProblem_ChangeAction);
btnResolutionTimestamp.Click += new ImageClickEventHandler(btnResolutionTimestamp_ClickAction);
btnResolutionSpeedSearch.Click += new ImageClickEventHandler(btnResolutionSpeedSearch_ClickAction);
lueStandardResolution.LookupResultValueChanged += new EventHandler(lueStandardResolution_ChangeAction);
cmdSave.Click += new ImageClickEventHandler(cmdSave_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
var epage = Page as Sage.Platform.WebPortal.EntityPage;
if (epage != null && epage.IsInsertMode)
{
	cmdSave.Visible = false;
}

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterBoundControl(lueStandardProblem);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterBoundControl(lueStandardResolution);

ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
ClientBindingMgr.RegisterSaveButton(cmdSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new TicketExtendedDetailsAdapter(this)); }
}

public class TicketExtendedDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ITicketExtendedDetails
{
    public TicketExtendedDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtSubject;
    public  Sage.Platform.Controls.ITextBoxControl txtSubject
    {
        get { return FindControl(ref _txtSubject, "txtSubject"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstNotes;
    public  Sage.Platform.Controls.IControlsListControl ctrlstNotes
    {
        get { return FindControl(ref _ctrlstNotes, "ctrlstNotes"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtProblem;
    public  Sage.Platform.Controls.ITextBoxControl txtProblem
    {
        get { return FindControl(ref _txtProblem, "txtProblem"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnProblemTimestamp;
    public  Sage.Platform.Controls.IButtonControl btnProblemTimestamp
    {
        get { return FindControl(ref _btnProblemTimestamp, "btnProblemTimestamp"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnProblemSpeedSearch;
    public  Sage.Platform.Controls.IButtonControl btnProblemSpeedSearch
    {
        get { return FindControl(ref _btnProblemSpeedSearch, "btnProblemSpeedSearch"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueStandardProblem;
    public  Sage.Platform.Controls.ILookupControl lueStandardProblem
    {
        get { return FindControl(ref _lueStandardProblem, "lueStandardProblem"); }
    }
    private Sage.Platform.Controls.IControlsListControl _ctrlstResolution;
    public  Sage.Platform.Controls.IControlsListControl ctrlstResolution
    {
        get { return FindControl(ref _ctrlstResolution, "ctrlstResolution"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtResolution;
    public  Sage.Platform.Controls.ITextBoxControl txtResolution
    {
        get { return FindControl(ref _txtResolution, "txtResolution"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnResolutionTimestamp;
    public  Sage.Platform.Controls.IButtonControl btnResolutionTimestamp
    {
        get { return FindControl(ref _btnResolutionTimestamp, "btnResolutionTimestamp"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnResolutionSpeedSearch;
    public  Sage.Platform.Controls.IButtonControl btnResolutionSpeedSearch
    {
        get { return FindControl(ref _btnResolutionSpeedSearch, "btnResolutionSpeedSearch"); }
    }
    private Sage.Platform.Controls.ILookupControl _lueStandardResolution;
    public  Sage.Platform.Controls.ILookupControl lueStandardResolution
    {
        get { return FindControl(ref _lueStandardResolution, "lueStandardResolution"); }
    }
    private Sage.Platform.Controls.IButtonControl _cmdSave;
    public  Sage.Platform.Controls.IButtonControl cmdSave
    {
        get { return FindControl(ref _cmdSave, "cmdSave"); }
    }

}

</script>

<script type="text/javascript">
</script>
